using System;
using System.Text;
using System.Runtime.InteropServices;
using Steam4NET;

namespace Steam4NET
{
	public enum EServerMode
	{
		eServerModeInvalid = 0,
		eServerModeNoAuthentication = 1,
		eServerModeAuthentication = 2,
		eServerModeAuthenticationAndSecure = 3,
	}
	
	public enum EFriendFlags
	{
		k_EFriendFlagNone = 0,
		k_EFriendFlagBlocked = 1,
		k_EFriendFlagFriendshipRequested = 2,
		k_EFriendFlagImmediate = 4,
		k_EFriendFlagClanMember = 8,
		k_EFriendFlagOnGameServer = 16,
		k_EFriendFlagRequestingFriendship = 128,
		k_EFriendFlagRequestingInfo = 256,
		k_EFriendFlagIgnored = 512,
		k_EFriendFlagIgnoredFriend = 1024,
		k_EFriendFlagAll = 65535,
	}
	
	public enum EPersonaChange
	{
		k_EPersonaChangeName = 1,
		k_EPersonaChangeStatus = 2,
		k_EPersonaChangeComeOnline = 4,
		k_EPersonaChangeGoneOffline = 8,
		k_EPersonaChangeGamePlayed = 16,
		k_EPersonaChangeGameServer = 32,
		k_EPersonaChangeAvatar = 64,
		k_EPersonaChangeJoinedSource = 128,
		k_EPersonaChangeLeftSource = 256,
		k_EPersonaChangeRelationshipChanged = 512,
		k_EPersonaChangeNameFirstSet = 1024,
	}
	
	public enum ESNetSocketState
	{
		k_ESNetSocketStateInvalid = 0,
		k_ESNetSocketStateConnected = 1,
		k_ESNetSocketStateInitiated = 10,
		k_ESNetSocketStateLocalCandidatesFound = 11,
		k_ESNetSocketStateReceivedRemoteCandidates = 12,
		k_ESNetSocketStateChallengeHandshake = 15,
		k_ESNetSocketStateDisconnecting = 21,
		k_ESNetSocketStateLocalDisconnect = 22,
		k_ESNetSocketStateTimeoutDuringConnect = 23,
		k_ESNetSocketStateRemoteEndDisconnected = 24,
		k_ESNetSocketStateConnectionBroken = 25,
	}
	
	public enum ERegistrySubTree
	{
		k_ERegistrySubTreeNews = 0,
		k_ERegistrySubTreeApps = 1,
		k_ERegistrySubTreeSubscriptions = 2,
		k_ERegistrySubTreeGameServers = 3,
		k_ERegistrySubTreeFriends = 4,
		k_ERegistrySubTreeSystem = 5,
		k_ERegistrySubTreeAppOwnershipTickets = 6,
		k_ERegistrySubTreeLegacyCDKeys = 7,
	}
	
	public enum EGameStatsAccountType
	{
		k_EGameStatsAccountType_Steam = 1,
		k_EGameStatsAccountType_Xbox = 2,
		k_EGameStatsAccountType_SteamGameServer = 3,
	}
	
	public enum EChatAction
	{
		k_EChatActionInviteChat = 1,
		k_EChatActionKick = 2,
		k_EChatActionBan = 3,
		k_EChatActionUnBan = 4,
		k_EChatActionStartVoiceSpeak = 5,
		k_EChatActionEndVoiceSpeak = 6,
		k_EChatActionLockChat = 7,
		k_EChatActionUnlockChat = 8,
		k_EChatActionCloseChat = 9,
		k_EChatActionSetJoinable = 10,
		k_EChatActionSetUnjoinable = 11,
		k_EChatActionSetOwner = 12,
		k_EChatActionSetInvisibleToFriends = 13,
		k_EChatActionSetVisibleToFriends = 14,
		k_EChatActionSetModerated = 15,
		k_EChatActionSetUnmoderated = 16,
	}
	
	public enum EHTTPMethod
	{
		k_EHTTPMethodInvalid = 0,
		k_EHTTPMethodGET = 1,
		k_EHTTPMethodHEAD = 2,
		k_EHTTPMethodPOST = 3,
	}
	
	public enum EPurchaseResultDetail
	{
		k_EPurchaseResultNoDetail = 0,
		k_EPurchaseResultAVSFailure = 1,
		k_EPurchaseResultInsufficientFunds = 2,
		k_EPurchaseResultContactSupport = 3,
		k_EPurchaseResultTimeout = 4,
		k_EPurchaseResultInvalidPackage = 5,
		k_EPurchaseResultInvalidPaymentMethod = 6,
		k_EPurchaseResultInvalidData = 7,
		k_EPurchaseResultOthersInProgress = 8,
		k_EPurchaseResultAlreadyPurchased = 9,
		k_EPurchaseResultWrongPrice = 10,
		k_EPurchaseResultFraudCheckFailed = 11,
		k_EPurchaseResultCancelledByUser = 12,
		k_EPurchaseResultRestrictedCountry = 13,
		k_EPurchaseResultBadActivationCode = 14,
		k_EPurchaseResultDuplicateActivationCode = 15,
		k_EPurchaseResultUseOtherPaymentMethod = 16,
		k_EPurchaseResultUseOtherFundingSource = 17,
		k_EPurchaseResultInvalidShippingAddress = 18,
		k_EPurchaseResultRegionNotSupported = 19,
		k_EPurchaseResultAcctIsBlocked = 20,
		k_EPurchaseResultAcctNotVerified = 21,
		k_EPurchaseResultInvalidAccount = 22,
		k_EPurchaseResultStoreBillingCountryMismatch = 23,
		k_EPurchaseResultDoesNotOwnRequiredApp = 24,
		k_EPurchaseResultCanceledByNewTransaction = 25,
		k_EPurchaseResultForceCanceledPending = 26,
		k_EPurchaseResultFailCurrencyTransProvider = 27,
		k_EPurchaseResultFailedCyberCafe = 28,
		k_EPurchaseResultNeedsPreApproval = 29,
		k_EPurchaseResultPreApprovalDenied = 30,
	}
	
	public enum EScreenshotPrivacy
	{
		k_EScreenshotPrivacyPrivate = 2,
		k_EScreenshotPrivacyFriendsOnly = 4,
		k_EScreenshotPrivacyPublic = 8,
	}
	
	public enum EDenyReason
	{
		k_EDenyInvalidVersion = 1,
		k_EDenyGeneric = 2,
		k_EDenyNotLoggedOn = 3,
		k_EDenyNoLicense = 4,
		k_EDenyCheater = 5,
		k_EDenyLoggedInElseWhere = 6,
		k_EDenyUnknownText = 7,
		k_EDenyIncompatibleAnticheat = 8,
		k_EDenyMemoryCorruption = 9,
		k_EDenyIncompatibleSoftware = 10,
		k_EDenySteamConnectionLost = 11,
		k_EDenySteamConnectionError = 12,
		k_EDenySteamResponseTimedOut = 13,
		k_EDenySteamValidationStalled = 14,
		k_EDenySteamOwnerLeftGuestUser = 15,
	}
	
	public enum EUniverse
	{
		k_EUniverseInvalid = 0,
		k_EUniversePublic = 1,
		k_EUniverseBeta = 2,
		k_EUniverseInternal = 3,
		k_EUniverseDev = 4,
		k_EUniverseRC = 5,
		k_EUniverseMax = 6,
	}
	
	public enum ELeaderboardSortMethod
	{
		k_ELeaderboardSortMethodNone = 0,
		k_ELeaderboardSortMethodAscending = 1,
		k_ELeaderboardSortMethodDescending = 2,
	}
	
	public enum ESystemIMType
	{
		k_ESystemIMRawText = 0,
		k_ESystemIMInvalidCard = 1,
		k_ESystemIMRecurringPurchaseFailed = 2,
		k_ESystemIMCardWillExpire = 3,
		k_ESystemIMSubscriptionExpired = 4,
		k_ESystemIMGuestPassReceived = 5,
		k_ESystemIMGuestPassGranted = 6,
		k_ESystemIMGiftRevoked = 7,
		k_ESystemIMTypeMax = 8,
	}
	
	public enum ELobbyDistanceFilter
	{
		k_ELobbyDistanceFilterClose = 0,
		k_ELobbyDistanceFilterDefault = 1,
		k_ELobbyDistanceFilterFar = 2,
		k_ELobbyDistanceFilterWorldwide = 3,
	}
	
	public enum ERemoteStorageSyncState
	{
		k_ERemoteSyncStateUnknown = 0,
		k_ERemoteSyncStateSynchronized = 1,
		k_ERemoteSyncStateSyncInProgress = 2,
		k_ERemoteSyncStatePendingChangesInCloud = 3,
		k_ERemoteSyncStatePendingChangesLocally = 4,
		k_ERemoteSyncStatePendingChangesInCloudAndLocally = 5,
	}
	
	public enum EBeginAuthSessionResult
	{
		k_EBeginAuthSessionResultOK = 0,
		k_EBeginAuthSessionResultInvalidTicket = 1,
		k_EBeginAuthSessionResultDuplicateRequest = 2,
		k_EBeginAuthSessionResultInvalidVersion = 3,
		k_EBeginAuthSessionResultGameMismatch = 4,
		k_EBeginAuthSessionResultExpiredTicket = 5,
	}
	
	public enum ESNetSocketConnectionType
	{
		k_ESNetSocketConnectionTypeNotConnected = 0,
		k_ESNetSocketConnectionTypeUDP = 1,
		k_ESNetSocketConnectionTypeUDPRelay = 2,
	}
	
	public enum ESteamUsageEvent
	{
		k_ESteamUsageEventMarketingMessageView = 1,
		k_ESteamUsageEventHardwareSurvey = 2,
		k_ESteamUsageEventDownloadStarted = 3,
		k_ESteamUsageEventLocalizedAudioChange = 4,
	}
	
	public enum ENotificationPosition
	{
		k_EPositionTopLeft = 0,
		k_EPositionTopRight = 1,
		k_EPositionBottomLeft = 2,
		k_EPositionBottomRight = 3,
	}
	
	public enum EAccountType
	{
		k_EAccountTypeInvalid = 0,
		k_EAccountTypeIndividual = 1,
		k_EAccountTypeMultiseat = 2,
		k_EAccountTypeGameServer = 3,
		k_EAccountTypeAnonGameServer = 4,
		k_EAccountTypePending = 5,
		k_EAccountTypeContentServer = 6,
		k_EAccountTypeClan = 7,
		k_EAccountTypeChat = 8,
		k_EAccountTypeP2PSuperSeeder = 9,
		k_EAccountTypeAnonUser = 10,
		k_EAccountTypeMax = 11,
	}
	
	public enum ESteamSubscriptionBillingInfoType
	{
		ePaymentCardInfo = 1,
		ePrepurchasedInfo = 2,
		eAccountBillingInfo = 3,
		eExternalBillingInfo = 4,
		ePaymentCardReceipt = 5,
		ePrepurchaseReceipt = 6,
		eEmptyReceipt = 7,
	}
	
	public enum EBillingType
	{
		eNoCost = 0,
		eBillOnceOnly = 1,
		eBillMonthly = 2,
		eProofOfPrepurchaseOnly = 3,
		eGuestPass = 4,
		eHardwarePromo = 5,
		eGift = 6,
		eAutoGrant = 7,
		eNumBillingTypes = 8,
	}
	
	public enum EChatSteamIDInstanceFlags
	{
		k_EChatAccountInstanceMask = 4095,
		k_EChatInstanceFlagClan = 524288,
		k_EChatInstanceFlagLobby = 262144,
		k_EChatInstanceFlagMMSLobby = 131072,
	}
	
	public enum ESteamServerType
	{
		eSteamValveCDKeyValidationServer = 0,
		eSteamHalfLifeMasterServer = 1,
		eSteamFriendsServer = 2,
		eSteamCSERServer = 3,
		eSteamHalfLife2MasterServer = 4,
		eSteamRDKFMasterServer = 5,
		eMaxServerTypes = 6,
	}
	
	public enum ECreditCardType
	{
		k_ECreditCardTypeUnknown = 0,
		k_ECreditCardTypeVisa = 1,
		k_ECreditCardTypeMaster = 2,
		k_ECreditCardTypeAmericanExpress = 3,
		k_ECreditCardTypeDiscover = 4,
		k_ECreditCardTypeDinersClub = 5,
		k_ECreditCardTypeJCB = 6,
	}
	
	public enum ELeaderboardDisplayType
	{
		k_ELeaderboardDisplayTypeNone = 0,
		k_ELeaderboardDisplayTypeNumeric = 1,
		k_ELeaderboardDisplayTypeTimeSeconds = 2,
		k_ELeaderboardDisplayTypeTimeMilliSeconds = 3,
	}
	
	public enum ECurrencyCode
	{
		k_ECurrencyCodeInvalid = 0,
		k_ECurrencyCodeUSD = 1,
		k_ECurrencyCodeGBP = 2,
		k_ECurrencyCodeEUR = 3,
		k_ECurrencyCodeMax = 4,
	}
	
	public enum ESteamAPICallFailure
	{
		k_ESteamAPICallFailureNone = -1,
		k_ESteamAPICallFailureSteamGone = 0,
		k_ESteamAPICallFailureNetworkFailure = 1,
		k_ESteamAPICallFailureInvalidHandle = 2,
		k_ESteamAPICallFailureMismatchedCallback = 3,
	}
	
	public enum EGCResults
	{
		k_EGCResultOK = 0,
		k_EGCResultNoMessage = 1,
		k_EGCResultBufferTooSmall = 2,
		k_EGCResultNotLoggedOn = 3,
		k_EGCResultInvalidMessage = 4,
	}
	
	public enum ESteamUserStatType
	{
		k_ESteamUserStatTypeINVALID = 0,
		k_ESteamUserStatTypeINT = 1,
		k_ESteamUserStatTypeFLOAT = 2,
		k_ESteamUserStatTypeAVGRATE = 3,
		k_ESteamUserStatTypeACHIEVEMENTS = 4,
		k_ESteamUserStatTypeGROUPACHIEVEMENTS = 5,
	}
	
	public enum EDepotBuildStatus
	{
		k_EDepotBuildStatusInvalid = -1,
		k_EDepotBuildStatusFailed = 0,
		k_EDepotBuildStatusProcessingConfig = 1,
		k_EDepotBuildStatusProcessingData = 2,
		k_EDepotBuildStatusUploadingData = 3,
		k_EDepotBuildStatusCompleted = 4,
	}
	
	public enum ELicenseFlags
	{
		k_ELicenseFlagRenew = 1,
		k_ELicenseFlagRenewalFailed = 2,
		k_ELicenseFlagPending = 4,
		k_ELicenseFlagExpired = 8,
		k_ELicenseFlagCancelledByUser = 16,
		k_ELicenseFlagCancelledByAdmin = 32,
	}
	
	public enum EAppState
	{
		k_EAppStateInvalid = 0,
		k_EAppStateUninstalled = 1,
		k_EAppStateUpdateRequired = 2,
		k_EAppStateFullyInstalled = 4,
		k_EAppStateDataEncrypted = 8,
		k_EAppStateDataLocked = 16,
		k_EAppStateDataCorrupt = 32,
		k_EAppStateAppRunning = 64,
		k_EAppStateUpdateRunning = 256,
		k_EAppStateUpdatePaused = 512,
		k_EAppStateUpdateSuspended = 1024,
		k_EAppStateUninstalling = 2048,
		k_EAppStateReconfiguring = 4096,
		k_EAppStateDownloading = 8192,
		k_EAppStateStaging = 16384,
		k_EAppStateCommitting = 32768,
	}
	
	public enum ECheckFileSignature
	{
		k_ECheckFileSignatureInvalidSignature = 0,
		k_ECheckFileSignatureValidSignature = 1,
		k_ECheckFileSignatureFileNotFound = 2,
		k_ECheckFileSignatureNoSignaturesFoundForThisApp = 3,
		k_ECheckFileSignatureNoSignaturesFoundForThisFile = 4,
	}
	
	public enum ELobbyType
	{
		k_ELobbyTypeFriendsOnly = 1,
		k_ELobbyTypePublic = 2,
		k_ELobbyTypeInvisible = 3,
	}
	
	public enum EUserHasLicenseForAppResult
	{
		k_EUserHasLicenseResultHasLicense = 0,
		k_EUserHasLicenseResultDoesNotHaveLicense = 1,
		k_EUserHasLicenseResultNoAuth = 2,
	}
	
	
	public enum EChatRoomType
	{
		k_EChatRoomTypeFriend = 1,
		k_EChatRoomTypeMUC = 2,
		k_EChatRoomTypeLobby = 3,
	}
	
	public enum EPurchaseStatus
	{
		k_EPurchasePending = 0,
		k_EPurchaseSucceeded = 1,
		k_EPurchaseFailed = 2,
		k_EPurchaseRefunded = 3,
		k_EPurchaseInit = 4,
		k_EPurchaseChargedback = 5,
		k_EPurchaseRevoked = 6,
		k_EPurchaseInDispute = 7,
	}
	
	public enum ETFTradeResult
	{
		k_ETFTradeResultOk = 0,
		k_ETFTradeResultCanceled = 1,
		k_ETFTradeResultStaleInventory = 2,
		k_ETFTradeResultUntradeable = 3,
		k_ETFTradeResultNoItems = 4,
		k_ETFTradeResultDisabled = 5,
	}
	
	public enum EFriendMsgType
	{
		k_EFriendMsgTypeChat = 1,
		k_EFriendMsgTypeTyping = 2,
		k_EFriendMsgTypeInvite = 3,
		k_EFriendMsgTypeChatSent = 4,
	}
	
	public enum ESteamPaymentCardType
	{
		eVisa = 1,
		eMaster = 2,
		eAmericanExpress = 3,
		eDiscover = 4,
		eDinnersClub = 5,
		eJCB = 6,
	}
	
	public enum EConfigStore
	{
		k_EConfigStoreInvalid = 0,
		k_EConfigStoreInstall = 1,
		k_EConfigStoreUserRoaming = 2,
		k_EConfigStoreUserLocal = 3,
		k_EConfigStoreMax = 4,
	}
	
	public enum EFriendRelationship
	{
		k_EFriendRelationshipNone = 0,
		k_EFriendRelationshipBlocked = 1,
		k_EFriendRelationshipRequestRecipient = 2,
		k_EFriendRelationshipFriend = 3,
		k_EFriendRelationshipRequestInitiator = 4,
		k_EFriendRelationshipIgnored = 5,
		k_EFriendRelationshipIgnoredFriend = 6,
	}
	
	public enum ENatType
	{
		eNatTypeUntested = 0,
		eNatTypeTestFailed = 1,
		eNatTypeNoUDP = 2,
		eNatTypeOpenInternet = 3,
		eNatTypeFullCone = 4,
		eNatTypeRestrictedCone = 5,
		eNatTypePortRestrictedCone = 6,
		eNatTypeUnspecified = 7,
		eNatTypeSymmetric = 8,
		eNatTypeSymmetricFirewall = 9,
		eNatTypeCount = 10,
	}
	
	public enum EMatchMakingServerResponse
	{
		eServerResponded = 0,
		eServerFailedToRespond = 1,
		eNoServersListedOnMasterServer = 2,
	}
	
	public enum ELobbyComparison
	{
		k_ELobbyComparisonEqualToOrLessThan = -2,
		k_ELobbyComparisonLessThan = -1,
		k_ELobbyComparisonEqual = 0,
		k_ELobbyComparisonGreaterThan = 1,
		k_ELobbyComparisonEqualToOrGreaterThan = 2,
		k_ELobbyComparisonNotEqual = 3,
	}
	
	public enum EGameConnectSteamResponse
	{
		k_EGameConnectSteamResponse_WaitingForResponse = 0,
		k_EGameConnectSteamResponse_AuthorizedToPlay = 1,
		k_EGameConnectSteamResponse_Denied = 2,
		k_EGameConnectSteamResponse_ExceededReasonableTime_StillWaiting = 3,
	}
	
	public enum EChatActionResult
	{
		k_EChatActionResultSuccess = 1,
		k_EChatActionResultError = 2,
		k_EChatActionResultNotPermitted = 3,
		k_EChatActionResultNotAllowedOnClanMember = 4,
		k_EChatActionResultNotAllowedOnBannedUser = 5,
		k_EChatActionResultNotAllowedOnChatOwner = 6,
		k_EChatActionResultNotAllowedOnSelf = 7,
		k_EChatActionResultChatDoesntExist = 8,
		k_EChatActionResultChatFull = 9,
		k_EChatActionResultVoiceSlotsFull = 10,
	}
	
	public enum EP2PSessionError
	{
		k_EP2PSessionErrorNone = 0,
		k_EP2PSessionErrorNotRunningApp = 1,
		k_EP2PSessionErrorNoRightsToApp = 2,
		k_EP2PSessionErrorDestinationNotLoggedIn = 3,
		k_EP2PSessionErrorTimeout = 4,
	}
	
	public enum EP2PSend
	{
		k_EP2PSendUnreliable = 0,
		k_EP2PSendUnreliableNoDelay = 1,
		k_EP2PSendReliable = 2,
		k_EP2PSendReliableWithBuffering = 3,
	}
	
	public enum ENewsUpdateType
	{
		k_EAppNews = 0,
		k_ESteamAds = 1,
		k_ESteamNews = 2,
		k_ECDDBUpdate = 3,
		k_EClientUpdate = 4,
	}
	
	public enum ELogonState
	{
		k_ELogonStateNotLoggedOn = 0,
		k_ELogonStateLoggingOn = 1,
		k_ELogonStateLoggingOff = 2,
		k_ELogonStateLoggedOn = 3,
	}
	
	public enum EAppEvent
	{
		k_EAppEventDownloadComplete = 2,
	}
	
	public enum ESteamSubscriptionStatus
	{
		eSteamSubscriptionOK = 0,
		eSteamSubscriptionPending = 1,
		eSteamSubscriptionPreorder = 2,
		eSteamSubscriptionPrepurchaseTransferred = 3,
		eSteamSubscriptionPrepurchaseInvalid = 4,
		eSteamSubscriptionPrepurchaseRejected = 5,
		eSteamSubscriptionPrepurchaseRevoked = 6,
		eSteamSubscriptionPaymentCardDeclined = 7,
		eSteamSubscriptionCancelledByUser = 8,
		eSteamSubscriptionCancelledByVendor = 9,
		eSteamSubscriptionPaymentCardUseLimit = 10,
		eSteamSubscriptionPaymentCardAlert = 11,
		eSteamSubscriptionFailed = 12,
		eSteamSubscriptionPaymentCardAVSFailure = 13,
		eSteamSubscriptionPaymentCardInsufficientFunds = 14,
		eSteamSubscriptionRestrictedCountry = 15,
	}
	
	public enum EAvatarSize
	{
		k_EAvatarSize32x32 = 0,
		k_EAvatarSize64x64 = 1,
	}
	
	public enum ECallState
	{
		k_ECallStateUnknown = 0,
		k_ECallStateWaiting = 1,
		k_ECallStateDialing = 2,
		k_ECallStateRinging = 3,
		k_ECallStateInCall = 4,
	}
	
	public enum ESteamFindFilter
	{
		eSteamFindLocalOnly = 0,
		eSteamFindRemoteOnly = 1,
		eSteamFindAll = 2,
	}
	
	public enum ESteamSeekMethod
	{
		eSteamSeekMethodSet = 0,
		eSteamSeekMethodCur = 1,
		eSteamSeekMethodEnd = 2,
	}
	
	public enum EItemQuality
	{
		k_EItemQuality_Normal = 0,
		k_EItemQuality_Common = 1,
		k_EItemQuality_Rare = 2,
		k_EItemQuality_Unique = 3,
		k_EItemQuality_Count = 4,
		k_EItemQuality_Unk5 = 5,
		k_EItemQuality_Unk6 = 6,
		k_EItemQuality_Community = 7,
		k_EItemQuality_Valve = 8,
		k_EItemQuality_SelfMade = 9,
		k_EItemQuality_Max = 255,
	}
	
	public enum ESteamNotify
	{
		eSteamNotifyTicketsWillExpire = 0,
		eSteamNotifyAccountInfoChanged = 1,
		eSteamNotifyContentDescriptionChanged = 2,
		eSteamNotifyPleaseShutdown = 3,
		eSteamNotifyNewContentServer = 4,
		eSteamNotifySubscriptionStatusChanged = 5,
		eSteamNotifyContentServerConnectionLost = 6,
		eSteamNotifyCacheLoadingCompleted = 7,
		eSteamNotifyCacheNeedsDecryption = 8,
		eSteamNotifyCacheNeedsRepair = 9,
		eSteamNotifyAppDownloading = 10,
		eSteamNotifyAppDownloadingPaused = 11,
	}
	
	public enum EChatEntryType
	{
		k_EChatEntryTypeInvalid = 0,
		k_EChatEntryTypeChatMsg = 1,
		k_EChatEntryTypeTyping = 2,
		k_EChatEntryTypeInviteGame = 3,
		k_EChatEntryTypeEmote = 4,
		k_EChatEntryTypeLobbyGameStart = 5,
		k_EChatEntryTypeLeftConversation = 6,
	}
	
	public enum ESteamBufferMethod
	{
		eSteamBufferMethodFBF = 0,
		eSteamBufferMethodNBF = 1,
	}
	
	public enum ECallbackType
	{
		k_iSteamUserCallbacks = 100,
		k_iSteamGameServerCallbacks = 200,
		k_iSteamFriendsCallbacks = 300,
		k_iSteamBillingCallbacks = 400,
		k_iSteamMatchmakingCallbacks = 500,
		k_iSteamContentServerCallbacks = 600,
		k_iSteamUtilsCallbacks = 700,
		k_iClientFriendsCallbacks = 800,
		k_iClientUserCallbacks = 900,
		k_iSteamAppsCallbacks = 1000,
		k_iSteamUserStatsCallbacks = 1100,
		k_iSteamNetworkingCallbacks = 1200,
		k_iClientRemoteStorageCallbacks = 1300,
		k_iSteamUserItemsCallbacks = 1400,
		k_iSteamGameServerItemsCallbacks = 1500,
		k_iClientUtilsCallbacks = 1600,
		k_iSteamGameCoordinatorCallbacks = 1700,
		k_iSteamGameServerStatsCallbacks = 1800,
		k_iSteam2AsyncCallbacks = 1900,
		k_iSteamGameStatsCallbacks = 2000,
		k_iClientHTTPCallbacks = 2100,
	}
	
	public enum EHTTPStatusCode
	{
		k_EHTTPStatusCodeInvalid = 0,
		k_EHTTPStatusCode100Continue = 100,
		k_EHTTPStatusCode101SwitchingProtocols = 101,
		k_EHTTPStatusCode200OK = 200,
		k_EHTTPStatusCode201Created = 201,
		k_EHTTPStatusCode202Accepted = 202,
		k_EHTTPStatusCode203NonAuthoritative = 203,
		k_EHTTPStatusCode204NoContent = 204,
		k_EHTTPStatusCode205ResetContent = 205,
		k_EHTTPStatusCode206PartialContent = 206,
		k_EHTTPStatusCode300MultipleChoices = 300,
		k_EHTTPStatusCode301MovedPermanently = 301,
		k_EHTTPStatusCode302Found = 302,
		k_EHTTPStatusCode303SeeOther = 303,
		k_EHTTPStatusCode304NotModified = 304,
		k_EHTTPStatusCode305UseProxy = 305,
		k_EHTTPStatusCode307TemporaryRedirect = 307,
		k_EHTTPStatusCode400BadRequest = 400,
		k_EHTTPStatusCode401Unauthorized = 401,
		k_EHTTPStatusCode402PaymentRequired = 402,
		k_EHTTPStatusCode403Forbidden = 403,
		k_EHTTPStatusCode404NotFound = 404,
		k_EHTTPStatusCode405MethodNotAllowed = 405,
		k_EHTTPStatusCode406NotAcceptable = 406,
		k_EHTTPStatusCode407ProxyAuthRequired = 407,
		k_EHTTPStatusCode408RequestTimeout = 408,
		k_EHTTPStatusCode409Conflict = 409,
		k_EHTTPStatusCode410Gone = 410,
		k_EHTTPStatusCode411LengthRequired = 411,
		k_EHTTPStatusCode412PreconditionFailed = 412,
		k_EHTTPStatusCode413RequestEntityTooLarge = 413,
		k_EHTTPStatusCode414RequestURITooLong = 414,
		k_EHTTPStatusCode415UnsupportedMediaType = 415,
		k_EHTTPStatusCode416RequestedRangeNotSatisfiable = 416,
		k_EHTTPStatusCode417ExpectationFailed = 417,
		k_EHTTPStatusCode500InternalServerError = 500,
		k_EHTTPStatusCode501NotImplemented = 501,
		k_EHTTPStatusCode502BadGateway = 502,
		k_EHTTPStatusCode503ServiceUnavailable = 503,
		k_EHTTPStatusCode504GatewayTimeout = 504,
		k_EHTTPStatusCode505HTTPVersionNotSupported = 505,
	}
	
	public enum EChatMemberStateChange
	{
		k_EChatMemberStateChangeEntered = 1,
		k_EChatMemberStateChangeLeft = 2,
		k_EChatMemberStateChangeDisconnected = 4,
		k_EChatMemberStateChangeKicked = 8,
		k_EChatMemberStateChangeBanned = 16,
	}
	
	public enum EVACBan
	{
		k_EVACBanGoldsrc = 0,
		k_EVACBanSource = 1,
		k_EVACBanDayOfDefeatSource = 2,
	}
	
	public enum EClanRank
	{
		k_EClanRankNone = 0,
		k_EClanRankOwner = 1,
		k_EClanRankOfficer = 2,
		k_EClanRankMember = 3,
	}
	
	public enum EItemCriteriaOperator
	{
		k_EOperator_String_EQ = 0,
		k_EOperator_Not = 1,
		k_EOperator_String_Not_EQ = 1,
		k_EOperator_Float_EQ = 2,
		k_EOperator_Float_Not_EQ = 3,
		k_EOperator_Float_LT = 4,
		k_EOperator_Float_Not_LT = 5,
		k_EOperator_Float_LTE = 6,
		k_EOperator_Float_Not_LTE = 7,
		k_EOperator_Float_GT = 8,
		k_EOperator_Float_Not_GT = 9,
		k_EOperator_Float_GTE = 10,
		k_EOperator_Float_Not_GTE = 11,
		k_EOperator_Subkey_Contains = 12,
		k_EOperator_Subkey_Not_Contains = 13,
		k_EItemCriteriaOperator_Count = 14,
	}
	
	public enum EChatRoomVoiceStatus
	{
		eChatRoomVoiceStatusBad = 0,
		eChatRoomVoiceStatusUnknownRoom = 1,
		eChatRoomVoiceStatusUnknownUser = 2,
		eChatRoomVoiceStatusNotSpeaking = 3,
		eChatRoomVoiceStatusConnectedSpeaking = 4,
		eChatRoomVoiceStatusConnectedSpeakingData = 5,
		eChatRoomVoiceStatusNotConnectedSpeaking = 6,
		eChatRoomVoiceStatusConnecting = 7,
		eChatRoomVoiceStatusUnreachable = 8,
		eChatRoomVoiceStatusDisconnected = 9,
		eChatRoomVoiceStatusCount = 10,
	}
	
	public enum EGCMessages
	{
		k_EGCMsgGenericReply = 10,
		k_ESOMsg_Create = 21,
		k_ESOMsg_Update = 22,
		k_ESOMsg_Destroy = 23,
		k_ESOMsg_CacheSubscribed = 24,
		k_ESOMsg_CacheUnsubscribed = 25,
		k_ESOMsg_UpdateMultiple = 26,
		k_EGCMsgAchievementAwarded = 51,
		k_EGCMsgConCommand = 52,
		k_EGCMsgStartPlaying = 53,
		k_EGCMsgStopPlaying = 54,
		k_EGCMsgStartGameserver = 55,
		k_EGCMsgStopGameserver = 56,
		k_EGCMsgWGRequest = 57,
		k_EGCMsgWGResponse = 58,
		k_EGCMsgGetUserGameStatsSchema = 59,
		k_EGCMsgGetUserGameStatsSchemaResponse = 60,
		k_EGCMsgGetUserStatsDEPRECATED = 61,
		k_EGCMsgGetUserStatsResponse = 62,
		k_EGCMsgAppInfoUpdated = 63,
		k_EGCMsgValidateSession = 64,
		k_EGCMsgValidateSessionResponse = 65,
		k_EGCMsgLookupAccountFromInput = 66,
		k_EGCMsgSendHTTPRequest = 67,
		k_EGCMsgSendHTTPRequestResponse = 68,
		k_EGCMsgPreTestSetup = 69,
		k_EGCMsgRecordSupportAction = 70,
		k_EGCMsgGetAccountDetails = 71,
		k_EGCMsgSendInterAppMessage = 72,
		k_EGCMsgReceiveInterAppMessage = 73,
		k_EGCMsgFindAccounts = 74,
		k_EGCMsgPostAlert = 75,
		k_EGCMsgGetLicenses = 76,
		k_EGCMsgGetUserStats = 77,
		k_EGCMsgAddFreeLicense = 80,
		k_EGCMsgAddFreeLicenseResponse = 81,
		k_EGCMsgWebAPIRegisterInterfaces = 101,
		k_EGCMsgWebAPIJobRequest = 102,
		k_EGCMsgWebAPIRegistrationRequested = 103,
		k_EGCMsgMemCachedGet = 200,
		k_EGCMsgMemCachedGetResponse = 201,
		k_EGCMsgMemCachedSet = 202,
		k_EGCMsgMemCachedDelete = 203,
		k_EMsgGCSetItemPosition = 1001,
		k_EMsgGCCraft = 1002,
		k_EMsgGCCraftResponse = 1003,
		k_EMsgGCDelete = 1004,
		k_EMsgGCVerifyCacheSubscription = 1005,
		k_EMsgGCNameItem = 1006,
		k_EMsgGCDecodeItem = 1007,
		k_EMsgGCDecodeItemResponse = 1008,
		k_EMsgGCPaintItem = 1009,
		k_EMsgGCPaintItemResponse = 1010,
		k_EMsgGCGoldenWrenchBroadcast = 1011,
		k_EMsgGCMOTDRequest = 1012,
		k_EMsgGCMOTDRequestResponse = 1013,
		k_EMsgGCAddItemToSocket = 1014,
		k_EMsgGCAddItemToSocketResponse = 1015,
		k_EMsgGCAddSocketToBaseItem = 1016,
		k_EMsgGCAddSocketToItem = 1017,
		k_EMsgGCAddSocketToItemResponse = 1018,
		k_EMsgGCNameBaseItem = 1019,
		k_EMsgGCNameBaseItemResponse = 1020,
		k_EMsgGCRemoveSocketItem = 1021,
		k_EMsgGCRemoveSocketItemResponse = 1022,
		k_EMsgGCCustomizeItemTexture = 1023,
		k_EMsgGCCustomizeItemTextureResponse = 1024,
		k_EMsgGCUseItemRequest = 1025,
		k_EMsgGCUseItemResponse = 1026,
		k_EMsgGCGiftedItems = 1027,
		k_EMsgGCSpawnItem = 1028,
		k_EMsgGCRespawnPostLoadoutChange = 1029,
		k_EMsgGCRemoveItemName = 1030,
		k_EMsgGCRemoveItemPaint = 1031,
		k_EMsgGCGiftWrapItem = 1032,
		k_EMsgGCGiftWrapItemResponse = 1033,
		k_EMsgGCDeliverGift = 1034,
		k_EMsgGCDeliverGiftResponseGiver = 1035,
		k_EMsgGCDeliverGiftResponseReceiver = 1036,
		k_EMsgGCUnwrapGiftRequest = 1037,
		k_EMsgGCUnwrapGiftResponse = 1038,
		k_EMsgGCSetItemStyle = 1039,
		k_EMsgGCUsedClaimCodeItem = 1040,
		k_EMsgGCSortItems = 1041,
		k_EMsgGC_RevolvingLootList = 1042,
		k_EMsgGCLookupAccount = 1043,
		k_EMsgGCLookupAccountResponse = 1044,
		k_EMsgGCLookupAccountName = 1045,
		k_EMsgGCLookupAccountNameResponse = 1046,
		k_EMsgGCStartupCheck = 1047,
		k_EMsgGCStartupCheckResponse = 1048,
		k_EMsgGCUpdateItemSchema = 1049,
		k_EMsgGCTrading_InitiateTradeRequest = 1501,
		k_EMsgGCTrading_InitiateTradeResponse = 1502,
		k_EMsgGCTrading_StartSession = 1503,
		k_EMsgGCTrading_SetItem = 1504,
		k_EMsgGCTrading_RemoveItem = 1505,
		k_EMsgGCTrading_UpdateTradeInfo = 1506,
		k_EMsgGCTrading_SetReadiness = 1507,
		k_EMsgGCTrading_ReadinessResponse = 1508,
		k_EMsgGCTrading_SessionClosed = 1509,
		k_EMsgGCTrading_CancelSession = 1510,
		k_EMsgGCTrading_TradeChatMsg = 1511,
		k_EMsgGCTrading_ConfirmOffer = 1512,
		k_EMsgGCTrading_TradeTypingChatMsg = 1513,
		k_EMsgGCServerBrowser_FavoriteServer = 1601,
		k_EMsgGCServerBrowser_BlacklistServer = 1602,
		k_EMsgGCDev_NewItemRequest = 2001,
		k_EMsgGCDev_NewItemRequestResponse = 2002,
		k_EMsgGCStoreGetUserData = 3000,
		k_EMsgGCStoreGetUserDataResponse = 3001,
		k_EMsgGCStorePurchaseInit = 3002,
		k_EMsgGCStorePurchaseInitResponse = 3003,
		k_EMsgGCStorePurchaseFinalize = 3004,
		k_EMsgGCStorePurchaseFinalizeResponse = 3005,
		k_EMsgGCStorePurchaseCancel = 3006,
		k_EMsgGCStorePurchaseCancelResponse = 3007,
		k_EMsgGCStorePurchaseQueryTxn = 3008,
		k_EMsgGCStorePurchaseQueryTxnResponse = 3009,
		k_EMsgGCReportWarKill = 5001,
		k_EMsgGCVoteKickBanPlayer = 5018,
		k_EMsgGCVoteKickBanPlayerResult = 5019,
		k_EMsgGCKickPlayer = 5020,
		k_EMsgGCStartedTraining = 5021,
		k_EMsgGCFreeTrial_ChooseMostHelpfulFriend = 5022,
		k_EMsgGCRequestTF2Friends = 5023,
		k_EMsgGCRequestTF2FriendsResponse = 5024,
		k_EMsgGCReplay_UploadedToYouTube = 5025,
		k_EMsgGCCoaching_AddToCoaches = 5200,
		k_EMsgGCCoaching_AddToCoachesResponse = 5201,
		k_EMsgGCCoaching_RemoveFromCoaches = 5202,
		k_EMsgGCCoaching_RemoveFromCoachesResponse = 5203,
		k_EMsgGCCoaching_FindCoach = 5204,
		k_EMsgGCCoaching_FindCoachResponse = 5205,
		k_EMsgGCCoaching_AskCoach = 5206,
		k_EMsgGCCoaching_AskCoachResponse = 5207,
		k_EMsgGCCoaching_CoachJoinGame = 5208,
		k_EMsgGCCoaching_CoachJoining = 5209,
		k_EMsgGCCoaching_CoachJoined = 5210,
		k_EMsgGCCoaching_LikeCurrentCoach = 5211,
		k_EMsgGCCoaching_RemoveCurrentCoach = 5212,
		k_EMsgGCCoaching_AlreadyRatedCoach = 5213,
		k_EMsgGC_Duel_Request = 5500,
		k_EMsgGC_Duel_Response = 5501,
		k_EMsgGC_Duel_Results = 5502,
		k_EMsgGC_Duel_Status = 5503,
		k_EMsgGC_Halloween_ReservedItem = 5600,
		k_EMsgGC_Halloween_GrantItem = 5601,
		k_EMsgGC_Halloween_GrantItemResponse = 5604,
		k_EMsgGC_Halloween_Cheat_QueryResponse = 5605,
		k_EMsgGC_Halloween_ItemClaimed = 5606,
		k_EMsgGC_GameServer_LevelInfo = 5700,
		k_EMsgGC_GameServer_AuthChallenge = 5701,
		k_EMsgGC_GameServer_AuthChallengeResponse = 5702,
		k_EMsgGC_GameServer_CreateIdentity = 5703,
		k_EMsgGC_GameServer_CreateIdentityResponse = 5704,
		k_EMsgGC_GameServer_List = 5705,
		k_EMsgGC_GameServer_ListResponse = 5706,
		k_EMsgGC_GameServer_AuthResult = 5707,
		k_EMsgGC_QP_ScoreServers = 5800,
		k_EMsgGC_QP_ScoreServersResponse = 5801,
		k_EMsgGC_PickupItemEligibility_Query = 6000,
		k_EMsgGCDev_GrantWarKill = 6001,
	}
	
	public enum EPaymentMethod
	{
		k_EPaymentMethodNone = 0,
		k_EPaymentMethodCDKey = 1,
		k_EPaymentMethodCreditCard = 2,
		k_EPaymentMethodPayPal = 4,
		k_EPaymentMethodManual = 8,
		k_EPaymentMethodGuestPass = 8,
		k_EPaymentMethodHardwarePromo = 16,
		k_EPaymentMethodClickAndBuy = 32,
		k_EPaymentMethodAutoGrant = 64,
		k_EPaymentMethodWallet = 128,
		k_EPaymentMethodOEMTicket = 256,
		k_EPaymentMethodSplit = 512,
	}
	
	public enum EChatRoomEnterResponse
	{
		k_EChatRoomEnterResponseSuccess = 1,
		k_EChatRoomEnterResponseDoesntExist = 2,
		k_EChatRoomEnterResponseNotAllowed = 3,
		k_EChatRoomEnterResponseFull = 4,
		k_EChatRoomEnterResponseError = 5,
		k_EChatRoomEnterResponseBanned = 6,
	}
	
	public enum EChatPermission
	{
		k_EChatPermissionClose = 1,
		k_EChatPermissionInvite = 2,
		k_EChatPermissionTalk = 8,
		k_EChatPermissionKick = 16,
		k_EChatPermissionMute = 32,
		k_EChatPermissionSetMetadata = 64,
		k_EChatPermissionChangePermissions = 128,
		k_EChatPermissionBan = 256,
		k_EChatPermissionChangeAccess = 512,
		k_EChatPermissionEveryoneNotInClanDefault = 8,
		k_EChatPermissionEveryoneDefault = 10,
		k_EChatPermissionMemberDefault = 282,
		k_EChatPermissionOfficerDefault = 282,
		k_EChatPermissionOwnerDefault = 891,
		k_EChatPermissionMask = 1019,
	}
	
	public enum EPersonalQuestion
	{
		k_EPSMsgNameOfSchool = 0,
		k_EPSMsgFavoriteTeam = 1,
		k_EPSMsgMothersName = 2,
		k_EPSMsgNameOfPet = 3,
		k_EPSMsgChildhoodHero = 4,
		k_EPSMsgCityBornIn = 5,
		k_EPSMaxPersonalQuestion = 6,
	}
	
	public enum ETFInitTradeResult
	{
		k_ETFInitTradeResultOk = 0,
		k_ETFInitTradeResultDeclined = 1,
		k_ETFInitTradeResultVACBanned = 2,
		k_ETFInitTradeResultOtherVACBanned = 3,
		k_ETFInitTradeResultBusy = 4,
		k_ETFInitTradeResultDisabled = 5,
		k_ETFInitTradeResultNoLoggedIn = 6,
		k_ETFInitTradeResultCanceled = 7,
		k_ETFInitTradeResultTooSoon = 8,
	}
	
	public enum EPersonaState
	{
		k_EPersonaStateOffline = 0,
		k_EPersonaStateOnline = 1,
		k_EPersonaStateBusy = 2,
		k_EPersonaStateAway = 3,
		k_EPersonaStateSnooze = 4,
		k_EPersonaStateMax = 5,
	}
	
	public enum ESteamAppUpdateStatsQueryType
	{
		ePhysicalBytesReceivedThisSession = 1,
		eAppReadyToLaunchStatus = 2,
		eAppPreloadStatus = 3,
		eAppEntireDepot = 4,
		eCacheBytesPresent = 5,
	}
	
	public enum ELeaderboardDataRequest
	{
		k_ELeaderboardDataRequestGlobal = 0,
		k_ELeaderboardDataRequestGlobalAroundUser = 1,
		k_ELeaderboardDataRequestFriends = 2,
	}
	
	public enum EConnectionPriority
	{
		k_EConnectionPriorityLow = 0,
		k_EConnectionPriorityMedium = 1,
		k_EConnectionPriorityHigh = 2,
	}
	
	public enum ShareType_t
	{
		SHARE_STOPIMMEDIATELY = 0,
		SHARE_RATIO = 1,
		SHARE_MANUAL = 2,
	}
	
	public enum EMarketingMessageFlags
	{
		k_EMarketingMessageFlagsNone = 0,
		k_EMarketingMessageFlagsHighPriority = 1,
		k_EMarketingMessageFlagsPlatformWindows = 2,
		k_EMarketingMessageFlagsPlatformMac = 4,
		k_EMarketingMessageFlagsPlatformRestrictions = 6,
	}
	
	public enum EAuthSessionResponse
	{
		k_EAuthSessionResponseOK = 0,
		k_EAuthSessionResponseUserNotConnectedToSteam = 1,
		k_EAuthSessionResponseNoLicenseOrExpired = 2,
		k_EAuthSessionResponseVACBanned = 3,
		k_EAuthSessionResponseLoggedInElseWhere = 4,
		k_EAuthSessionResponseVACCheckTimedOut = 5,
		k_EAuthSessionResponseAuthTicketCanceled = 6,
		k_EAuthSessionResponseAuthTicketInvalidAlreadyUsed = 7,
		k_EAuthSessionResponseAuthTicketInvalid = 8,
	}
	
	public enum EItemRequestResult
	{
		k_EItemRequestResultOK = 0,
		k_EItemRequestResultDenied = 1,
		k_EItemRequestResultServerError = 2,
		k_EItemRequestResultTimeout = 3,
		k_EItemRequestResultInvalid = 4,
		k_EItemRequestResultNoMatch = 5,
		k_EItemRequestResultUnknownError = 6,
		k_EItemRequestResultNotLoggedOn = 7,
	}
	
	public enum EClanRelationship
	{
		eClanRelationshipNone = 0,
		eClanRelationshipBlocked = 1,
		eClanRelationshipInvited = 2,
		eClanRelationshipMember = 3,
		eClanRelationshipKicked = 4,
	}
	
	public enum EResult
	{
		k_EResultOK = 1,
		k_EResultFail = 2,
		k_EResultNoConnection = 3,
		k_EResultInvalidPassword = 5,
		k_EResultLoggedInElsewhere = 6,
		k_EResultInvalidProtocolVer = 7,
		k_EResultInvalidParam = 8,
		k_EResultFileNotFound = 9,
		k_EResultBusy = 10,
		k_EResultInvalidState = 11,
		k_EResultInvalidName = 12,
		k_EResultInvalidEmail = 13,
		k_EResultDuplicateName = 14,
		k_EResultAccessDenied = 15,
		k_EResultTimeout = 16,
		k_EResultBanned = 17,
		k_EResultAccountNotFound = 18,
		k_EResultInvalidSteamID = 19,
		k_EResultServiceUnavailable = 20,
		k_EResultNotLoggedOn = 21,
		k_EResultPending = 22,
		k_EResultEncryptionFailure = 23,
		k_EResultInsufficientPrivilege = 24,
		k_EResultLimitExceeded = 25,
		k_EResultRevoked = 26,
		k_EResultExpired = 27,
		k_EResultAlreadyRedeemed = 28,
		k_EResultDuplicateRequest = 29,
		k_EResultAlreadyOwned = 30,
		k_EResultIPNotFound = 31,
		k_EResultPersistFailed = 32,
		k_EResultLockingFailed = 33,
		k_EResultLogonSessionReplaced = 34,
		k_EResultConnectFailed = 35,
		k_EResultHandshakeFailed = 36,
		k_EResultIOFailure = 37,
		k_EResultRemoteDisconnect = 38,
		k_EResultShoppingCartNotFound = 39,
		k_EResultBlocked = 40,
		k_EResultIgnored = 41,
		k_EResultNoMatch = 42,
		k_EResultAccountDisabled = 43,
		k_EResultServiceReadOnly = 44,
		k_EResultAccountNotFeatured = 45,
		k_EResultAdministratorOK = 46,
		k_EResultContentVersion = 47,
		k_EResultTryAnotherCM = 48,
		k_EResultPasswordRequiredToKickSession = 49,
		k_EResultAlreadyLoggedInElsewhere = 50,
		k_EResultSuspended = 51,
		k_EResultCancelled = 52,
		k_EResultDataCorruption = 53,
		k_EResultDiskFull = 54,
		k_EResultRemoteCallFailed = 55,
	}
	
	public enum EDetailedPlatformErrorType
	{
		eNoDetailedErrorAvailable = 0,
		eStandardCerrno = 1,
		eWin32LastError = 2,
		eWinSockLastError = 3,
		eDetailedPlatformErrorCount = 4,
	}
	
	public enum EVoiceResult
	{
		k_EVoiceResultOK = 0,
		k_EVoiceResultNotInitialized = 1,
		k_EVoiceResultNotRecording = 2,
		k_EVoiceResultNoData = 3,
		k_EVoiceResultBufferTooSmall = 4,
		k_EVoiceResultDataCorrupted = 5,
	}
	
	public enum EGCMsgResponse
	{
		k_EGCMsgResponseOK = 0,
		k_EGCMsgResponseDenied = 1,
		k_EGCMsgResponseServerError = 2,
		k_EGCMsgResponseTimeout = 3,
		k_EGCMsgResponseInvalid = 4,
		k_EGCMsgResponseNoMatch = 5,
		k_EGCMsgResponseUnknownError = 6,
		k_EGCMsgResponseNotLoggedOn = 7,
	}
	
	public enum EClientStat
	{
		k_EClientStatP2PConnectionsUDP = 0,
		k_EClientStatP2PConnectionsRelay = 1,
		k_EClientStatP2PGameConnections = 2,
		k_EClientStatP2PVoiceConnections = 3,
		k_EClientStatBytesDownloaded = 4,
		k_EClientStatMax = 5,
	}
	
	public enum ELeaderboardUploadScoreMethod
	{
		k_ELeaderboardUploadScoreMethodNone = 0,
		k_ELeaderboardUploadScoreMethodKeepBest = 1,
		k_ELeaderboardUploadScoreMethodForceUpdate = 2,
	}
	
	public enum ERemoteStorageFileRoot
	{
		k_ERemoteStorageFileRootInvalid = 0,
		k_ERemoteStorageFileRootDefault = 1,
		k_ERemoteStorageFileRootMax = 2,
	}
	
	public enum ESteamError
	{
		eSteamErrorNone = 0,
		eSteamErrorUnknown = 1,
		eSteamErrorLibraryNotInitialized = 2,
		eSteamErrorLibraryAlreadyInitialized = 3,
		eSteamErrorConfig = 4,
		eSteamErrorContentServerConnect = 5,
		eSteamErrorBadHandle = 6,
		eSteamErrorHandlesExhausted = 7,
		eSteamErrorBadArg = 8,
		eSteamErrorNotFound = 9,
		eSteamErrorRead = 10,
		eSteamErrorEOF = 11,
		eSteamErrorSeek = 12,
		eSteamErrorCannotWriteNonUserConfigFile = 13,
		eSteamErrorCacheOpen = 14,
		eSteamErrorCacheRead = 15,
		eSteamErrorCacheCorrupted = 16,
		eSteamErrorCacheWrite = 17,
		eSteamErrorCacheSession = 18,
		eSteamErrorCacheInternal = 19,
		eSteamErrorCacheBadApp = 20,
		eSteamErrorCacheVersion = 21,
		eSteamErrorCacheBadFingerPrint = 22,
		eSteamErrorNotFinishedProcessing = 23,
		eSteamErrorNothingToDo = 24,
		eSteamErrorCorruptEncryptedUserIDTicket = 25,
		eSteamErrorSocketLibraryNotInitialized = 26,
		eSteamErrorFailedToConnectToUserIDTicketValidationServer = 27,
		eSteamErrorBadProtocolVersion = 28,
		eSteamErrorReplayedUserIDTicketFromClient = 29,
		eSteamErrorReceiveResultBufferTooSmall = 30,
		eSteamErrorSendFailed = 31,
		eSteamErrorReceiveFailed = 32,
		eSteamErrorReplayedReplyFromUserIDTicketValidationServer = 33,
		eSteamErrorBadSignatureFromUserIDTicketValidationServer = 34,
		eSteamErrorValidationStalledSoAborted = 35,
		eSteamErrorInvalidUserIDTicket = 36,
		eSteamErrorClientLoginRateTooHigh = 37,
		eSteamErrorClientWasNeverValidated = 38,
		eSteamErrorInternalSendBufferTooSmall = 39,
		eSteamErrorInternalReceiveBufferTooSmall = 40,
		eSteamErrorUserTicketExpired = 41,
		eSteamErrorCDKeyAlreadyInUseOnAnotherClient = 42,
		eSteamErrorNotLoggedIn = 101,
		eSteamErrorAlreadyExists = 102,
		eSteamErrorAlreadySubscribed = 103,
		eSteamErrorNotSubscribed = 104,
		eSteamErrorAccessDenied = 105,
		eSteamErrorFailedToCreateCacheFile = 106,
		eSteamErrorCallStalledSoAborted = 107,
		eSteamErrorEngineNotRunning = 108,
		eSteamErrorEngineConnectionLost = 109,
		eSteamErrorLoginFailed = 110,
		eSteamErrorAccountPending = 111,
		eSteamErrorCacheWasMissingRetry = 112,
		eSteamErrorLocalTimeIncorrect = 113,
		eSteamErrorCacheNeedsDecryption = 114,
		eSteamErrorAccountDisabled = 115,
		eSteamErrorCacheNeedsRepair = 116,
		eSteamErrorRebootRequired = 117,
		eSteamErrorNetwork = 200,
		eSteamErrorOffline = 201,
	}
	
	public enum EMatchMakingType
	{
		eInternetServer = 0,
		eLANServer = 1,
		eFriendsServer = 2,
		eFavoritesServer = 3,
		eHistoryServer = 4,
		eSpectatorServer = 5,
		eInvalidServer = 6,
	}
	
	public enum EAppUsageEvent
	{
		k_EAppUsageEventGameLaunch = 1,
		k_EAppUsageEventGameLaunchTrial = 2,
		k_EAppUsageEventMedia = 3,
		k_EAppUsageEventPreloadStart = 4,
		k_EAppUsageEventPreloadFinish = 5,
		k_EAppUsageEventMarketingMessageView = 6,
		k_EAppUsageEventInGameAdViewed = 7,
		k_EAppUsageEventGameLaunchFreeWeekend = 8,
	}
	
	public enum EStatusDepotVersion
	{
		k_EStatusDepotVersionInvalid = 0,
		k_EStatusDepotVersionCompleteDisabled = 1,
		k_EStatusDepotVersionCompleteEnabledBeta = 2,
		k_EStatusDepotVersionCompleteEnabledPublic = 3,
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=144)]
	public struct GCMsgHeader_t
	{
		public UInt16 headerVersion;
		public UInt64 targetJobID;
		public UInt64 sourceJobID;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=224)]
	public struct GCTrading_SetItem_t
	{
		public GCMsgHeader_t header;
		public Byte showcase;
		public UInt64 itemID;
		public Byte slot;
		public const int k_iMessage = 1504;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=272)]
	public struct GCSetItemPosition_t
	{
		public GCMsgHeader_t header;
		public UInt64 itemID;
		public UInt32 position;
		public UInt32 unk1;
		public const int k_iMessage = 1001;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct CheckPasswordResponse_t
	{
		public EResult m_EResult;
		public const int k_iCallback = 126;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=96)]
	public struct ClientAppNewsItemUpdate_t
	{
		public ENewsUpdateType m_eNewsUpdateType;
		public UInt32 m_uNewsID;
		public UInt32 m_uAppID;
		public const int k_iCallback = 110;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=64)]
	public struct SteamIDComponent_t
	{
		public UInt32 m_unAccountID;
		public UInt32 m_unAccountInstance;
		public UInt32 m_EAccountType;
		public EUniverse m_EUniverse;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=64)]
	public struct TSteamSplitLocalUserID
	{
		public UInt32 Low32bits;
		public UInt32 High32bits;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=128)]
	public struct TSteamGlobalUserID
	{
		public UInt16 m_SteamInstanceID;

		[StructLayout(LayoutKind.Explicit,CharSet=CharSet.Ansi,Pack=1,Size=64)]
		public struct Unionm_SteamLocalUserID
		{
			[FieldOffset(0)]
			public UInt64 As64bits;
			[FieldOffset(0)]
			public TSteamSplitLocalUserID Split;
		}
		public Unionm_SteamLocalUserID m_SteamLocalUserID;

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=88)]
	public struct ClanInfoChanged_t
	{
		public UInt64 m_GroupID;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bNameChanged;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bAvatarChanged;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bAccountInfoChanged;
		public const int k_iCallback = 321;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=1312)]
	public struct ChatRoomEnter_t
	{
		public UInt64 m_ulSteamIDChat;
		public EChatRoomType m_EChatRoomType;
		public UInt64 m_ulSteamIDOwner;
		public UInt64 m_ulSteamIDClan;
		public UInt64 m_ulSteamIDFriendChat;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bLocked;
		public Byte m_rgfChatPermissions;
		public EChatRoomEnterResponse m_EChatRoomEnterResponse;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 128)]
		public SByte[] m_rgchChatRoomName;
		public const int k_iCallback = 309;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=160)]
	public struct SocketStatusCallback_t
	{
		public UInt32 m_hSocket;
		public UInt32 m_hListenSocket;
		public UInt64 m_steamIDRemote;
		public Int32 m_eSNetSocketState;
		public const int k_iCallback = 1201;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=128)]
	public struct GSItemGranted_t
	{
		public UInt64 m_steamID;
		public UInt64 m_itemID;
		public const int k_iCallback = 1507;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=64)]
	public struct OpenChatDialog_t
	{
		public UInt64 m_ulSteamID;
		public const int k_iCallback = 318;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=208)]
	public struct SOMsgCacheUnsubscribed_t
	{
		public GCMsgHeader_t header;
		public UInt64 steamid;
		public const int k_iMessage = 25;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=128)]
	public struct GameStatsSessionClosed_t
	{
		public UInt64 m_ulSessionID;
		public EResult m_eResult;
		public const int k_iCallback = 2002;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=176)]
	public struct GCGoldenWrenchBroadcast_t
	{
		public GCMsgHeader_t header;
		public UInt16 WrenchNumber;
		public UInt16 State;
		public const int k_iMessage = 1011;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=64)]
	public struct AppInfoUpdateComplete_t
	{
		public EResult m_EResult;
		public UInt32 m_cAppsUpdated;
		public const int k_iCallback = 1003;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=64)]
	public struct PurchaseMsg_t
	{
		public UInt32 m_bSuccess;
		public Int32 m_EPurchaseResultDetail;
		public const int k_iCallback = 402;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=32)]
	public struct GCMessageAvailable_t
	{
		public UInt32 m_nMessageSize;
		public const int k_iCallback = 1701;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=208)]
	public struct SOMsgCacheSubscribed_Item_t
	{
		public UInt64 itemid;
		public UInt32 accountid;
		public UInt16 itemdefindex;
		public Byte itemlevel;
		public Byte itemquality;
		public UInt32 position;
		public UInt32 quantity;
		public UInt16 namelength;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=448)]
	public struct SOMsgCreate_t
	{
		public GCMsgHeader_t header;
		public UInt64 steamid;
		public UInt32 unknown;
		public SOMsgCacheSubscribed_Item_t item;
		public const int k_iMessage = 21;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=208)]
	public struct GCRespawnPostLoadoutChange_t
	{
		public GCMsgHeader_t header;
		public UInt64 steamID;
		public const int k_iMessage = 1029;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=72)]
	public struct GSClientKick_t
	{
		public UInt64 m_SteamID;
		public EDenyReason m_eDenyReason;
		public const int k_iCallback = 203;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=184)]
	public struct GCTrading_SetReadiness_t
	{
		public GCMsgHeader_t header;
		public UInt32 version;
		public Byte response;
		public const int k_iMessage = 1507;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=128)]
	public struct UserItemDeleted_t
	{
		public UInt64 m_itemID;
		public UInt32 Unk0;
		public UInt32 Unk1;
		public const int k_iCallback = 1402;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=192)]
	public struct PersonaStateChangeOld_t
	{
		public UInt64 m_ulSteamID;
		public Int32 m_ePersonaStatePrevious;
		public Int32 m_nGameIDPrevious;
		public UInt32 m_unGameServerIPPrevious;
		public UInt16 m_usGameServerPortPrevious;
		public const int k_iCallback = 303;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=1096)]
	public struct GSClientDeny_t
	{
		public UInt64 m_SteamID;
		public EDenyReason m_eDenyReason;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 128)]
		public SByte[] m_pchOptionalText;
		public const int k_iCallback = 202;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=288)]
	public struct GCCraftResponse_t
	{
		public GCMsgHeader_t header;
		public UInt16 blueprint;
		public UInt64 unk1;
		public UInt64 itemid;
		public const int k_iMessage = 1003;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=160)]
	public struct ChatMemberInfoChanged_t
	{
		public UInt64 m_ulSteamIDChat;
		public UInt64 m_ulSteamIDUser;
		public UInt32 m_rgfChatMemberPermissions;
		public const int k_iCallback = 322;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=32)]
	public struct AppOwnershipTicketReceived_t
	{
		public UInt32 m_nAppID;
		public const int k_iCallback = 131;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=64)]
	public struct AppDataChanged_t
	{
		public UInt32 m_nAppID;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bBySteamUI;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bCDDBUpdate;
		public const int k_iCallback = 1001;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=64)]
	public struct GSStatsUnloaded_t
	{
		public UInt64 m_steamIDUser;
		public const int k_iCallback = 1108;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=4160)]
	public struct RichPresenceJoinRequested_t
	{
		public UInt64 m_ulSteamID;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 512)]
		public SByte[] szUnk;
		public const int k_iCallback = 337;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=144)]
	public struct FriendIgnored_t
	{
		public EResult m_eResult;
		public UInt64 m_ulSteamID;
		public UInt64 m_ulSteamFriendID;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bIgnored;
		public const int k_iCallback = 334;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=128)]
	public struct LobbyDataUpdate_t
	{
		public UInt64 m_ulSteamIDLobby;
		public UInt64 m_ulSteamIDMember;
		public const int k_iCallback = 505;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=144)]
	public struct ChatRoomActionResult_t
	{
		public UInt64 m_ulSteamIDChat;
		public UInt64 m_ulSteamIDUserActedOn;
		public EChatAction m_EChatAction;
		public EChatActionResult m_EChatActionResult;
		public const int k_iCallback = 319;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct FriendInvited_t
	{
		public EResult m_eResult;
		public const int k_iCallback = 307;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=1024)]
	public struct GameServerChangeRequested_t
	{
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 64)]
		public SByte[] m_rgchServer;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 64)]
		public SByte[] m_rgchPassword;
		public const int k_iCallback = 332;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=72)]
	public struct GSStatsStored_t
	{
		public EResult m_eResult;
		public UInt64 m_steamIDUser;
		public const int k_iCallback = 1801;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=160)]
	public struct FinalPriceMsg_t
	{
		public UInt32 m_bSuccess;
		public UInt32 m_nBaseCost;
		public UInt32 m_nTotalDiscount;
		public UInt32 m_nTax;
		public UInt32 m_nShippingCost;
		public const int k_iCallback = 401;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=192)]
	public struct LobbyGameCreated_t
	{
		public UInt64 m_ulSteamIDLobby;
		public UInt64 m_ulSteamIDGameServer;
		public UInt32 m_unIP;
		public UInt16 m_usPort;
		public const int k_iCallback = 509;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=64)]
	public struct GameID_t
	{
		public UInt32 m_nAppID;
		public UInt32 m_nType;
		public UInt32 m_nModID;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct SteamShutdown_t
	{
		public const int k_iCallback = 704;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=64)]
	public struct ChatRoomDlgClose_t
	{
		public UInt64 m_SteamID;
		public const int k_iCallback = 312;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=1224)]
	public struct ChatRoomInvite_t
	{
		public UInt64 m_ulSteamIDChat;
		public UInt64 m_ulSteamIDPatron;
		public UInt64 m_ulSteamIDFriendChat;
		public EChatRoomType m_EChatRoomType;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 128)]
		public SByte[] m_rgchChatRoomName;
		public const int k_iCallback = 308;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=32)]
	public struct NotifyHangup_t
	{
		public Int32 m_Handle;
		public const int k_iCallback = 327;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=240)]
	public struct SOMsgCacheSubscribed_t
	{
		public GCMsgHeader_t header;
		public UInt64 steamid;
		public UInt32 numberOfTypes;
		public const int k_iMessage = 24;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=96)]
	public struct ClientSteamNewsClientUpdate_t
	{
		public Byte m_eNewsUpdateType;
		public Byte m_bReloadCDDB;
		public UInt32 m_unCurrentBootstrapperVersion;
		public UInt32 m_unCurrentClientVersion;
		public const int k_iCallback = 116;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=4104)]
	public struct MsgWebAuthToken_t
	{
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bValid;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 512)]
		public SByte[] m_Token;
		public const int k_iCallback = 148;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct ResetForgottonPasswordResponse_t
	{
		public EResult m_EResult;
		public const int k_iCallback = 138;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=64)]
	public struct GSClientApprove_t
	{
		public UInt64 m_SteamID;
		public const int k_iCallback = 201;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=128)]
	public struct GSGameplayStats_t
	{
		public EResult m_eResult;
		public Int32 m_nRank;
		public UInt32 m_unTotalConnects;
		public UInt32 m_unTotalMinutesPlayed;
		public const int k_iCallback = 207;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=160)]
	public struct ChatRoomInfoChanged_t
	{
		public UInt64 m_ulSteamIDChat;
		public UInt32 m_rgfChatRoomDetails;
		public UInt64 m_ulSteamIDMakingChange;
		public const int k_iCallback = 323;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=200)]
	public struct LobbyChatUpdate_t
	{
		public UInt64 m_ulSteamIDLobby;
		public UInt64 m_ulSteamIDUserChanged;
		public UInt64 m_ulSteamIDMakingChange;
		public EChatMemberStateChange m_rgfChatMemberStateChange;
		public const int k_iCallback = 506;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=144)]
	public struct GCTrading_TradeTypingChatMsg_t
	{
		public GCMsgHeader_t header;
		public const int k_iMessage = 1513;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=240)]
	public struct GCTrading_InitiateTradeRequest_t
	{
		public GCMsgHeader_t header;
		public UInt32 challenge;
		public UInt64 steamID;
		public const int k_iMessage = 1501;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct CreateAccountResponse_t
	{
		public EResult m_EResult;
		public const int k_iCallback = 135;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct PrimaryChatDestinationSet_t
	{
		public Byte m_bIsPrimary;
		public const int k_iCallback = 114;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct LogOnCredentialsChanged_t
	{
		public const int k_iCallback = 124;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=1096)]
	public struct GSClientAchievementStatus_t
	{
		public UInt64 m_SteamID;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 128)]
		public SByte[] m_pchAchievement;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bUnlocked;
		public const int k_iCallback = 206;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=64)]
	public struct FriendProfileInfoReceived_t
	{
		public UInt64 m_ulSteamID;
		public const int k_iCallback = 838;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=304)]
	public struct SOMsgDeleted_t
	{
		public GCMsgHeader_t header;
		public UInt64 steamid;
		public UInt32 unk1;
		public UInt64 itemid;
		public const int k_iMessage = 23;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=128)]
	public struct ChatRoomKicking_t
	{
		public UInt64 m_ulSteamIDChat;
		public UInt64 m_ulSteamIDAdmin;
		public const int k_iCallback = 314;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=72)]
	public struct ValidateAuthTicketResponse_t
	{
		public UInt64 m_SteamID;
		public EAuthSessionResponse m_eAuthSessionResponse;
		public const int k_iCallback = 143;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=96)]
	public struct UpdateGuestPasses_t
	{
		public EResult m_eResult;
		public UInt32 m_cGuestPassesToGive;
		public UInt32 m_cGuestPassesToRedeem;
		public const int k_iCallback = 123;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=64)]
	public struct NumberOfCurrentPlayers_t
	{
		public Byte m_bSuccess;
		public Int32 m_cPlayers;
		public const int k_iCallback = 1107;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=136)]
	public struct ChatRoomCreate_t
	{
		public EResult m_eResult;
		public UInt64 m_ulSteamIDChat;
		public UInt64 m_ulSteamIDFriendChat;
		public const int k_iCallback = 316;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct BeginLogonRetry_t
	{
		public const int k_iCallback = 104;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=96)]
	public struct GSClientSteam2Accept_t
	{
		public UInt32 m_UserID;
		public UInt64 m_SteamID;
		public const int k_iCallback = 205;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=96)]
	public struct CCallbackBase
	{
		public Byte m_nCallbackFlags;
		public Int32 m_iCallback;
		public const int k_ECallbackFlagsRegistered = 1;
		public const int k_ECallbackFlagsGameServer = 2;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct GSPolicyResponse_t
	{
		public Byte m_bSecure;
		public const int k_iCallback = 115;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct PasswordChangeResponse_t
	{
		public EResult m_EResult;
		public const int k_iCallback = 132;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=136)]
	public struct ChatRoomSpeakChanged_t
	{
		public UInt64 m_ulSteamIDChat;
		public UInt64 m_ulSteamIDUser;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bSpeaking;
		public const int k_iCallback = 325;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=128)]
	public struct LobbyInvite_t
	{
		public UInt64 m_ulSteamIDUser;
		public UInt64 m_ulSteamIDLobby;
		public const int k_iCallback = 503;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=96)]
	public struct AppLifetimeNotice_t
	{
		public UInt32 m_nAppID;
		public Int32 m_nInstanceID;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bExiting;
		public const int k_iCallback = 130;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=96)]
	public struct ChatRoomDlgUIChange_t
	{
		public UInt64 m_SteamIDChat;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bShowAvatars;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bBeepOnNewMsg;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bShowSteamIDs;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bShowTimestampOnNewMsg;
		public const int k_iCallback = 330;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct DRMSDKFileTransferResult_t
	{
		public EResult m_EResult;
		public const int k_iCallback = 141;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct ScreenshotBatchResult_t
	{
		public EResult m_eResult;
		public const int k_iCallback = 1312;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=64)]
	public struct ChatRoomClosing_t
	{
		public UInt64 m_ulSteamIDChat;
		public const int k_iCallback = 313;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=192)]
	public struct GSItemRequest_t
	{
		public UInt64 m_steamID;
		public EItemRequestResult m_eResult;
		public UInt64 m_itemID;
		public const int k_iCallback = 1501;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=200)]
	public struct ChatMemberStateChange_t
	{
		public UInt64 m_ulSteamIDChat;
		public UInt64 m_ulSteamIDUserChanged;
		public EChatMemberStateChange m_rgfChatMemberStateChange;
		public UInt64 m_ulSteamIDMakingChange;
		public const int k_iCallback = 310;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=64)]
	public struct LobbyClosing_t
	{
		public UInt64 m_ulSteamIDLobby;
		public const int k_iCallback = 511;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct RequestAppCallbacksComplete_t
	{
		public const int k_iCallback = 1002;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=128)]
	public struct ChatRoomMetadataUpdate_t
	{
		public UInt64 m_ulSteamIDChat;
		public UInt64 m_ulSteamIDMember;
		public const int k_iCallback = 317;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=176)]
	public struct GCCraft_t
	{
		public GCMsgHeader_t header;
		public UInt16 blueprint;
		public UInt16 itemcount;
		public const int k_iMessage = 1002;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct SteamServerConnectFailure_t
	{
		public EResult m_eResult;
		public const int k_iCallback = 102;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct LogonFailure_t
	{
		public EResult m_eResult;
		public const int k_iCallback = 102;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct LowBatteryPower_t
	{
		public Byte m_nMinutesBatteryLeft;
		public const int k_iCallback = 702;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct AccountInformationUpdated_t
	{
		public const int k_iCallback = 119;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=208)]
	public struct GCTrading_InitiateTradeResponse_t
	{
		public GCMsgHeader_t header;
		public UInt32 result;
		public UInt32 challenge;
		public const int k_iMessage = 1502;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=96)]
	public struct LobbyEnter_t
	{
		public UInt64 m_ulSteamIDLobby;
		public EChatPermission m_rgfChatPermissions;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bLocked;
		public EChatRoomEnterResponse m_EChatRoomEnterResponse;
		public const int k_iCallback = 504;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=128)]
	public struct GameLobbyJoinRequested_t
	{
		public UInt64 m_steamIDLobby;
		public UInt64 m_steamIDFriend;
		public const int k_iCallback = 333;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct SteamServersDisconnected_t
	{
		public EResult m_eResult;
		public const int k_iCallback = 103;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=64)]
	public struct GSClientSteam2Deny_t
	{
		public UInt32 m_UserID;
		public ESteamError m_eSteamError;
		public const int k_iCallback = 204;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=176)]
	public struct GCTrading_SessionClosed_t
	{
		public GCMsgHeader_t header;
		public UInt32 result;
		public const int k_iMessage = 1509;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=256)]
	public struct ClientSteamNewsItemUpdate_t
	{
		public ENewsUpdateType m_eNewsUpdateType;
		public UInt32 m_uNewsID;
		public UInt32 m_uHaveSubID;
		public UInt32 m_uNotHaveSubID;
		public UInt32 m_uHaveAppID;
		public UInt32 m_uNotHaveAppID;
		public UInt32 m_uHaveAppIDInstalled;
		public UInt32 m_uHavePlayedAppID;
		public const int k_iCallback = 112;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=64)]
	public struct SteamAPICallCompleted_t
	{
		public UInt64 m_hAsyncCall;
		public const int k_iCallback = 703;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=128)]
	public struct NotifyChatRoomVoiceStateChanged_t
	{
		public UInt64 m_steamChatRoom;
		public UInt64 m_steamUser;
		public const int k_iCallback = 329;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=64)]
	public struct ChatRoomDlgSerialized_t
	{
		public UInt64 m_ulSteamID;
		public const int k_iCallback = 320;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=192)]
	public struct NotifyIncomingCall_t
	{
		public Int32 m_Handle;
		public UInt64 m_ulSteamID;
		public UInt64 m_ulSteamIDChat;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bIncoming;
		public const int k_iCallback = 326;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct CallbackPipeFailure_t
	{
		public const int k_iCallback = 117;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=208)]
	public struct GCTrading_ReadinessResponse_t
	{
		public GCMsgHeader_t header;
		public UInt32 version;
		public Byte player1ready;
		public Byte player2ready;
		public Byte player1confirmed;
		public Byte player2confirmed;
		public const int k_iMessage = 1508;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8320)]
	public struct UserItemGetBlob_t
	{
		public UInt64 m_itemID;
		public EItemRequestResult m_eResult;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 1024)]
		public Byte[] itemBlob;
		public const int k_iCallback = 1404;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=152)]
	public struct GC_GameServer_AuthChallenge_t
	{
		public GCMsgHeader_t header;
		public Byte unknown;
		public const int k_iMessage = 5701;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=72)]
	public struct P2PSessionConnectFail_t
	{
		public UInt64 m_steamIDRemote;
		public Byte m_eP2PSessionError;
		public const int k_iCallback = 1203;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=192)]
	public struct MicroTxnAuthorizationResponse_t
	{
		public UInt32 m_unAppID;
		public UInt64 m_ulOrderID;
		public Byte m_bAuthorized;
		public const int k_iCallback = 152;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=208)]
	public struct GCMOTDRequest_t
	{
		public GCMsgHeader_t header;
		public UInt32 timestamp;
		public UInt32 unk1;
		public const int k_iMessage = 1012;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=1216)]
	public struct UserAchievementStored_t
	{
		public UInt64 m_nGameID;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bGroupAchievement;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 128)]
		public SByte[] m_rgchAchievementName;
		public UInt32 m_nCurProgress;
		public UInt32 m_nMaxProgress;
		public const int k_iCallback = 1103;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=192)]
	public struct LeaderboardScoresDownloaded_t
	{
		public UInt64 m_hSteamLeaderboard;
		public UInt64 m_hSteamLeaderboardEntries;
		public Int32 m_cEntryCount;
		public const int k_iCallback = 1105;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=64)]
	public struct UserRequestingFriendship_t
	{
		public UInt64 m_ulSteamID;
		public const int k_iCallback = 302;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=192)]
	public struct FavoritesListChanged_t
	{
		public UInt32 m_nIP;
		public UInt32 m_nQueryPort;
		public UInt32 m_nConnPort;
		public UInt32 m_nAppID;
		public UInt32 m_nFlags;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bAdd;
		public const int k_iCallback = 502;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct EncryptedAppTicketResponse_t
	{
		public EResult m_eResult;
		public const int k_iCallback = 154;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=16)]
	public struct ClientPrimaryChatDestinationSet_t
	{
		public Byte m_bIsPrimary;
		public Byte m_bWasPrimary;
		public const int k_iCallback = 903;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8320)]
	public struct GSItemGetBlob_t
	{
		public UInt64 m_itemID;
		public EItemRequestResult m_eResult;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 1024)]
		public Byte[] m_itemBlob;
		public const int k_iCallback = 1508;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=1152)]
	public struct UserAchievementIconFetched_t
	{
		public UInt64 m_nGameID;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 128)]
		public SByte[] m_rgchAchievementName;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bAchieved;
		public Int32 m_nIconHandle;
		public const int k_iCallback = 1109;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=272)]
	public struct GCTrading_StartSession_t
	{
		public GCMsgHeader_t header;
		public UInt64 steamID1;
		public UInt64 steamID2;
		public const int k_iMessage = 1503;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=128)]
	public struct GSItemCount_t
	{
		public UInt64 m_steamID;
		public EItemRequestResult m_eResult;
		public UInt32 m_unCount;
		public const int k_iCallback = 1500;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=208)]
	public struct GCDelete_t
	{
		public GCMsgHeader_t header;
		public UInt64 itemID;
		public const int k_iMessage = 1004;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=144)]
	public struct GSClientGroupStatus_t
	{
		public UInt64 m_SteamIDUser;
		public UInt64 m_SteamIDGroup;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bMember;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bOfficer;
		public const int k_iCallback = 208;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct IPCFailure_t
	{
		public Byte m_eFailureType;
		public const int k_iCallback = 117;
		public const int k_EFailureFlushedCallbackQueue = 0;
		public const int k_EFailurePipeFail = 1;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct ClientMarketingMessageUpdate_t
	{
		public const int k_iCallback = 142;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=64)]
	public struct UserStatsUnloaded_t
	{
		public UInt64 m_steamIDUser;
		public const int k_iCallback = 1108;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=192)]
	public struct LobbyKicked_t
	{
		public UInt64 m_ulSteamIDLobby;
		public UInt64 m_ulSteamIDAdmin;
		public Byte m_bKickedDueToDisconnect;
		public const int k_iCallback = 512;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=32776)]
	public struct SystemIM_t
	{
		public ESystemIMType m_ESystemIMType;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 4096)]
		public SByte[] m_rgchMsgBody;
		public const int k_iCallback = 305;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=192)]
	public struct LobbyChatMsg_t
	{
		public UInt64 m_ulSteamIDLobby;
		public UInt64 m_ulSteamIDUser;
		public Byte m_eChatEntryType;
		public UInt32 m_iChatID;
		public const int k_iCallback = 507;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=128)]
	public struct UserItemGranted_t
	{
		public UInt64 m_itemID;
		public UInt64 m_gameID;
		public const int k_iCallback = 1403;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=2056)]
	public struct SteamConfigStoreChanged_t
	{
		public EConfigStore m_eConfigStore;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 256)]
		public SByte[] m_szRootOfChanges;
		public const int k_iCallback = 711;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=64)]
	public struct P2PSessionRequest_t
	{
		public UInt64 m_steamIDRemote;
		public const int k_iCallback = 1202;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=128)]
	public struct UserItemSetBlob_t
	{
		public UInt64 m_itemID;
		public EItemRequestResult m_eResult;
		public UInt32 Unk;
		public const int k_iCallback = 1405;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=128)]
	public struct LeaderboardFindResult_t
	{
		public UInt64 m_hSteamLeaderboard;
		public Byte m_bLeaderboardFound;
		public const int k_iCallback = 1104;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=128)]
	public struct UserStatsStored_t
	{
		public UInt64 m_nGameID;
		public EResult m_eResult;
		public const int k_iCallback = 1102;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=128)]
	public struct ClientGameServerDeny_t
	{
		public UInt32 m_uAppID;
		public UInt32 m_unGameServerIP;
		public UInt16 m_usGameServerPort;
		public UInt16 m_bSecure;
		public UInt32 m_uReason;
		public const int k_iCallback = 113;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=64)]
	public struct GuestPassRedeemed_t
	{
		public EResult m_eResult;
		public UInt32 m_unPackageID;
		public const int k_iCallback = 122;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct ResetPasswordResponse_t
	{
		public EResult m_EResult;
		public const int k_iCallback = 127;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=208)]
	public struct GCTrading_RemoveItem_t
	{
		public GCMsgHeader_t header;
		public UInt64 itemID;
		public const int k_iMessage = 1505;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct IPCountry_t
	{
		public const int k_iCallback = 701;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=72)]
	public struct GSStatsReceived_t
	{
		public EResult m_eResult;
		public UInt64 m_steamIDUser;
		public const int k_iCallback = 1800;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=192)]
	public struct FriendChatMsg_t
	{
		public UInt64 m_ulReceiver;
		public UInt64 m_ulSender;
		public UInt16 m_eChatEntryType;
		public Byte m_bLimitedAccount;
		public UInt32 m_iChatID;
		//public const int k_iCallback = 306;
        public const int k_iCallback = 805;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=176)]
	public struct GC_GameServer_AuthChallengeResponse_t
	{
		public GCMsgHeader_t header;
		public UInt32 accountID;
		public const int k_iMessage = 5702;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=128)]
	public struct FileShareResult_t
	{
		public Int32 unk1;
		public Int32 unk2;
		public Int32 unk3;
		public Int32 unk4;
		public const int k_iCallback = 1307;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=256)]
	public struct LeaderboardScoreUploaded_t
	{
		public Byte m_bSuccess;
		public UInt64 m_hSteamLeaderboard;
		public Int32 m_nScore;
		public Byte m_bScoreChanged;
		public Int32 m_nGlobalRankNew;
		public Int32 m_nGlobalRankPrevious;
		public const int k_iCallback = 1106;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=208)]
	public struct GCVerifyCacheSubscription_t
	{
		public GCMsgHeader_t header;
		public UInt64 steamid;
		public const int k_iMessage = 1005;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=128)]
	public struct GameStatsSessionIssued_t
	{
		public UInt64 m_ulSessionID;
		public EResult m_eResult;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bCollectingAny;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bCollectingDetails;
		public const int k_iCallback = 2001;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=128)]
	public struct ChatRoomBanning_t
	{
		public UInt64 m_ulSteamIDChat;
		public UInt64 m_ulSteamIDAdmin;
		public const int k_iCallback = 315;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=72)]
	public struct LobbyCreated_t
	{
		public EResult m_eResult;
		public UInt64 m_ulSteamIDLobby;
		public const int k_iCallback = 513;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=192)]
	public struct ChatRoomMsg_t
	{
		public UInt64 m_ulSteamIDChat;
		public UInt64 m_ulSteamIDUser;
		public Byte m_eChatEntryType;
		public UInt32 m_iChatID;
		//public const int k_iCallback = 311;
        public const int k_iCallback = 810;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct LoggedOff_t
	{
		public EResult m_eResult;
		public const int k_iCallback = 103;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct SecretQAChangeResponse_t
	{
		public EResult m_EResult;
		public const int k_iCallback = 134;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct GuestPassSent_t
	{
		public EResult m_eResult;
		public const int k_iCallback = 120;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct CheckFileSignature_t
	{
		public ECheckFileSignature m_eCheckFileSignature;
		public const int k_iCallback = 705;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct SteamServersConnected_t
	{
		public const int k_iCallback = 101;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=192)]
	public struct GuestPassAcked_t
	{
		public EResult m_eResult;
		public UInt32 m_unPackageID;
		public UInt64 m_gidGuestPassID;
		public UInt64 m_ulGuestPassKey;
		public const int k_iCallback = 121;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=32)]
	public struct NotifyRequestResume_t
	{
		public Int32 m_Handle;
		public const int k_iCallback = 328;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=1360)]
	public struct GCTrading_UpdateTradeInfo_t
	{
		public GCMsgHeader_t header;
		public UInt32 version;
		public Byte plyr1_numItems;
		public Byte plyr2_numItems;
		public Byte plyr1_numItems_showcase;
		public Byte plyr2_numItems_showcase;
		public UInt64 plyr1_showcase;
		public UInt64 plyr1_slot0;
		public UInt64 plyr1_slot1;
		public UInt64 plyr1_slot2;
		public UInt64 plyr1_slot3;
		public UInt64 plyr1_slot4;
		public UInt64 plyr1_slot5;
		public UInt64 plyr1_slot6;
		public UInt64 plyr1_slot7;
		public UInt64 plyr2_showcase;
		public UInt64 plyr2_slot0;
		public UInt64 plyr2_slot1;
		public UInt64 plyr2_slot2;
		public UInt64 plyr2_slot3;
		public UInt64 plyr2_slot4;
		public UInt64 plyr2_slot5;
		public UInt64 plyr2_slot6;
		public UInt64 plyr2_slot7;
		public const int k_iMessage = 1506;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=160)]
	public struct GCMOTDRequestResponse_t
	{
		public GCMsgHeader_t header;
		public UInt16 NumberOfNews;
		public const int k_iMessage = 1013;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=152)]
	public struct GC_GameServer_LevelInfo_t
	{
		public GCMsgHeader_t header;
		public Byte unknown;
		public const int k_iMessage = 5700;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=128)]
	public struct LobbyAdminChange_t
	{
		public UInt64 m_ulSteamIDLobby;
		public UInt64 m_ulSteamIDNewAdmin;
		public const int k_iCallback = 508;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct Steam2TicketChanged_t
	{
		public const int k_iCallback = 106;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=32)]
	public struct LobbyMatchList_t
	{
		public UInt32 m_nLobbiesMatching;
		public const int k_iCallback = 510;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct GameOverlayActivated_t
	{
		public Byte m_bActive;
		public const int k_iCallback = 331;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct SendForgottonPasswordEmailResponse_t
	{
		public EResult m_EResult;
		public const int k_iCallback = 137;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=128)]
	public struct UserItemMoved_t
	{
		public UInt64 m_itemID;
		public UInt32 Unk0;
		public UInt32 Unk1;
		public const int k_iCallback = 1401;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=152)]
	public struct GCTrading_TradeChatMsg_t
	{
		public GCMsgHeader_t header;
		public Byte unknown;
		public const int k_iMessage = 1511;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=80)]
	public struct PersonaStateChange_t
	{
		public UInt64 m_ulSteamID;
		public EPersonaChange m_nChangeFlags;
		public const int k_iCallback = 304;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=128)]
	public struct UserItemCount_t
	{
		public UInt64 m_gameID;
		public EItemRequestResult m_eResult;
		public UInt32 m_unCount;
		public const int k_iCallback = 1400;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=352)]
	public struct SOMsgUpdate_t
	{
		public GCMsgHeader_t header;
		public UInt64 steamid;
		public UInt32 unk1;
		public UInt64 itemID;
		public UInt16 unk2;
		public UInt32 position;
		public const int k_iMessage = 22;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct LogonSuccess_t
	{
		public const int k_iCallback = 101;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=320)]
	public struct GSReputation_t
	{
		public EResult m_eResult;
		public UInt32 m_unReputationScore;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bBanned;
		public UInt32 m_unBannedIP;
		public UInt16 m_usBannedPort;
		public UInt64 m_ulBannedGameID;
		public UInt32 m_unBanExpires;
		public const int k_iCallback = 209;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=192)]
	public struct UserStatsReceived_t
	{
		public UInt64 m_nGameID;
		public EResult m_eResult;
		public UInt64 m_steamIDUser;
		public const int k_iCallback = 1101;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct UserPolicyResponse_t
	{
		public Byte m_bSecure;
		public const int k_iCallback = 115;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct LicensesUpdated_t
	{
		public const int k_iCallback = 125;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct EmailChangeResponse_t
	{
		public EResult m_EResult;
		public const int k_iCallback = 133;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=32)]
	public struct DlcInstalled_t
	{
		public UInt32 m_nAppID;
		public const int k_iCallback = 1005;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct GCMessageFailed_t
	{
		public const int k_iCallback = 1702;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=176)]
	public struct GCTrading_ConfirmOffer_t
	{
		public GCMsgHeader_t header;
		public UInt32 version;
		public const int k_iMessage = 1512;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=576)]
	public struct LegacyCDKeyRegistered_t
	{
		public EResult m_eResult;
		public UInt32 m_iAppID;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 64)]
		public SByte[] m_rgchCDKey;
		public const int k_iCallback = 118;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=1032)]
	public struct DownloadFromDFSResponse_t
	{
		public EResult m_EResult;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 128)]
		public SByte[] m_rgchURL;
		public const int k_iCallback = 140;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=128)]
	public struct GSItemSetBlob_t
	{
		public UInt64 m_itemID;
		public EItemRequestResult m_eResult;
		public UInt32 Unk;
		public const int k_iCallback = 1509;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=72)]
	public struct FriendAdded_t
	{
		public EResult m_eResult;
		public UInt64 m_ulSteamID;
		public const int k_iCallback = 301;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=320)]
	public struct TSteamAppStats
	{
		public UInt32 uNumApps;
		public UInt32 uMaxNameChars;
		public UInt32 uMaxInstallDirNameChars;
		public UInt32 uMaxVersionLabelChars;
		public UInt32 uMaxLaunchOptions;
		public UInt32 uMaxLaunchOptionDescChars;
		public UInt32 uMaxLaunchOptionCmdLineChars;
		public UInt32 uMaxNumIcons;
		public UInt32 uMaxIconSize;
		public UInt32 uMaxDependencies;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=2112)]
	public struct TSteamProgress
	{
		public Int32 bValid;
		public UInt32 uPercentDone;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 255)]
		public SByte[] szProgress;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=9408)]
	public struct TSteamPaymentCardInfo
	{
		public ESteamPaymentCardType eCardType;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 18)]
		public SByte[] szCardNumber;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 101)]
		public SByte[] szCardHolderName;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 5)]
		public SByte[] szCardExpYear;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 3)]
		public SByte[] szCardExpMonth;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 6)]
		public SByte[] szCardCVV2;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 129)]
		public SByte[] szBillingAddress1;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 129)]
		public SByte[] szBillingAddress2;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 51)]
		public SByte[] szBillingCity;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 17)]
		public SByte[] szBillingZip;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 33)]
		public SByte[] szBillingState;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 33)]
		public SByte[] szBillingCountry;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 21)]
		public SByte[] szBillingPhone;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 101)]
		public SByte[] szBillingEmailAddress;
		public UInt32 uExpectedCostInCents;
		public UInt32 uExpectedTaxInCents;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 101)]
		public SByte[] szShippingName;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 129)]
		public SByte[] szShippingAddress1;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 129)]
		public SByte[] szShippingAddress2;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 51)]
		public SByte[] szShippingCity;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 17)]
		public SByte[] szShippingZip;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 33)]
		public SByte[] szShippingState;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 33)]
		public SByte[] szShippingCountry;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 21)]
		public SByte[] szShippingPhone;
		public UInt32 uExpectedShippingCostInCents;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=0)]
	public struct ISteamUser
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=0)]
	public struct ISteamMatchmakingServers
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=192)]
	public struct FriendGameInfo_t
	{
		public UInt64 m_gameID;
		public UInt32 m_unGameIP;
		public UInt16 m_usGamePort;
		public UInt16 m_usQueryPort;
		public UInt64 m_steamIDLobby;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=0)]
	public struct ISteamGameServerStats
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=2112)]
	public struct TSteamAppDependencyInfo
	{
		public UInt32 AppId;
		public UInt32 IsRequired;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 255)]
		public SByte[] szMountName;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=2240)]
	public struct TSteamElemInfo
	{
		public Int32 bIsDir;
		public UInt32 uSizeOrCount;
		public Int32 bIsLocal;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 255)]
		public SByte[] cszName;
		public Int32 lLastAccessTime;
		public Int32 lLastModificationTime;
		public Int32 lCreationTime;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=1456)]
	public struct TSteamExternalBillingInfo
	{
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 101)]
		public SByte[] szAccountName;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 81)]
		public SByte[] szPassword;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=32)]
	public struct SOMsgCacheSubscribed_Items_t
	{
		public UInt16 idOfType;
		public UInt16 itemcount;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=1856)]
	public struct TSteamPrepurchaseInfo
	{
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 21)]
		public SByte[] szTypeOfProofOfPurchase;
		public UInt32 uLengthOfBinaryProofOfPurchaseToken;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 201)]
		public SByte[] cBinaryProofOfPurchaseToken;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=9440)]
	public struct TSteamSubscriptionBillingInfo
	{
		public ESteamSubscriptionBillingInfoType eBillingInfoType;

		[StructLayout(LayoutKind.Explicit,CharSet=CharSet.Ansi,Pack=1,Size=9408)]
		public struct Unionvalue
		{
			[FieldOffset(0)]
			public TSteamPaymentCardInfo PaymentCardInfo;
			[FieldOffset(0)]
			public TSteamPrepurchaseInfo PrepurchaseInfo;
			[FieldOffset(0)]
			public TSteamExternalBillingInfo ExternalBillingInfo;
			[FieldOffset(0)]
			public SByte bUseAccountBillingInfo;
		}
		public Unionvalue value;

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=2112)]
	public struct TSteamError
	{
		public ESteamError eSteamError;
		public EDetailedPlatformErrorType eDetailedErrorType;
		public Int32 nDetailedErrorCode;
		public string szDesc;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=0)]
	public struct CCallbackMgr
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=128)]
	public struct CallbackMsg_t
	{
		public Int32 m_hSteamUser;
		public Int32 m_iCallback;
		public IntPtr m_pubParam;
		public Int32 m_cubParam;
	}
	
    [StructLayout( LayoutKind.Sequential, CharSet = CharSet.Ansi, Pack = 8 )]
    public struct TSteamApp
    {
        public string szName;
        public UInt32 uMaxNameChars;
        public string szLatestVersionLabel;
        public UInt32 uMaxLatestVersionLabelChars;
        public string szCurrentVersionLabel;
        public UInt32 uMaxCurrentVersionLabelChars;
        public string szInstallDirName;
        public UInt32 uMaxInstallDirNameChars;
        public UInt32 uId;
        public UInt32 uLatestVersionId;
        public UInt32 uCurrentVersionId;
        public UInt32 uMinCacheFileSizeMB;
        public UInt32 uMaxCacheFileSizeMB;
        public UInt32 uNumLaunchOptions;
        public UInt32 uNumIcons;
        public UInt32 uNumVersions;
        public UInt32 uNumDependencies;
    }

	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=8)]
	public struct GCMOTDRequestResponse_News_t
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=320)]
	public struct ConnectedUserInfo_t
	{
		public Int32 m_cubConnectedUserInfo;
		public Int32 m_nCountOfGuestUsers;
		public UInt64 m_SteamID;
		public UInt32 m_unIPPublic;
		public UInt32 m_nFrags;
		public double m_flConnectTime;
		public EGameConnectSteamResponse m_eGameConnectSteamResponse;
		public EDenyReason m_eDenyReason;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=0)]
	public struct ISteamApps
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=96)]
	public struct TSteamSubscriptionStats
	{
		public UInt32 uNumSubscriptions;
		public UInt32 uMaxNameChars;
		public UInt32 uMaxApps;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=0)]
	public struct ISteamFriends
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=2112)]
	public struct TSteamDiscountQualifier
	{
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 255)]
		public SByte[] szName;
		public UInt32 uRequiredSubscription;
		public Int32 bIsDisqualifier;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=128)]
	public struct TSteamUpdateStats
	{
		public UInt64 uBytesTotal;
		public UInt64 uBytesPresent;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=160)]
	public struct LeaderboardEntry001_t
	{
		public UInt64 m_steamIDUser;
		public Int32 m_nGlobalRank;
		public Int32 m_nScore;
		public Int32 m_cDetails;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=168)]
	public struct TSteamPrepurchaseReceiptInfo
	{
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 21)]
		public SByte[] szTypeOfProofOfPurchase;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=0)]
	public struct ISteamContentServer
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=5056)]
	public struct TSteamPaymentCardReceiptInfo
	{
		public ESteamPaymentCardType eCardType;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 5)]
		public SByte[] szCardLastFourDigits;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 101)]
		public SByte[] szCardHolderName;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 129)]
		public SByte[] szBillingAddress1;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 129)]
		public SByte[] szBillingAddress2;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 51)]
		public SByte[] szBillingCity;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 17)]
		public SByte[] szBillingZip;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 33)]
		public SByte[] szBillingState;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 33)]
		public SByte[] szBillingCountry;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 101)]
		public SByte[] szCardApprovalCode;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 10)]
		public SByte[] szTransDate;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 10)]
		public SByte[] szTransTime;
		public UInt32 uPriceWithoutTax;
		public UInt32 uTaxAmount;
		public UInt32 uShippingCost;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=0)]
	public struct ISteamGameServer
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=0)]
	public struct ISteamUserStats
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=0)]
	public struct ISteamMatchmaking
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=0)]
	public struct IClientGameServerItems
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=128)]
	public struct TSteamAppVersion
	{
		public IntPtr szLabel;
		public UInt32 uMaxLabelChars;
		public UInt32 uVersionId;
		public Int32 bIsNotAvailable;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=4096)]
	public struct MatchMakingKeyValuePair_t
	{
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 256)]
		public SByte[] m_szKey;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 256)]
		public SByte[] m_szValue;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=48)]
	public struct SOMsgCacheSubscribed_Item_Attrib_t
	{
		public UInt16 attribindex;
		public float value;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=0)]
	public struct ISteamGameServerItems
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=32)]
	public struct LeaderboardEntry002_t
	{
		public Int32 placeholder;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=0)]
	public struct IConCommandBaseAccessor
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=0)]
	public struct ISteamRemoteStorage
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=160)]
	public struct P2PSessionState_t
	{
		public Byte m_bConnectionActive;
		public Byte m_bConnecting;
		public Byte m_eP2PSessionError;
		public Byte m_bUsingRelay;
		public Int32 m_nBytesQueuedForSend;
		public Int32 m_nPacketsQueuedForSend;
		public UInt32 m_nRemoteIP;
		public UInt16 m_nRemotePort;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=0)]
	public struct ISteamUtils
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=0)]
	public struct ISteamClient
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=0)]
	public struct IVAC
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=64)]
	public struct SteamSalt
	{
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 8)]
		public Byte[] uchSalt;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=0)]
	public struct ISteam2Bridge
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=320)]
	public struct AppUpdateInfo_s
	{
		public UInt32 m_timeUpdateStart;
		public UInt64 m_unBytesToDownload;
		public UInt64 m_unBytesDownloaded;
		public UInt64 m_unBytesToWrite;
		public UInt64 m_unBytesWritten;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=0)]
	public struct IClientUserItems
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=288)]
	public struct TSteamAppLaunchOption
	{
		public IntPtr szDesc;
		public UInt32 uMaxDescChars;
		public IntPtr szCmdLine;
		public UInt32 uMaxCmdLineChars;
		public UInt32 uIndex;
		public UInt32 uIconIndex;
		public Int32 bNoDesktopShortcut;
		public Int32 bNoStartMenuShortcut;
		public Int32 bIsLongRunningUnattended;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=2624)]
	public struct TSteamSubscription
	{
		public IntPtr szName;
		public UInt32 uMaxNameChars;
		public IntPtr puAppIds;
		public UInt32 uMaxAppIds;
		public UInt32 uId;
		public UInt32 uNumApps;
		public EBillingType eBillingType;
		public UInt32 uCostInCents;
		public UInt32 uNumDiscounts;
		public Int32 bIsPreorder;
		public Int32 bRequiresShippingAddress;
		public UInt32 uDomesticShippingCostInCents;
		public UInt32 uInternationalShippingCostInCents;
		[MarshalAs(UnmanagedType.I1)]
		public bool bIsCyberCafeSubscription;
		public UInt32 uGameCode;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 255)]
		public SByte[] szGameCodeDesc;
		[MarshalAs(UnmanagedType.I1)]
		public bool bIsDisabled;
		[MarshalAs(UnmanagedType.I1)]
		public bool bRequiresCD;
		public UInt32 uTerritoryCode;
		[MarshalAs(UnmanagedType.I1)]
		public bool bIsSteam3Subscription;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=0)]
	public struct ISteamMasterServerUpdater
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=0)]
	public struct ISteamBilling
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=0)]
	public struct IP2PController
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=5280)]
	public struct TSteamSubscriptionReceipt
	{
		public ESteamSubscriptionStatus eStatus;
		public ESteamSubscriptionStatus ePreviousStatus;
		public ESteamSubscriptionBillingInfoType eReceiptInfoType;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 23)]
		public SByte[] szConfirmationCode;

		[StructLayout(LayoutKind.Explicit,CharSet=CharSet.Ansi,Pack=1,Size=5056)]
		public struct Unionvalue
		{
			[FieldOffset(0)]
			public TSteamPaymentCardReceiptInfo PaymentCardReceiptInfo;
			[FieldOffset(0)]
			public TSteamPrepurchaseReceiptInfo PrepurchaseReceiptInfo;
		}
		public Unionvalue value;

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=2112)]
	public struct TSteamSubscriptionDiscount
	{
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 255)]
		public SByte[] szName;
		public UInt32 uDiscountInCents;
		public UInt32 uNumQualifiers;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=0)]
	public struct ISteamNetworking
	{
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=8,Size=64)]
	public struct TSteamOfflineStatus
	{
		public Int32 eOfflineNow;
		public Int32 eOfflineNextSession;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=32)]
	public struct DynamicLibrary
	{
		public IntPtr m_handle;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamApps002VTable
	{
		public IntPtr IsSubscribed;
		public IntPtr IsLowViolence;
		public IntPtr IsCybercafe;
		public IntPtr IsVACBanned;
		public IntPtr GetCurrentGameLanguage;
		public IntPtr GetAvailableGameLanguages;
		public IntPtr IsSubscribedApp;
	}
	
	public class ISteamApps002 : NativeWrapper<ISteamApps002VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsSubscribed(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsSubscribed() { var call = this.GetFunction<NativeIsSubscribed>(this.Functions.IsSubscribed); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsLowViolence(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsLowViolence() { var call = this.GetFunction<NativeIsLowViolence>(this.Functions.IsLowViolence); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsCybercafe(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsCybercafe() { var call = this.GetFunction<NativeIsCybercafe>(this.Functions.IsCybercafe); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsVACBanned(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsVACBanned() { var call = this.GetFunction<NativeIsVACBanned>(this.Functions.IsVACBanned); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetCurrentGameLanguage(IntPtr thisobj);
		public string GetCurrentGameLanguage() { var call = this.GetFunction<NativeGetCurrentGameLanguage>(this.Functions.GetCurrentGameLanguage); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetAvailableGameLanguages(IntPtr thisobj);
		public string GetAvailableGameLanguages() { var call = this.GetFunction<NativeGetAvailableGameLanguages>(this.Functions.GetAvailableGameLanguages); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsSubscribedApp(IntPtr thisobj, UInt32 appID);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsSubscribedApp(UInt32 appID) { var call = this.GetFunction<NativeIsSubscribedApp>(this.Functions.IsSubscribedApp); return call(this.ObjectAddress, appID); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientAppManagerVTable
	{
		public IntPtr LaunchApp;
		public IntPtr ShutdownApp;
		public IntPtr GetAppState;
		public IntPtr InstallApp;
		public IntPtr GetAppDir;
		public IntPtr UninstallApp;
		public IntPtr GetUpdateInfo;
		public IntPtr StartDownloadingUpdates;
		public IntPtr StopDownloadingUpdates;
		public IntPtr ApplyUpdate;
		public IntPtr VerifyApp;
		public IntPtr GetFileInfo;
		public IntPtr SetAppConfig;
		public IntPtr IsAppUpToDate;
	}
	
	public class IClientAppManager : NativeWrapper<IClientAppManagerVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLaunchApp(IntPtr thisobj, UInt32 unAppID, UInt32 uLaunchOption, string cszArgs);
		[return: MarshalAs(UnmanagedType.I1)] public bool LaunchApp(UInt32 unAppID, UInt32 uLaunchOption, string cszArgs) { var call = this.GetFunction<NativeLaunchApp>(this.Functions.LaunchApp); return call(this.ObjectAddress, unAppID, uLaunchOption, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArgs ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeShutdownApp(IntPtr thisobj, UInt32 unAppID, [MarshalAs(UnmanagedType.I1)] bool bForce);
		[return: MarshalAs(UnmanagedType.I1)] public bool ShutdownApp(UInt32 unAppID, [MarshalAs(UnmanagedType.I1)] bool bForce) { var call = this.GetFunction<NativeShutdownApp>(this.Functions.ShutdownApp); return call(this.ObjectAddress, unAppID, bForce); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EAppState NativeGetAppState(IntPtr thisobj, UInt32 unAppID);
		public EAppState GetAppState(UInt32 unAppID) { var call = this.GetFunction<NativeGetAppState>(this.Functions.GetAppState); return call(this.ObjectAddress, unAppID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeInstallApp(IntPtr thisobj, UInt32 unAppID, string phBuffer, Int32 cbBuffer);
		[return: MarshalAs(UnmanagedType.I1)] public bool InstallApp(UInt32 unAppID, string phBuffer, Int32 cbBuffer) { var call = this.GetFunction<NativeInstallApp>(this.Functions.InstallApp); return call(this.ObjectAddress, unAppID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( phBuffer ) ), cbBuffer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppDir(IntPtr thisobj, UInt32 unAppID, string szBuffer, UInt32 cubBuffer);
		public UInt32 GetAppDir(UInt32 unAppID, string szBuffer, UInt32 cubBuffer) { var call = this.GetFunction<NativeGetAppDir>(this.Functions.GetAppDir); return call(this.ObjectAddress, unAppID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szBuffer ) ), cubBuffer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUninstallApp(IntPtr thisobj, UInt32 unAppID, [MarshalAs(UnmanagedType.I1)] bool bComplete);
		[return: MarshalAs(UnmanagedType.I1)] public bool UninstallApp(UInt32 unAppID, [MarshalAs(UnmanagedType.I1)] bool bComplete) { var call = this.GetFunction<NativeUninstallApp>(this.Functions.UninstallApp); return call(this.ObjectAddress, unAppID, bComplete); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetUpdateInfo(IntPtr thisobj, UInt32 unAppID, ref AppUpdateInfo_s pUpdateInfo);
		public UInt32 GetUpdateInfo(UInt32 unAppID, ref AppUpdateInfo_s pUpdateInfo) { var call = this.GetFunction<NativeGetUpdateInfo>(this.Functions.GetUpdateInfo); return call(this.ObjectAddress, unAppID, ref pUpdateInfo); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeStartDownloadingUpdates(IntPtr thisobj, UInt32 unAppID);
		[return: MarshalAs(UnmanagedType.I1)] public bool StartDownloadingUpdates(UInt32 unAppID) { var call = this.GetFunction<NativeStartDownloadingUpdates>(this.Functions.StartDownloadingUpdates); return call(this.ObjectAddress, unAppID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeStopDownloadingUpdates(IntPtr thisobj, UInt32 unAppID, [MarshalAs(UnmanagedType.I1)] bool bLockContent);
		[return: MarshalAs(UnmanagedType.I1)] public bool StopDownloadingUpdates(UInt32 unAppID, [MarshalAs(UnmanagedType.I1)] bool bLockContent) { var call = this.GetFunction<NativeStopDownloadingUpdates>(this.Functions.StopDownloadingUpdates); return call(this.ObjectAddress, unAppID, bLockContent); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeApplyUpdate(IntPtr thisobj, UInt32 unAppID);
		[return: MarshalAs(UnmanagedType.I1)] public bool ApplyUpdate(UInt32 unAppID) { var call = this.GetFunction<NativeApplyUpdate>(this.Functions.ApplyUpdate); return call(this.ObjectAddress, unAppID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeVerifyApp(IntPtr thisobj, UInt32 unAppID);
		[return: MarshalAs(UnmanagedType.I1)] public bool VerifyApp(UInt32 unAppID) { var call = this.GetFunction<NativeVerifyApp>(this.Functions.VerifyApp); return call(this.ObjectAddress, unAppID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFileInfo(IntPtr thisobj, UInt32 unAppID, string pchFileName, ref UInt64 punFileSize, ref UInt32 puDepotId);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFileInfo(UInt32 unAppID, string pchFileName, ref UInt64 punFileSize, ref UInt32 puDepotId) { var call = this.GetFunction<NativeGetFileInfo>(this.Functions.GetFileInfo); return call(this.ObjectAddress, unAppID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFileName ) ), ref punFileSize, ref puDepotId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetAppConfig(IntPtr thisobj, UInt32 unAppID, byte[] pchBuffer, Int32 cbBuffer);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetAppConfig(UInt32 unAppID, byte[] pchBuffer, Int32 cbBuffer) { var call = this.GetFunction<NativeSetAppConfig>(this.Functions.SetAppConfig); return call(this.ObjectAddress, unAppID, pchBuffer, cbBuffer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsAppUpToDate(IntPtr thisobj, UInt32 unAppID);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsAppUpToDate(UInt32 unAppID) { var call = this.GetFunction<NativeIsAppUpToDate>(this.Functions.IsAppUpToDate); return call(this.ObjectAddress, unAppID); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientRemoteStorageVTable
	{
		public IntPtr FileWrite;
		public IntPtr GetFileSize;
		public IntPtr FileRead;
		public IntPtr FileForget;
		public IntPtr FileDelete;
		public IntPtr FileShare;
		public IntPtr FileExists;
		public IntPtr FilePersisted;
		public IntPtr GetFileTimestamp;
		public IntPtr SetSyncPlatforms;
		public IntPtr GetSyncPlatforms;
		public IntPtr GetFileCount;
		public IntPtr GetFileNameAndSize;
		public IntPtr GetQuota;
		public IntPtr IsCloudEnabledForAccount;
		public IntPtr IsCloudEnabledForApp;
		public IntPtr SetCloudEnabledForApp;
		public IntPtr UGCDownload;
		public IntPtr GetUGCDetails;
		public IntPtr UGCRead;
		public IntPtr GetCachedUGCCount;
		public IntPtr GetCachedUGCHandle;
		public IntPtr GetShortcutDisplayName;
		public IntPtr SetShortcutDisplayName;
		public IntPtr ScreenshotWrite;
		public IntPtr ScreenshotResolvePath;
		public IntPtr ScreenshotGetFileSize;
		public IntPtr GetNumGamesWithLocalScreenshots;
		public IntPtr GetGameWithLocalScreenshots;
		public IntPtr GetLocalScreenshotCount;
		public IntPtr GetLocalScreenshot;
		public IntPtr SetLocalScreenshotCaption;
		public IntPtr SetLocalScreenshotPrivacy;
		public IntPtr ScreenshotStartBatch;
		public IntPtr ScreenshotAddToBatch;
		public IntPtr ScreenshotUploadBatch;
		public IntPtr ScreenshotDeleteBatch;
		public IntPtr ScreenshotCancelBatch;
		public IntPtr RecoverOldScreenshots;
		public IntPtr FilePersist;
		public IntPtr ResolvePath;
		public IntPtr SetCloudEnabledForAccount;
		public IntPtr LoadLocalFileInfoCache;
		public IntPtr EvaluateRemoteStorageSyncState;
		public IntPtr GetRemoteStorageSyncState;
		public IntPtr HaveLatestFilesLocally;
		public IntPtr GetConflictingFileTimestamps;
		public IntPtr ResolveSyncConflict;
		public IntPtr SynchronizeApp;
		public IntPtr IsAppSyncInProgress;
		public IntPtr ERemoteStorageFileRootFromName;
		public IntPtr PchNameFromERemoteStorageFileRoot;
	}
	
	public class IClientRemoteStorage : NativeWrapper<IClientRemoteStorageVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeFileWrite(IntPtr thisobj, UInt32 nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile, byte[] pvData, Int32 cubData);
		[return: MarshalAs(UnmanagedType.I1)] public bool FileWrite(UInt32 nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile, byte[] pvData, Int32 cubData) { var call = this.GetFunction<NativeFileWrite>(this.Functions.FileWrite); return call(this.ObjectAddress, nAppId, eRemoteStorageFileRoot, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) ), pvData, cubData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFileSize(IntPtr thisobj, UInt32 nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string arg3);
		public Int32 GetFileSize(UInt32 nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string arg3) { var call = this.GetFunction<NativeGetFileSize>(this.Functions.GetFileSize); return call(this.ObjectAddress, nAppId, eRemoteStorageFileRoot, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg3 ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFileRead(IntPtr thisobj, UInt32 nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile, byte[] pvData, Int32 cubDataToRead);
		public Int32 FileRead(UInt32 nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile, byte[] pvData, Int32 cubDataToRead) { var call = this.GetFunction<NativeFileRead>(this.Functions.FileRead); return call(this.ObjectAddress, nAppId, eRemoteStorageFileRoot, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) ), pvData, cubDataToRead); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeFileForget(IntPtr thisobj, UInt32 nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile);
		[return: MarshalAs(UnmanagedType.I1)] public bool FileForget(UInt32 nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile) { var call = this.GetFunction<NativeFileForget>(this.Functions.FileForget); return call(this.ObjectAddress, nAppId, eRemoteStorageFileRoot, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeFileDelete(IntPtr thisobj, UInt32 nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile);
		[return: MarshalAs(UnmanagedType.I1)] public bool FileDelete(UInt32 nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile) { var call = this.GetFunction<NativeFileDelete>(this.Functions.FileDelete); return call(this.ObjectAddress, nAppId, eRemoteStorageFileRoot, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeFileShare(IntPtr thisobj, UInt32 nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile);
		public UInt64 FileShare(UInt32 nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile) { var call = this.GetFunction<NativeFileShare>(this.Functions.FileShare); return call(this.ObjectAddress, nAppId, eRemoteStorageFileRoot, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeFileExists(IntPtr thisobj, UInt32 nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile);
		[return: MarshalAs(UnmanagedType.I1)] public bool FileExists(UInt32 nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile) { var call = this.GetFunction<NativeFileExists>(this.Functions.FileExists); return call(this.ObjectAddress, nAppId, eRemoteStorageFileRoot, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeFilePersisted(IntPtr thisobj, UInt32 nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile);
		[return: MarshalAs(UnmanagedType.I1)] public bool FilePersisted(UInt32 nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile) { var call = this.GetFunction<NativeFilePersisted>(this.Functions.FilePersisted); return call(this.ObjectAddress, nAppId, eRemoteStorageFileRoot, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int64 NativeGetFileTimestamp(IntPtr thisobj, UInt32 nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile);
		public Int64 GetFileTimestamp(UInt32 nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile) { var call = this.GetFunction<NativeGetFileTimestamp>(this.Functions.GetFileTimestamp); return call(this.ObjectAddress, nAppId, eRemoteStorageFileRoot, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetSyncPlatforms(IntPtr thisobj, UInt32 nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile, Int32 iUnk);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetSyncPlatforms(UInt32 nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile, Int32 iUnk) { var call = this.GetFunction<NativeSetSyncPlatforms>(this.Functions.SetSyncPlatforms); return call(this.ObjectAddress, nAppId, eRemoteStorageFileRoot, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) ), iUnk); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSyncPlatforms(IntPtr thisobj, UInt32 nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile);
		public Int32 GetSyncPlatforms(UInt32 nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile) { var call = this.GetFunction<NativeGetSyncPlatforms>(this.Functions.GetSyncPlatforms); return call(this.ObjectAddress, nAppId, eRemoteStorageFileRoot, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFileCount(IntPtr thisobj, UInt32 nAppId, [MarshalAs(UnmanagedType.I1)] bool bUnk1);
		public Int32 GetFileCount(UInt32 nAppId, [MarshalAs(UnmanagedType.I1)] bool bUnk1) { var call = this.GetFunction<NativeGetFileCount>(this.Functions.GetFileCount); return call(this.ObjectAddress, nAppId, bUnk1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFileNameAndSize(IntPtr thisobj, UInt32 nAppId, Int32 iFile, ref Int32 pnFileSizeInBytes, Int32 arg4, [MarshalAs(UnmanagedType.I1)] bool bUnk1);
		public string GetFileNameAndSize(UInt32 nAppId, Int32 iFile, ref Int32 pnFileSizeInBytes, Int32 arg4, [MarshalAs(UnmanagedType.I1)] bool bUnk1) { var call = this.GetFunction<NativeGetFileNameAndSize>(this.Functions.GetFileNameAndSize); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, nAppId, iFile, ref pnFileSizeInBytes, arg4, bUnk1) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetQuota(IntPtr thisobj, UInt32 nAppId, ref Int32 pnTotalBytes, ref Int32 pnAvailableBytes);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetQuota(UInt32 nAppId, ref Int32 pnTotalBytes, ref Int32 pnAvailableBytes) { var call = this.GetFunction<NativeGetQuota>(this.Functions.GetQuota); return call(this.ObjectAddress, nAppId, ref pnTotalBytes, ref pnAvailableBytes); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsCloudEnabledForAccount(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsCloudEnabledForAccount() { var call = this.GetFunction<NativeIsCloudEnabledForAccount>(this.Functions.IsCloudEnabledForAccount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsCloudEnabledForApp(IntPtr thisobj, UInt32 nAppId);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsCloudEnabledForApp(UInt32 nAppId) { var call = this.GetFunction<NativeIsCloudEnabledForApp>(this.Functions.IsCloudEnabledForApp); return call(this.ObjectAddress, nAppId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetCloudEnabledForApp(IntPtr thisobj, UInt32 nAppId, [MarshalAs(UnmanagedType.I1)] bool bEnable);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetCloudEnabledForApp(UInt32 nAppId, [MarshalAs(UnmanagedType.I1)] bool bEnable) { var call = this.GetFunction<NativeSetCloudEnabledForApp>(this.Functions.SetCloudEnabledForApp); return call(this.ObjectAddress, nAppId, bEnable); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeUGCDownload(IntPtr thisobj, Int32 unk1, Int32 unk2);
		public Int32 UGCDownload(Int32 unk1, Int32 unk2) { var call = this.GetFunction<NativeUGCDownload>(this.Functions.UGCDownload); return call(this.ObjectAddress, unk1, unk2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetUGCDetails(IntPtr thisobj, Int32 unk1, Int32 unk2, Int32 unk3, Int32 unk4, Int32 unk5, Int32 unk6);
		public Int32 GetUGCDetails(Int32 unk1, Int32 unk2, Int32 unk3, Int32 unk4, Int32 unk5, Int32 unk6) { var call = this.GetFunction<NativeGetUGCDetails>(this.Functions.GetUGCDetails); return call(this.ObjectAddress, unk1, unk2, unk3, unk4, unk5, unk6); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeUGCRead(IntPtr thisobj, Int32 unk1, Int32 unk2, Int32 unk3, Int32 unk4);
		public Int32 UGCRead(Int32 unk1, Int32 unk2, Int32 unk3, Int32 unk4) { var call = this.GetFunction<NativeUGCRead>(this.Functions.UGCRead); return call(this.ObjectAddress, unk1, unk2, unk3, unk4); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCachedUGCCount(IntPtr thisobj);
		public Int32 GetCachedUGCCount() { var call = this.GetFunction<NativeGetCachedUGCCount>(this.Functions.GetCachedUGCCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCachedUGCHandle(IntPtr thisobj);
		public Int32 GetCachedUGCHandle() { var call = this.GetFunction<NativeGetCachedUGCHandle>(this.Functions.GetCachedUGCHandle); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetShortcutDisplayName(IntPtr thisobj, UInt64 GameID);
		public string GetShortcutDisplayName(UInt64 GameID) { var call = this.GetFunction<NativeGetShortcutDisplayName>(this.Functions.GetShortcutDisplayName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, GameID) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetShortcutDisplayName(IntPtr thisobj, UInt64 GameID, string szName);
		public void SetShortcutDisplayName(UInt64 GameID, string szName) { var call = this.GetFunction<NativeSetShortcutDisplayName>(this.Functions.SetShortcutDisplayName); call(this.ObjectAddress, GameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeScreenshotWrite(IntPtr thisobj, UInt64 GameID, byte[] pubRGBData, UInt32 uRGBDataSize, UInt32 uWidth, UInt32 uHeight);
		[return: MarshalAs(UnmanagedType.I1)] public bool ScreenshotWrite(UInt64 GameID, byte[] pubRGBData, UInt32 uRGBDataSize, UInt32 uWidth, UInt32 uHeight) { var call = this.GetFunction<NativeScreenshotWrite>(this.Functions.ScreenshotWrite); return call(this.ObjectAddress, GameID, pubRGBData, uRGBDataSize, uWidth, uHeight); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeScreenshotResolvePath(IntPtr thisobj, UInt64 GameID, string szFilename, [MarshalAs(UnmanagedType.I1)] bool bUnk, string szResolvedPath, UInt32 cubResolvedPath);
		[return: MarshalAs(UnmanagedType.I1)] public bool ScreenshotResolvePath(UInt64 GameID, string szFilename, [MarshalAs(UnmanagedType.I1)] bool bUnk, string szResolvedPath, UInt32 cubResolvedPath) { var call = this.GetFunction<NativeScreenshotResolvePath>(this.Functions.ScreenshotResolvePath); return call(this.ObjectAddress, GameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szFilename ) ), bUnk, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szResolvedPath ) ), cubResolvedPath); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeScreenshotGetFileSize(IntPtr thisobj, UInt64 GameID, string szFilename);
		public UInt32 ScreenshotGetFileSize(UInt64 GameID, string szFilename) { var call = this.GetFunction<NativeScreenshotGetFileSize>(this.Functions.ScreenshotGetFileSize); return call(this.ObjectAddress, GameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szFilename ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumGamesWithLocalScreenshots(IntPtr thisobj);
		public UInt32 GetNumGamesWithLocalScreenshots() { var call = this.GetFunction<NativeGetNumGamesWithLocalScreenshots>(this.Functions.GetNumGamesWithLocalScreenshots); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetGameWithLocalScreenshots(IntPtr thisobj, UInt32 uIndex);
		public UInt64 GetGameWithLocalScreenshots(UInt32 uIndex) { var call = this.GetFunction<NativeGetGameWithLocalScreenshots>(this.Functions.GetGameWithLocalScreenshots); return call(this.ObjectAddress, uIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLocalScreenshotCount(IntPtr thisobj, UInt64 GameID);
		public UInt32 GetLocalScreenshotCount(UInt64 GameID) { var call = this.GetFunction<NativeGetLocalScreenshotCount>(this.Functions.GetLocalScreenshotCount); return call(this.ObjectAddress, GameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetLocalScreenshot(IntPtr thisobj, UInt64 GameID, UInt32 uIndex, string pchFilename, UInt32 cubFilename, ref UInt32 puWidth, ref UInt32 puHeight, ref UInt32 puTimestamp, ref EScreenshotPrivacy pePrivacy, ref UInt64 pulUnk, string pchCaption, UInt32 cubCaption);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetLocalScreenshot(UInt64 GameID, UInt32 uIndex, string pchFilename, UInt32 cubFilename, ref UInt32 puWidth, ref UInt32 puHeight, ref UInt32 puTimestamp, ref EScreenshotPrivacy pePrivacy, ref UInt64 pulUnk, string pchCaption, UInt32 cubCaption) { var call = this.GetFunction<NativeGetLocalScreenshot>(this.Functions.GetLocalScreenshot); return call(this.ObjectAddress, GameID, uIndex, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFilename ) ), cubFilename, ref puWidth, ref puHeight, ref puTimestamp, ref pePrivacy, ref pulUnk, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCaption ) ), cubCaption); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLocalScreenshotCaption(IntPtr thisobj, UInt64 GameID, string szFilename, string szCaption);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLocalScreenshotCaption(UInt64 GameID, string szFilename, string szCaption) { var call = this.GetFunction<NativeSetLocalScreenshotCaption>(this.Functions.SetLocalScreenshotCaption); return call(this.ObjectAddress, GameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szFilename ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( szCaption ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLocalScreenshotPrivacy(IntPtr thisobj, UInt64 GameID, string szFilename, EScreenshotPrivacy ePrivacy);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLocalScreenshotPrivacy(UInt64 GameID, string szFilename, EScreenshotPrivacy ePrivacy) { var call = this.GetFunction<NativeSetLocalScreenshotPrivacy>(this.Functions.SetLocalScreenshotPrivacy); return call(this.ObjectAddress, GameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szFilename ) ), ePrivacy); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeScreenshotStartBatch(IntPtr thisobj, UInt64 GameID);
		[return: MarshalAs(UnmanagedType.I1)] public bool ScreenshotStartBatch(UInt64 GameID) { var call = this.GetFunction<NativeScreenshotStartBatch>(this.Functions.ScreenshotStartBatch); return call(this.ObjectAddress, GameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeScreenshotAddToBatch(IntPtr thisobj, string szFilename);
		[return: MarshalAs(UnmanagedType.I1)] public bool ScreenshotAddToBatch(string szFilename) { var call = this.GetFunction<NativeScreenshotAddToBatch>(this.Functions.ScreenshotAddToBatch); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szFilename ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeScreenshotUploadBatch(IntPtr thisobj, EScreenshotPrivacy ePrivacy);
		public UInt64 ScreenshotUploadBatch(EScreenshotPrivacy ePrivacy) { var call = this.GetFunction<NativeScreenshotUploadBatch>(this.Functions.ScreenshotUploadBatch); return call(this.ObjectAddress, ePrivacy); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeScreenshotDeleteBatch(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bDeleteFromCloud);
		public UInt64 ScreenshotDeleteBatch([MarshalAs(UnmanagedType.I1)] bool bDeleteFromCloud) { var call = this.GetFunction<NativeScreenshotDeleteBatch>(this.Functions.ScreenshotDeleteBatch); return call(this.ObjectAddress, bDeleteFromCloud); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeScreenshotCancelBatch(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool ScreenshotCancelBatch() { var call = this.GetFunction<NativeScreenshotCancelBatch>(this.Functions.ScreenshotCancelBatch); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRecoverOldScreenshots(IntPtr thisobj);
		public void RecoverOldScreenshots() { var call = this.GetFunction<NativeRecoverOldScreenshots>(this.Functions.RecoverOldScreenshots); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFilePersist(IntPtr thisobj, UInt32 nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile);
		public Int32 FilePersist(UInt32 nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string pchFile) { var call = this.GetFunction<NativeFilePersist>(this.Functions.FilePersist); return call(this.ObjectAddress, nAppId, eRemoteStorageFileRoot, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeResolvePath(IntPtr thisobj, UInt32 nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string arg3, string arg4, UInt32 arg5);
		public Int32 ResolvePath(UInt32 nAppId, ERemoteStorageFileRoot eRemoteStorageFileRoot, string arg3, string arg4, UInt32 arg5) { var call = this.GetFunction<NativeResolvePath>(this.Functions.ResolvePath); return call(this.ObjectAddress, nAppId, eRemoteStorageFileRoot, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg3 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg4 ) ), arg5); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetCloudEnabledForAccount(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bEnable);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetCloudEnabledForAccount([MarshalAs(UnmanagedType.I1)] bool bEnable) { var call = this.GetFunction<NativeSetCloudEnabledForAccount>(this.Functions.SetCloudEnabledForAccount); return call(this.ObjectAddress, bEnable); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeLoadLocalFileInfoCache(IntPtr thisobj, UInt32 nAppId);
		public Int32 LoadLocalFileInfoCache(UInt32 nAppId) { var call = this.GetFunction<NativeLoadLocalFileInfoCache>(this.Functions.LoadLocalFileInfoCache); return call(this.ObjectAddress, nAppId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEvaluateRemoteStorageSyncState(IntPtr thisobj, UInt32 nAppId);
		public Int32 EvaluateRemoteStorageSyncState(UInt32 nAppId) { var call = this.GetFunction<NativeEvaluateRemoteStorageSyncState>(this.Functions.EvaluateRemoteStorageSyncState); return call(this.ObjectAddress, nAppId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ERemoteStorageSyncState NativeGetRemoteStorageSyncState(IntPtr thisobj, UInt32 nAppId);
		public ERemoteStorageSyncState GetRemoteStorageSyncState(UInt32 nAppId) { var call = this.GetFunction<NativeGetRemoteStorageSyncState>(this.Functions.GetRemoteStorageSyncState); return call(this.ObjectAddress, nAppId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeHaveLatestFilesLocally(IntPtr thisobj, UInt32 nAppId);
		[return: MarshalAs(UnmanagedType.I1)] public bool HaveLatestFilesLocally(UInt32 nAppId) { var call = this.GetFunction<NativeHaveLatestFilesLocally>(this.Functions.HaveLatestFilesLocally); return call(this.ObjectAddress, nAppId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetConflictingFileTimestamps(IntPtr thisobj, UInt32 nAppId, ref UInt32 arg2, ref UInt32 arg3);
		public Int32 GetConflictingFileTimestamps(UInt32 nAppId, ref UInt32 arg2, ref UInt32 arg3) { var call = this.GetFunction<NativeGetConflictingFileTimestamps>(this.Functions.GetConflictingFileTimestamps); return call(this.ObjectAddress, nAppId, ref arg2, ref arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeResolveSyncConflict(IntPtr thisobj, UInt32 nAppId, [MarshalAs(UnmanagedType.I1)] bool arg2);
		public Int32 ResolveSyncConflict(UInt32 nAppId, [MarshalAs(UnmanagedType.I1)] bool arg2) { var call = this.GetFunction<NativeResolveSyncConflict>(this.Functions.ResolveSyncConflict); return call(this.ObjectAddress, nAppId, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSynchronizeApp(IntPtr thisobj, UInt32 nAppId, [MarshalAs(UnmanagedType.I1)] bool bSyncClient, [MarshalAs(UnmanagedType.I1)] bool bSyncServer);
		public void SynchronizeApp(UInt32 nAppId, [MarshalAs(UnmanagedType.I1)] bool bSyncClient, [MarshalAs(UnmanagedType.I1)] bool bSyncServer) { var call = this.GetFunction<NativeSynchronizeApp>(this.Functions.SynchronizeApp); call(this.ObjectAddress, nAppId, bSyncClient, bSyncServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsAppSyncInProgress(IntPtr thisobj, UInt32 nAppId);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsAppSyncInProgress(UInt32 nAppId) { var call = this.GetFunction<NativeIsAppSyncInProgress>(this.Functions.IsAppSyncInProgress); return call(this.ObjectAddress, nAppId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ERemoteStorageFileRoot NativeERemoteStorageFileRootFromName(IntPtr thisobj, string arg1);
		public ERemoteStorageFileRoot ERemoteStorageFileRootFromName(string arg1) { var call = this.GetFunction<NativeERemoteStorageFileRootFromName>(this.Functions.ERemoteStorageFileRootFromName); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg1 ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativePchNameFromERemoteStorageFileRoot(IntPtr thisobj, ERemoteStorageFileRoot eRemoteStorageFileRoot);
		public string PchNameFromERemoteStorageFileRoot(ERemoteStorageFileRoot eRemoteStorageFileRoot) { var call = this.GetFunction<NativePchNameFromERemoteStorageFileRoot>(this.Functions.PchNameFromERemoteStorageFileRoot); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, eRemoteStorageFileRoot) ) ); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamFriends008VTable
	{
        public IntPtr GetPersonaName;
        public IntPtr SetPersonaName;
        public IntPtr IsPersonaNameSet;
        public IntPtr GetPersonaState;
        public IntPtr SetPersonaState;
        public IntPtr NotifyUIOfMenuChange;
        public IntPtr GetFriendCount;
        public IntPtr GetFriendByIndex;
        public IntPtr GetOnlineFriendCount;
        public IntPtr GetFriendRelationship;
        public IntPtr GetFriendPersonaState;
        public IntPtr GetFriendPersonaName;
        public IntPtr SetFriendAlias;
        public IntPtr GetSmallFriendAvatar;
        public IntPtr GetMediumFriendAvatar;
        public IntPtr GetLargeFriendAvatar;
        public IntPtr SetFriendRegValue;
        public IntPtr GetFriendRegValue;
        public IntPtr DeleteFriendRegValue;
        public IntPtr GetFriendGamePlayed;
        public IntPtr GetFriendGamePlayedExtraInfo;
        public IntPtr GetFriendGameServer;
        public IntPtr GetFriendPersonaStateFlags;
        public IntPtr IsFriendGameOnConsole;
        public IntPtr GetFriendRestrictions;
        public IntPtr GetFriendPersonaNameHistory;
        public IntPtr RequestPersonaNameHistory;
        public IntPtr GetFriendPersonaNameHistoryAndDate;
        public IntPtr AddFriend;
        public IntPtr RemoveFriend;
        public IntPtr HasFriend;
        public IntPtr AddFriendByName;
        public IntPtr InviteFriendByEmail;
        public IntPtr RequestUserInformation;
        public IntPtr SetIgnoreFriend;
        public IntPtr ReportChatDeclined;
        public IntPtr CreateFriendsGroup;
        public IntPtr DeleteFriendsGroup;
        public IntPtr RenameFriendsGroup;
        public IntPtr AddFriendToGroup;
        public IntPtr RemoveFriendFromGroup;
        public IntPtr IsFriendMemberOfFriendsGroup;
        public IntPtr GetFriendsGroupCount;
        public IntPtr GetFriendsGroupIDByIndex;
        public IntPtr GetFriendsGroupName;
        public IntPtr GetFriendsGroupMembershipCount;
        public IntPtr GetFirstFriendsGroupMember;
        public IntPtr GetNextFriendsGroupMember;
        public IntPtr GetGroupFriendsMembershipCount;
        public IntPtr GetFirstGroupFriendsMember;
        public IntPtr GetNextGroupFriendsMember;
        public IntPtr GetChatMessage;
        public IntPtr SendMsgToFriend;
        public IntPtr ClearChatHistory;
        public IntPtr GetKnownClanCount;
        public IntPtr GetKnownClanByIndex;
        public IntPtr GetClanCount;
        public IntPtr GetClanByIndex;
        public IntPtr GetClanName;
        public IntPtr GetClanTag;
        public IntPtr GetFriendActivityCounts;
        public IntPtr GetClanActivityCounts;
        public IntPtr DownloadClanActivityCounts;
        public IntPtr GetFriendsGroupActivityCounts;
        public IntPtr IsClanPublic;
        public IntPtr IsClanLarge;
        public IntPtr SubscribeToPersonaStateFeed;
        public IntPtr JoinClanChatRoom;
        public IntPtr LeaveClanChatRoom;
        public IntPtr GetClanChatMemberCount;
        public IntPtr GetChatMemberByIndex;
        public IntPtr SendClanChatMessage;
        public IntPtr GetClanChatMessage;
        public IntPtr IsClanChatAdmin;
        public IntPtr IsClanChatWindowOpenInSteam;
        public IntPtr OpenClanChatWindowInSteam;
        public IntPtr CloseClanChatWindowInSteam;
        public IntPtr SetListenForFriendsMessages;
        public IntPtr ReplyToFriendMessage;
        public IntPtr GetFriendMessage;
        public IntPtr InviteFriendToClan;
        public IntPtr AcknowledgeInviteToClan;
        public IntPtr GetFriendCountFromSource;
        public IntPtr GetFriendFromSourceByIndex;
        public IntPtr IsUserInSource;
        public IntPtr GetCoplayFriendCount;
        public IntPtr GetCoplayFriend;
        public IntPtr GetFriendCoplayTime;
        public IntPtr GetFriendCoplayGame;
        public IntPtr SetRichPresence;
        public IntPtr ClearRichPresence;
        public IntPtr GetFriendRichPresence;
        public IntPtr GetFriendRichPresenceKeyCount;
        public IntPtr GetFriendRichPresenceKeyByIndex;
        public IntPtr RequestFriendRichPresence;
        public IntPtr JoinChatRoom;
        public IntPtr LeaveChatRoom;
        public IntPtr InviteUserToChatRoom;
        public IntPtr SendChatMsg;
        public IntPtr GetChatRoomEntry;
        public IntPtr ClearChatRoomHistory;
        public IntPtr SerializeChatRoomDlg;
        public IntPtr GetSizeOfSerializedChatRoomDlg;
        public IntPtr GetSerializedChatRoomDlg;
        public IntPtr ClearSerializedChatRoomDlg;
        public IntPtr KickChatMember;
        public IntPtr BanChatMember;
        public IntPtr UnBanChatMember;
        public IntPtr SetChatRoomType;
        public IntPtr GetChatRoomLockState;
        public IntPtr GetChatRoomPermissions;
        public IntPtr SetChatRoomModerated;
        public IntPtr ChatRoomModerated;
        public IntPtr NotifyChatRoomDlgsOfUIChange;
        public IntPtr TerminateChatRoom;
        public IntPtr GetChatRoomCount;
        public IntPtr GetChatRoomByIndex;
        public IntPtr GetChatRoomName;
        public IntPtr GetChatRoomMemberDetails;
        public IntPtr CreateChatRoom;
        public IntPtr VoiceCall;
        public IntPtr VoiceHangUp;
        public IntPtr SetVoiceSpeakerVolume;
        public IntPtr SetVoiceMicrophoneVolume;
        public IntPtr SetAutoAnswer;
        public IntPtr VoiceAnswer;
        public IntPtr VoicePutOnHold;
        public IntPtr VoiceIsLocalOnHold;
        public IntPtr VoiceIsRemoteOnHold;
        public IntPtr SetDoNotDisturb;
        public IntPtr EnableVoiceNotificationSounds;
        public IntPtr SetPushToTalkEnabled;
        public IntPtr IsPushToTalkEnabled;
        public IntPtr SetPushToTalkKey;
        public IntPtr GetPushToTalkKey;
        public IntPtr IsPushToTalkKeyDown;
        public IntPtr EnableVoiceCalibration;
        public IntPtr IsVoiceCalibrating;
        public IntPtr GetVoiceCalibrationSamplePeak;
        public IntPtr SetMicBoost;
        public IntPtr GetMicBoost;
        public IntPtr HasHardwareMicBoost;
        public IntPtr GetMicDeviceName;
        public IntPtr StartTalking;
        public IntPtr EndTalking;
        public IntPtr VoiceIsValid;
        public IntPtr SetAutoReflectVoice;
        public IntPtr GetCallState;
        public IntPtr GetVoiceMicrophoneVolume;
        public IntPtr GetVoiceSpeakerVolume;
        public IntPtr TimeSinceLastVoiceDataReceived;
        public IntPtr TimeSinceLastVoiceDataSend;
        public IntPtr CanSend;
        public IntPtr CanReceive;
        public IntPtr GetEstimatedBitsPerSecond;
        public IntPtr GetPeakSample;
        public IntPtr SendResumeRequest;
        public IntPtr OpenChatDialog;
        public IntPtr StartChatRoomVoiceSpeaking;
        public IntPtr EndChatRoomVoiceSpeaking;
        public IntPtr GetFriendLastLogonTime;
        public IntPtr GetFriendLastLogoffTime;
        public IntPtr GetChatRoomVoiceTotalSlotCount;
        public IntPtr GetChatRoomVoiceUsedSlotCount;
        public IntPtr GetChatRoomVoiceUsedSlot;
        public IntPtr GetChatRoomVoiceStatus;
        public IntPtr ChatRoomHasAvailableVoiceSlots;
        public IntPtr IsChatRoomVoiceSpeaking;
        public IntPtr GetChatRoomPeakSample;
        public IntPtr ChatRoomVoiceRetryConnections;
        public IntPtr SetPortTypes;
        public IntPtr ReinitAudio;
        public IntPtr SetInGameVoiceSpeaking;
        public IntPtr IsInGameVoiceSpeaking;
        public IntPtr ActivateGameOverlay;
        public IntPtr ActivateGameOverlayToUser;
        public IntPtr ActivateGameOverlayToWebPage;
        public IntPtr ActivateGameOverlayToStore;
        public IntPtr ActivateGameOverlayInviteDialog;
        public IntPtr NotifyGameOverlayStateChanged;
        public IntPtr NotifyGameServerChangeRequested;
        public IntPtr NotifyLobbyJoinRequested;
        public IntPtr NotifyRichPresenceJoinRequested;
        public IntPtr GetClanRelationship;
        public IntPtr GetFriendClanRank;
        public IntPtr VoiceIsAvailable;
        public IntPtr TestVoiceDisconnect;
        public IntPtr TestChatRoomPeerDisconnect;
        public IntPtr TestVoicePacketLoss;
        public IntPtr FindFriendVoiceChatHandle;
        public IntPtr RequestFriendsWhoPlayGame;
        public IntPtr GetCountFriendsWhoPlayGame;
        public IntPtr GetFriendWhoPlaysGame;
        public IntPtr SetPlayedWith;
        public IntPtr RequestClanOfficerList;
        public IntPtr GetClanOwner;
        public IntPtr GetClanOfficerCount;
        public IntPtr GetClanOfficerByIndex;
        public IntPtr GetUserRestrictions;
        public IntPtr RequestFriendProfileInfo;
        public IntPtr GetFriendProfileInfo;
        public IntPtr InviteUserToGame;
        public IntPtr GetOnlineConsoleFriendCount;
        public IntPtr RequestTrade;
        public IntPtr TradeResponse;
        public IntPtr CancelTradeRequest;
        public IntPtr HideFriend;
        public IntPtr GetFriendFacebookName;
        public IntPtr GetFriendFacebookID;
	}
	
	public class ISteamFriends008 : NativeWrapper<ISteamFriends008VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetPersonaName(IntPtr thisobj);
		public string GetPersonaName() { var call = this.GetFunction<NativeGetPersonaName>(this.Functions.GetPersonaName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPersonaName(IntPtr thisobj, string pchPersonaName);
		public void SetPersonaName(string pchPersonaName) { var call = this.GetFunction<NativeSetPersonaName>(this.Functions.SetPersonaName); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPersonaName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetPersonaState(IntPtr thisobj);
		public EPersonaState GetPersonaState() { var call = this.GetFunction<NativeGetPersonaState>(this.Functions.GetPersonaState); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendCount(IntPtr thisobj, EFriendFlags eFriendFlags);
		public Int32 GetFriendCount(EFriendFlags eFriendFlags) { var call = this.GetFunction<NativeGetFriendCount>(this.Functions.GetFriendCount); return call(this.ObjectAddress, eFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetFriendByIndex(IntPtr thisobj, ref UInt64 ret, Int32 iFriend, Int32 iFriendFlags);
		public UInt64 GetFriendByIndex(Int32 iFriend, Int32 iFriendFlags) { UInt64 ret = 0; var call = this.GetFunction<NativeGetFriendByIndex>(this.Functions.GetFriendByIndex); call(this.ObjectAddress, ref ret, iFriend, iFriendFlags); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EFriendRelationship NativeGetFriendRelationship(IntPtr thisobj, UInt64 steamIDFriend);
		public EFriendRelationship GetFriendRelationship(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendRelationship>(this.Functions.GetFriendRelationship); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetFriendPersonaState(IntPtr thisobj, UInt64 steamIDFriend);
		public EPersonaState GetFriendPersonaState(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaState>(this.Functions.GetFriendPersonaState); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaName(IntPtr thisobj, UInt64 steamIDFriend);
		public string GetFriendPersonaName(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaName>(this.Functions.GetFriendPersonaName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDFriend) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFriendGamePlayed(IntPtr thisobj, UInt64 steamIDFriend, ref FriendGameInfo_t pFriendGameInfo);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFriendGamePlayed(UInt64 steamIDFriend, ref FriendGameInfo_t pFriendGameInfo) { var call = this.GetFunction<NativeGetFriendGamePlayed>(this.Functions.GetFriendGamePlayed); return call(this.ObjectAddress, steamIDFriend, ref pFriendGameInfo); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaNameHistory(IntPtr thisobj, UInt64 steamIDFriend, Int32 iPersonaName);
		public string GetFriendPersonaNameHistory(UInt64 steamIDFriend, Int32 iPersonaName) { var call = this.GetFunction<NativeGetFriendPersonaNameHistory>(this.Functions.GetFriendPersonaNameHistory); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDFriend, iPersonaName) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeHasFriend(IntPtr thisobj, UInt64 steamIDFriend, EFriendFlags eFriendFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool HasFriend(UInt64 steamIDFriend, EFriendFlags eFriendFlags) { var call = this.GetFunction<NativeHasFriend>(this.Functions.HasFriend); return call(this.ObjectAddress, steamIDFriend, eFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetClanCount(IntPtr thisobj);
		public Int32 GetClanCount() { var call = this.GetFunction<NativeGetClanCount>(this.Functions.GetClanCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetClanByIndex(IntPtr thisobj, ref UInt64 ret, Int32 iClan);
		public UInt64 GetClanByIndex(Int32 iClan) { UInt64 ret = 0; var call = this.GetFunction<NativeGetClanByIndex>(this.Functions.GetClanByIndex); call(this.ObjectAddress, ref ret, iClan); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetClanName(IntPtr thisobj, UInt64 steamIDClan);
		public string GetClanName(UInt64 steamIDClan) { var call = this.GetFunction<NativeGetClanName>(this.Functions.GetClanName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDClan) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetClanTag(IntPtr thisobj, UInt64 steamIDClan);
		public string GetClanTag(UInt64 steamIDClan) { var call = this.GetFunction<NativeGetClanTag>(this.Functions.GetClanTag); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDClan) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendCountFromSource(IntPtr thisobj, UInt64 steamIDSource);
		public Int32 GetFriendCountFromSource(UInt64 steamIDSource) { var call = this.GetFunction<NativeGetFriendCountFromSource>(this.Functions.GetFriendCountFromSource); return call(this.ObjectAddress, steamIDSource); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetFriendFromSourceByIndex(IntPtr thisobj, ref UInt64 ret, UInt64 steamIDSource, Int32 iFriend);
		public UInt64 GetFriendFromSourceByIndex(UInt64 steamIDSource, Int32 iFriend) { UInt64 ret = 0; var call = this.GetFunction<NativeGetFriendFromSourceByIndex>(this.Functions.GetFriendFromSourceByIndex); call(this.ObjectAddress, ref ret, steamIDSource, iFriend); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsUserInSource(IntPtr thisobj, UInt64 steamIDUser, UInt64 steamIDSource);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsUserInSource(UInt64 steamIDUser, UInt64 steamIDSource) { var call = this.GetFunction<NativeIsUserInSource>(this.Functions.IsUserInSource); return call(this.ObjectAddress, steamIDUser, steamIDSource); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetInGameVoiceSpeaking(IntPtr thisobj, UInt64 steamIDUser, [MarshalAs(UnmanagedType.I1)] bool bSpeaking);
		public void SetInGameVoiceSpeaking(UInt64 steamIDUser, [MarshalAs(UnmanagedType.I1)] bool bSpeaking) { var call = this.GetFunction<NativeSetInGameVoiceSpeaking>(this.Functions.SetInGameVoiceSpeaking); call(this.ObjectAddress, steamIDUser, bSpeaking); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlay(IntPtr thisobj, string pchDialog);
		public void ActivateGameOverlay(string pchDialog) { var call = this.GetFunction<NativeActivateGameOverlay>(this.Functions.ActivateGameOverlay); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchDialog ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlayToUser(IntPtr thisobj, string pchDialog, UInt64 steamID);
		public void ActivateGameOverlayToUser(string pchDialog, UInt64 steamID) { var call = this.GetFunction<NativeActivateGameOverlayToUser>(this.Functions.ActivateGameOverlayToUser); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchDialog ) ), steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlayToWebPage(IntPtr thisobj, string pchURL);
		public void ActivateGameOverlayToWebPage(string pchURL) { var call = this.GetFunction<NativeActivateGameOverlayToWebPage>(this.Functions.ActivateGameOverlayToWebPage); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchURL ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlayToStore(IntPtr thisobj, UInt32 nAppID);
		public void ActivateGameOverlayToStore(UInt32 nAppID) { var call = this.GetFunction<NativeActivateGameOverlayToStore>(this.Functions.ActivateGameOverlayToStore); call(this.ObjectAddress, nAppID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPlayedWith(IntPtr thisobj, UInt64 steamIDUserPlayedWith);
		public void SetPlayedWith(UInt64 steamIDUserPlayedWith) { var call = this.GetFunction<NativeSetPlayedWith>(this.Functions.SetPlayedWith); call(this.ObjectAddress, steamIDUserPlayedWith); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlayInviteDialog(IntPtr thisobj, UInt64 steamIDLobby);
		public void ActivateGameOverlayInviteDialog(UInt64 steamIDLobby) { var call = this.GetFunction<NativeActivateGameOverlayInviteDialog>(this.Functions.ActivateGameOverlayInviteDialog); call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSmallFriendAvatar(IntPtr thisobj, UInt64 steamIDFriend);
		public Int32 GetSmallFriendAvatar(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetSmallFriendAvatar>(this.Functions.GetSmallFriendAvatar); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetMediumFriendAvatar(IntPtr thisobj, UInt64 steamIDFriend);
		public Int32 GetMediumFriendAvatar(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetMediumFriendAvatar>(this.Functions.GetMediumFriendAvatar); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLargeFriendAvatar(IntPtr thisobj, UInt64 steamIDFriend);
		public Int32 GetLargeFriendAvatar(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetLargeFriendAvatar>(this.Functions.GetLargeFriendAvatar); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestUserInformation(IntPtr thisobj, UInt64 steamID, Byte unk1);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestUserInformation(UInt64 steamID, Byte unk1) { var call = this.GetFunction<NativeRequestUserInformation>(this.Functions.RequestUserInformation); return call(this.ObjectAddress, steamID, unk1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestClanOfficerList(IntPtr thisobj, UInt64 clanId);
		public UInt64 RequestClanOfficerList(UInt64 clanId) { var call = this.GetFunction<NativeRequestClanOfficerList>(this.Functions.RequestClanOfficerList); return call(this.ObjectAddress, clanId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetClanOwner(IntPtr thisobj, ref UInt64 ret, UInt64 clanId);
		public UInt64 GetClanOwner(UInt64 clanId) { UInt64 ret = 0; var call = this.GetFunction<NativeGetClanOwner>(this.Functions.GetClanOwner); call(this.ObjectAddress, ref ret, clanId); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetClanOfficerCount(IntPtr thisobj, UInt64 clanId);
		public Int32 GetClanOfficerCount(UInt64 clanId) { var call = this.GetFunction<NativeGetClanOfficerCount>(this.Functions.GetClanOfficerCount); return call(this.ObjectAddress, clanId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetClanOfficerByIndex(IntPtr thisobj, ref UInt64 ret, UInt64 clanId, Int32 iIndex);
		public UInt64 GetClanOfficerByIndex(UInt64 clanId, Int32 iIndex) { UInt64 ret = 0; var call = this.GetFunction<NativeGetClanOfficerByIndex>(this.Functions.GetClanOfficerByIndex); call(this.ObjectAddress, ref ret, clanId, iIndex); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetUserRestrictions(IntPtr thisobj);
		public Int32 GetUserRestrictions() { var call = this.GetFunction<NativeGetUserRestrictions>(this.Functions.GetUserRestrictions); return call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamMasterServerUpdater001VTable
	{
		public IntPtr SetActive;
		public IntPtr SetHeartbeatInterval;
		public IntPtr HandleIncomingPacket;
		public IntPtr GetNextOutgoingPacket;
		public IntPtr SetBasicServerData;
		public IntPtr ClearAllKeyValues;
		public IntPtr SetKeyValue;
		public IntPtr NotifyShutdown;
		public IntPtr WasRestartRequested;
		public IntPtr ForceHeartbeat;
		public IntPtr AddMasterServer;
		public IntPtr RemoveMasterServer;
		public IntPtr GetNumMasterServers;
		public IntPtr GetMasterServerAddress;
	}
	
	public class ISteamMasterServerUpdater001 : NativeWrapper<ISteamMasterServerUpdater001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetActive(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bActive);
		public void SetActive([MarshalAs(UnmanagedType.I1)] bool bActive) { var call = this.GetFunction<NativeSetActive>(this.Functions.SetActive); call(this.ObjectAddress, bActive); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetHeartbeatInterval(IntPtr thisobj, Int32 iHeartbeatInterval);
		public void SetHeartbeatInterval(Int32 iHeartbeatInterval) { var call = this.GetFunction<NativeSetHeartbeatInterval>(this.Functions.SetHeartbeatInterval); call(this.ObjectAddress, iHeartbeatInterval); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeHandleIncomingPacket(IntPtr thisobj, byte[] pData, Int32 cbData, UInt32 srcIP, UInt16 srcPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool HandleIncomingPacket(byte[] pData, Int32 cbData, UInt32 srcIP, UInt16 srcPort) { var call = this.GetFunction<NativeHandleIncomingPacket>(this.Functions.HandleIncomingPacket); return call(this.ObjectAddress, pData, cbData, srcIP, srcPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetNextOutgoingPacket(IntPtr thisobj, byte[] pOut, Int32 cbMaxOut, ref UInt32 pNetAdr, ref UInt16 pPort);
		public Int32 GetNextOutgoingPacket(byte[] pOut, Int32 cbMaxOut, ref UInt32 pNetAdr, ref UInt16 pPort) { var call = this.GetFunction<NativeGetNextOutgoingPacket>(this.Functions.GetNextOutgoingPacket); return call(this.ObjectAddress, pOut, cbMaxOut, ref pNetAdr, ref pPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetBasicServerData(IntPtr thisobj, UInt16 nProtocolVersion, [MarshalAs(UnmanagedType.I1)] bool bDedicatedServer, string pRegionName, string pProductName, UInt16 nMaxReportedClients, [MarshalAs(UnmanagedType.I1)] bool bPasswordProtected, string pGameDescription);
		public void SetBasicServerData(UInt16 nProtocolVersion, [MarshalAs(UnmanagedType.I1)] bool bDedicatedServer, string pRegionName, string pProductName, UInt16 nMaxReportedClients, [MarshalAs(UnmanagedType.I1)] bool bPasswordProtected, string pGameDescription) { var call = this.GetFunction<NativeSetBasicServerData>(this.Functions.SetBasicServerData); call(this.ObjectAddress, nProtocolVersion, bDedicatedServer, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pRegionName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pProductName ) ), nMaxReportedClients, bPasswordProtected, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pGameDescription ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeClearAllKeyValues(IntPtr thisobj);
		public void ClearAllKeyValues() { var call = this.GetFunction<NativeClearAllKeyValues>(this.Functions.ClearAllKeyValues); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetKeyValue(IntPtr thisobj, string pKey, string pValue);
		public void SetKeyValue(string pKey, string pValue) { var call = this.GetFunction<NativeSetKeyValue>(this.Functions.SetKeyValue); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeNotifyShutdown(IntPtr thisobj);
		public void NotifyShutdown() { var call = this.GetFunction<NativeNotifyShutdown>(this.Functions.NotifyShutdown); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeWasRestartRequested(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool WasRestartRequested() { var call = this.GetFunction<NativeWasRestartRequested>(this.Functions.WasRestartRequested); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeForceHeartbeat(IntPtr thisobj);
		public void ForceHeartbeat() { var call = this.GetFunction<NativeForceHeartbeat>(this.Functions.ForceHeartbeat); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAddMasterServer(IntPtr thisobj, string pServerAddress);
		[return: MarshalAs(UnmanagedType.I1)] public bool AddMasterServer(string pServerAddress) { var call = this.GetFunction<NativeAddMasterServer>(this.Functions.AddMasterServer); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pServerAddress ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveMasterServer(IntPtr thisobj, string pServerAddress);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveMasterServer(string pServerAddress) { var call = this.GetFunction<NativeRemoveMasterServer>(this.Functions.RemoveMasterServer); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pServerAddress ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetNumMasterServers(IntPtr thisobj);
		public Int32 GetNumMasterServers() { var call = this.GetFunction<NativeGetNumMasterServers>(this.Functions.GetNumMasterServers); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetMasterServerAddress(IntPtr thisobj, Int32 iServer, string pOut, Int32 outBufferSize);
		public Int32 GetMasterServerAddress(Int32 iServer, string pOut, Int32 outBufferSize) { var call = this.GetFunction<NativeGetMasterServerAddress>(this.Functions.GetMasterServerAddress); return call(this.ObjectAddress, iServer, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pOut ) ), outBufferSize); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUtils001VTable
	{
		public IntPtr GetSecondsSinceAppActive;
		public IntPtr GetSecondsSinceComputerActive;
		public IntPtr GetConnectedUniverse;
		public IntPtr GetServerRealTime;
	}
	
	public class ISteamUtils001 : NativeWrapper<ISteamUtils001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetSecondsSinceAppActive(IntPtr thisobj);
		public UInt32 GetSecondsSinceAppActive() { var call = this.GetFunction<NativeGetSecondsSinceAppActive>(this.Functions.GetSecondsSinceAppActive); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetSecondsSinceComputerActive(IntPtr thisobj);
		public UInt32 GetSecondsSinceComputerActive() { var call = this.GetFunction<NativeGetSecondsSinceComputerActive>(this.Functions.GetSecondsSinceComputerActive); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EUniverse NativeGetConnectedUniverse(IntPtr thisobj);
		public EUniverse GetConnectedUniverse() { var call = this.GetFunction<NativeGetConnectedUniverse>(this.Functions.GetConnectedUniverse); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetServerRealTime(IntPtr thisobj);
		public UInt32 GetServerRealTime() { var call = this.GetFunction<NativeGetServerRealTime>(this.Functions.GetServerRealTime); return call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUtils003VTable
	{
		public IntPtr GetSecondsSinceAppActive;
		public IntPtr GetSecondsSinceComputerActive;
		public IntPtr GetConnectedUniverse;
		public IntPtr GetServerRealTime;
		public IntPtr GetIPCountry;
		public IntPtr GetImageSize;
		public IntPtr GetImageRGBA;
		public IntPtr GetCSERIPPort;
		public IntPtr GetCurrentBatteryPower;
		public IntPtr GetAppID;
		public IntPtr SetOverlayNotificationPosition;
		public IntPtr IsAPICallCompleted;
		public IntPtr GetAPICallFailureReason;
		public IntPtr GetAPICallResult;
		public IntPtr RunFrame;
		public IntPtr GetIPCCallCount;
		public IntPtr SetWarningMessageHook;
	}
	
	public class ISteamUtils003 : NativeWrapper<ISteamUtils003VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetSecondsSinceAppActive(IntPtr thisobj);
		public UInt32 GetSecondsSinceAppActive() { var call = this.GetFunction<NativeGetSecondsSinceAppActive>(this.Functions.GetSecondsSinceAppActive); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetSecondsSinceComputerActive(IntPtr thisobj);
		public UInt32 GetSecondsSinceComputerActive() { var call = this.GetFunction<NativeGetSecondsSinceComputerActive>(this.Functions.GetSecondsSinceComputerActive); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EUniverse NativeGetConnectedUniverse(IntPtr thisobj);
		public EUniverse GetConnectedUniverse() { var call = this.GetFunction<NativeGetConnectedUniverse>(this.Functions.GetConnectedUniverse); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetServerRealTime(IntPtr thisobj);
		public UInt32 GetServerRealTime() { var call = this.GetFunction<NativeGetServerRealTime>(this.Functions.GetServerRealTime); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetIPCountry(IntPtr thisobj);
		public string GetIPCountry() { var call = this.GetFunction<NativeGetIPCountry>(this.Functions.GetIPCountry); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetImageSize(IntPtr thisobj, Int32 iImage, ref UInt32 pnWidth, ref UInt32 pnHeight);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetImageSize(Int32 iImage, ref UInt32 pnWidth, ref UInt32 pnHeight) { var call = this.GetFunction<NativeGetImageSize>(this.Functions.GetImageSize); return call(this.ObjectAddress, iImage, ref pnWidth, ref pnHeight); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetImageRGBA(IntPtr thisobj, Int32 iImage, byte[] pubDest, Int32 nDestBufferSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetImageRGBA(Int32 iImage, byte[] pubDest, Int32 nDestBufferSize) { var call = this.GetFunction<NativeGetImageRGBA>(this.Functions.GetImageRGBA); return call(this.ObjectAddress, iImage, pubDest, nDestBufferSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetCSERIPPort(IntPtr thisobj, ref UInt32 unIP, ref UInt16 usPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetCSERIPPort(ref UInt32 unIP, ref UInt16 usPort) { var call = this.GetFunction<NativeGetCSERIPPort>(this.Functions.GetCSERIPPort); return call(this.ObjectAddress, ref unIP, ref usPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Byte NativeGetCurrentBatteryPower(IntPtr thisobj);
		public Byte GetCurrentBatteryPower() { var call = this.GetFunction<NativeGetCurrentBatteryPower>(this.Functions.GetCurrentBatteryPower); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppID(IntPtr thisobj);
		public UInt32 GetAppID() { var call = this.GetFunction<NativeGetAppID>(this.Functions.GetAppID); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetOverlayNotificationPosition(IntPtr thisobj, ENotificationPosition eNotificationPosition);
		public void SetOverlayNotificationPosition(ENotificationPosition eNotificationPosition) { var call = this.GetFunction<NativeSetOverlayNotificationPosition>(this.Functions.SetOverlayNotificationPosition); call(this.ObjectAddress, eNotificationPosition); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsAPICallCompleted(IntPtr thisobj, UInt64 hSteamAPICall, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsAPICallCompleted(UInt64 hSteamAPICall, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed) { var call = this.GetFunction<NativeIsAPICallCompleted>(this.Functions.IsAPICallCompleted); return call(this.ObjectAddress, hSteamAPICall, ref pbFailed); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ESteamAPICallFailure NativeGetAPICallFailureReason(IntPtr thisobj, UInt64 hSteamAPICall);
		public ESteamAPICallFailure GetAPICallFailureReason(UInt64 hSteamAPICall) { var call = this.GetFunction<NativeGetAPICallFailureReason>(this.Functions.GetAPICallFailureReason); return call(this.ObjectAddress, hSteamAPICall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAPICallResult(IntPtr thisobj, UInt64 hSteamAPICall, IntPtr pCallback, Int32 cubCallback, Int32 iCallbackExpected, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetAPICallResult(UInt64 hSteamAPICall, IntPtr pCallback, Int32 cubCallback, Int32 iCallbackExpected, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed) { var call = this.GetFunction<NativeGetAPICallResult>(this.Functions.GetAPICallResult); return call(this.ObjectAddress, hSteamAPICall, pCallback, cubCallback, iCallbackExpected, ref pbFailed); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRunFrame(IntPtr thisobj);
		public void RunFrame() { var call = this.GetFunction<NativeRunFrame>(this.Functions.RunFrame); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetIPCCallCount(IntPtr thisobj);
		public UInt32 GetIPCCallCount() { var call = this.GetFunction<NativeGetIPCCallCount>(this.Functions.GetIPCCallCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetWarningMessageHook(IntPtr thisobj, ref IntPtr pFunction);
		public void SetWarningMessageHook(ref IntPtr pFunction) { var call = this.GetFunction<NativeSetWarningMessageHook>(this.Functions.SetWarningMessageHook); call(this.ObjectAddress, ref pFunction); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamNetworking001VTable
	{
		public IntPtr CreateListenSocket;
		public IntPtr CreateP2PConnectionSocket;
		public IntPtr CreateConnectionSocket;
		public IntPtr DestroySocket;
		public IntPtr DestroyListenSocket;
		public IntPtr SendDataOnSocket;
		public IntPtr IsDataAvailableOnSocket;
		public IntPtr RetrieveDataFromSocket;
		public IntPtr IsDataAvailable;
		public IntPtr RetrieveData;
		public IntPtr GetSocketInfo;
		public IntPtr GetListenSocketInfo;
	}
	
	public class ISteamNetworking001 : NativeWrapper<ISteamNetworking001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateListenSocket(IntPtr thisobj, Int32 nVirtualP2PPort, UInt32 nIP, UInt16 nPort);
		public UInt32 CreateListenSocket(Int32 nVirtualP2PPort, UInt32 nIP, UInt16 nPort) { var call = this.GetFunction<NativeCreateListenSocket>(this.Functions.CreateListenSocket); return call(this.ObjectAddress, nVirtualP2PPort, nIP, nPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateP2PConnectionSocket(IntPtr thisobj, UInt64 steamIDTarget, Int32 nVirtualPort, Int32 nTimeoutSec);
		public UInt32 CreateP2PConnectionSocket(UInt64 steamIDTarget, Int32 nVirtualPort, Int32 nTimeoutSec) { var call = this.GetFunction<NativeCreateP2PConnectionSocket>(this.Functions.CreateP2PConnectionSocket); return call(this.ObjectAddress, steamIDTarget, nVirtualPort, nTimeoutSec); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateConnectionSocket(IntPtr thisobj, UInt32 nIP, UInt16 nPort, Int32 nTimeoutSec);
		public UInt32 CreateConnectionSocket(UInt32 nIP, UInt16 nPort, Int32 nTimeoutSec) { var call = this.GetFunction<NativeCreateConnectionSocket>(this.Functions.CreateConnectionSocket); return call(this.ObjectAddress, nIP, nPort, nTimeoutSec); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeDestroySocket(IntPtr thisobj, UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd);
		[return: MarshalAs(UnmanagedType.I1)] public bool DestroySocket(UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd) { var call = this.GetFunction<NativeDestroySocket>(this.Functions.DestroySocket); return call(this.ObjectAddress, hSocket, bNotifyRemoteEnd); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeDestroyListenSocket(IntPtr thisobj, UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd);
		[return: MarshalAs(UnmanagedType.I1)] public bool DestroyListenSocket(UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd) { var call = this.GetFunction<NativeDestroyListenSocket>(this.Functions.DestroyListenSocket); return call(this.ObjectAddress, hSocket, bNotifyRemoteEnd); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendDataOnSocket(IntPtr thisobj, UInt32 hSocket, byte[] pubData, UInt32 cubData, [MarshalAs(UnmanagedType.I1)] bool bReliable);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendDataOnSocket(UInt32 hSocket, byte[] pubData, UInt32 cubData, [MarshalAs(UnmanagedType.I1)] bool bReliable) { var call = this.GetFunction<NativeSendDataOnSocket>(this.Functions.SendDataOnSocket); return call(this.ObjectAddress, hSocket, pubData, cubData, bReliable); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsDataAvailableOnSocket(IntPtr thisobj, UInt32 hSocket, ref UInt32 pcubMsgSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsDataAvailableOnSocket(UInt32 hSocket, ref UInt32 pcubMsgSize) { var call = this.GetFunction<NativeIsDataAvailableOnSocket>(this.Functions.IsDataAvailableOnSocket); return call(this.ObjectAddress, hSocket, ref pcubMsgSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRetrieveDataFromSocket(IntPtr thisobj, UInt32 hSocket, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool RetrieveDataFromSocket(UInt32 hSocket, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize) { var call = this.GetFunction<NativeRetrieveDataFromSocket>(this.Functions.RetrieveDataFromSocket); return call(this.ObjectAddress, hSocket, pubDest, cubDest, ref pcubMsgSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsDataAvailable(IntPtr thisobj, UInt32 hListenSocket, ref UInt32 pcubMsgSize, ref UInt32 phSocket);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsDataAvailable(UInt32 hListenSocket, ref UInt32 pcubMsgSize, ref UInt32 phSocket) { var call = this.GetFunction<NativeIsDataAvailable>(this.Functions.IsDataAvailable); return call(this.ObjectAddress, hListenSocket, ref pcubMsgSize, ref phSocket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRetrieveData(IntPtr thisobj, UInt32 hListenSocket, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool RetrieveData(UInt32 hListenSocket, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize) { var call = this.GetFunction<NativeRetrieveData>(this.Functions.RetrieveData); return call(this.ObjectAddress, hListenSocket, pubDest, cubDest, ref pcubMsgSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetSocketInfo(IntPtr thisobj, UInt32 hSocket, ref UInt64 pSteamIDRemote, ref Int32 peSocketStatus, ref UInt32 punIPRemote, ref UInt16 punPortRemote);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetSocketInfo(UInt32 hSocket, ref UInt64 pSteamIDRemote, ref Int32 peSocketStatus, ref UInt32 punIPRemote, ref UInt16 punPortRemote) { var call = this.GetFunction<NativeGetSocketInfo>(this.Functions.GetSocketInfo); return call(this.ObjectAddress, hSocket, ref pSteamIDRemote, ref peSocketStatus, ref punIPRemote, ref punPortRemote); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetListenSocketInfo(IntPtr thisobj, UInt32 hListenSocket, ref UInt32 pnIP, ref UInt16 pnPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetListenSocketInfo(UInt32 hListenSocket, ref UInt32 pnIP, ref UInt16 pnPort) { var call = this.GetFunction<NativeGetListenSocketInfo>(this.Functions.GetListenSocketInfo); return call(this.ObjectAddress, hListenSocket, ref pnIP, ref pnPort); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteam003VTable
	{
        public IntPtr DTor;
		public IntPtr ChangePassword;
		public IntPtr GetCurrentEmailAddress;
		public IntPtr ChangePersonalQA;
		public IntPtr ChangeEmailAddress;
		public IntPtr VerifyEmailAddress;
		public IntPtr RequestEmailAddressVerificationEmail;
		public IntPtr ChangeAccountName;
		public IntPtr MountAppFilesystem;
		public IntPtr UnmountAppFilesystem;
		public IntPtr MountFilesystem;
		public IntPtr UnmountFilesystem;
		public IntPtr Stat;
		public IntPtr SetvBuf;
		public IntPtr FlushFile;
		public IntPtr OpenFile;
		public IntPtr OpenFileEx;
		public IntPtr OpenTmpFile;
		public IntPtr ClearError;
		public IntPtr GetVersion;
		public IntPtr GetOfflineStatus;
		public IntPtr ChangeOfflineStatus;
		public IntPtr ProcessCall;
		public IntPtr AbortCall;
		public IntPtr BlockingCall;
		public IntPtr SetMaxStallCount;
		public IntPtr CloseFile;
		public IntPtr ReadFile;
		public IntPtr WriteFile;
		public IntPtr Getc;
		public IntPtr Putc;
		public IntPtr SeekFile;
		public IntPtr TellFile;
		public IntPtr SizeFile;
		public IntPtr FindFirst;
		public IntPtr FindNext;
		public IntPtr FindClose;
		public IntPtr GetLocalFileCopy;
		public IntPtr IsFileImmediatelyAvailable;
		public IntPtr HintResourceNeed;
		public IntPtr ForgetAllHints;
		public IntPtr PauseCachePreloading;
		public IntPtr ResumeCachePreloading;
		public IntPtr WaitForResources;
		public IntPtr StartEngine;
		public IntPtr ShutdownEngine;
		public IntPtr Startup;
		public IntPtr Cleanup;
		public IntPtr NumAppsRunning;
		public IntPtr CreateAccount;
		public IntPtr GenerateSuggestedAccountNames;
		public IntPtr IsLoggedIn;
		public IntPtr Logout;
		public IntPtr IsSecureComputer;
		public IntPtr CreateLogContext;
		public IntPtr Log;
		public IntPtr LogResourceLoadStarted;
		public IntPtr LogResourceLoadFinished;
		public IntPtr RefreshLogin;
		public IntPtr VerifyPassword;
		public IntPtr GetUserType;
		public IntPtr GetAppStats;
		public IntPtr IsAccountNameInUse;
		public IntPtr GetAppIds;
		public IntPtr GetSubscriptionStats;
		public IntPtr RefreshAccountInfo;
		public IntPtr Subscribe;
		public IntPtr Unsubscribe;
		public IntPtr GetSubscriptionReceipt;
		public IntPtr GetAccountStatus;
		public IntPtr SetUser;
		public IntPtr GetUser;
		public IntPtr Login;
		public IntPtr AckSubscriptionReceipt;
		public IntPtr IsAppSubscribed;
		public IntPtr GetSubscriptionIds;
		public IntPtr EnumerateSubscription;
		public IntPtr EnumerateSubscriptionDiscount;
		public IntPtr EnumerateSubscriptionDiscountQualifier;
		public IntPtr EnumerateApp;
		public IntPtr EnumerateAppLaunchOption;
		public IntPtr DeleteAccount;
		public IntPtr EnumerateAppIcon;
		public IntPtr LaunchApp;
		public IntPtr GetCacheFilePath;
		public IntPtr EnumerateAppVersion;
		public IntPtr EnumerateAppDependency;
		public IntPtr StartLoadingCache;
		public IntPtr InsertAppDependency;
		public IntPtr RemoveAppDependency;
		public IntPtr FindApp;
		public IntPtr GetAppDependencies;
		public IntPtr IsSubscribed;
		public IntPtr GetAppUserDefinedInfo;
		public IntPtr WaitForAppReadyToLaunch;
		public IntPtr IsCacheLoadingEnabled;
		public IntPtr StopLoadingCache;
		public IntPtr GetEncryptedUserIDTicket;
		public IntPtr FlushCache;
		public IntPtr RepairOrDecryptCaches;
		public IntPtr LoadCacheFromDir;
		public IntPtr GetCacheDefaultDirectory;
		public IntPtr SetCacheDefaultDirectory;
		public IntPtr GetAppDir;
		public IntPtr MoveApp;
		public IntPtr GetAppCacheSize;
		public IntPtr SetAppCacheSize;
		public IntPtr SetAppVersion;
		public IntPtr Uninstall;
		public IntPtr SetNotificationCallback;
		public IntPtr ChangeForgottenPassword;
		public IntPtr RequestForgottenPasswordEmail;
		public IntPtr RequestAccountsByEmailAddressEmail;
		public IntPtr RequestAccountsByCdKeyEmail;
		public IntPtr GetNumAccountsWithEmailAddress;
		public IntPtr UpdateAccountBillingInfo;
		public IntPtr UpdateSubscriptionBillingInfo;
		public IntPtr GetSponsorUrl;
		public IntPtr GetContentServerInfo;
		public IntPtr GetAppUpdateStats;
		public IntPtr GetTotalUpdateStats;
		public IntPtr CreateCachePreloaders;
	}
	
	public class ISteam003 : NativeWrapper<ISteam003VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangePassword(IntPtr thisobj, string cszCurrentPassphrase, string cszNewPassphrase, ref TSteamError pError);
		public UInt32 ChangePassword(string cszCurrentPassphrase, string cszNewPassphrase, ref TSteamError pError) { var call = this.GetFunction<NativeChangePassword>(this.Functions.ChangePassword); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszCurrentPassphrase ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszNewPassphrase ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCurrentEmailAddress(IntPtr thisobj, string szEmailaddress, UInt32 uBufSize, ref UInt32 puEmailaddressChars, ref TSteamError pError);
		public Int32 GetCurrentEmailAddress(string szEmailaddress, UInt32 uBufSize, ref UInt32 puEmailaddressChars, ref TSteamError pError) { var call = this.GetFunction<NativeGetCurrentEmailAddress>(this.Functions.GetCurrentEmailAddress); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szEmailaddress ) ), uBufSize, ref puEmailaddressChars, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangePersonalQA(IntPtr thisobj, string cszCurrentPassphrase, string cszNewPersonalQuestion, string cszNewAnswerToQuestion, ref TSteamError pError);
		public UInt32 ChangePersonalQA(string cszCurrentPassphrase, string cszNewPersonalQuestion, string cszNewAnswerToQuestion, ref TSteamError pError) { var call = this.GetFunction<NativeChangePersonalQA>(this.Functions.ChangePersonalQA); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszCurrentPassphrase ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszNewPersonalQuestion ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszNewAnswerToQuestion ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangeEmailAddress(IntPtr thisobj, string cszNewEmailAddress, ref TSteamError pError);
		public UInt32 ChangeEmailAddress(string cszNewEmailAddress, ref TSteamError pError) { var call = this.GetFunction<NativeChangeEmailAddress>(this.Functions.ChangeEmailAddress); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszNewEmailAddress ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeVerifyEmailAddress(IntPtr thisobj, string cszEmailAddress, ref TSteamError pError);
		public UInt32 VerifyEmailAddress(string cszEmailAddress, ref TSteamError pError) { var call = this.GetFunction<NativeVerifyEmailAddress>(this.Functions.VerifyEmailAddress); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszEmailAddress ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestEmailAddressVerificationEmail(IntPtr thisobj, ref TSteamError pError);
		public UInt32 RequestEmailAddressVerificationEmail(ref TSteamError pError) { var call = this.GetFunction<NativeRequestEmailAddressVerificationEmail>(this.Functions.RequestEmailAddressVerificationEmail); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangeAccountName(IntPtr thisobj, string cszCurrentAccountName, string cszNewAccountName, ref TSteamError pError);
		public UInt32 ChangeAccountName(string cszCurrentAccountName, string cszNewAccountName, ref TSteamError pError) { var call = this.GetFunction<NativeChangeAccountName>(this.Functions.ChangeAccountName); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszCurrentAccountName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszNewAccountName ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeMountAppFilesystem(IntPtr thisobj, ref TSteamError pError);
		public Int32 MountAppFilesystem(ref TSteamError pError) { var call = this.GetFunction<NativeMountAppFilesystem>(this.Functions.MountAppFilesystem); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeUnmountAppFilesystem(IntPtr thisobj, ref TSteamError pError);
		public Int32 UnmountAppFilesystem(ref TSteamError pError) { var call = this.GetFunction<NativeUnmountAppFilesystem>(this.Functions.UnmountAppFilesystem); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeMountFilesystem(IntPtr thisobj, UInt32 uAppId, string szMountPath, ref TSteamError pError);
		public Int32 MountFilesystem(UInt32 uAppId, string szMountPath, ref TSteamError pError) { var call = this.GetFunction<NativeMountFilesystem>(this.Functions.MountFilesystem); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szMountPath ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeUnmountFilesystem(IntPtr thisobj, UInt32 uAppId, ref TSteamError pError);
		public Int32 UnmountFilesystem(UInt32 uAppId, ref TSteamError pError) { var call = this.GetFunction<NativeUnmountFilesystem>(this.Functions.UnmountFilesystem); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeStat(IntPtr thisobj, string cszName, ref TSteamElemInfo pInfo, ref TSteamError pError);
		public Int32 Stat(string cszName, ref TSteamElemInfo pInfo, ref TSteamError pError) { var call = this.GetFunction<NativeStat>(this.Functions.Stat); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszName ) ), ref pInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetvBuf(IntPtr thisobj, UInt32 hFile, byte[] pBuf, ESteamBufferMethod eMethod, UInt32 uBytes, ref TSteamError pError);
		public Int32 SetvBuf(UInt32 hFile, byte[] pBuf, ESteamBufferMethod eMethod, UInt32 uBytes, ref TSteamError pError) { var call = this.GetFunction<NativeSetvBuf>(this.Functions.SetvBuf); return call(this.ObjectAddress, hFile, pBuf, eMethod, uBytes, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFlushFile(IntPtr thisobj, UInt32 hFile, ref TSteamError pError);
		public Int32 FlushFile(UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativeFlushFile>(this.Functions.FlushFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeOpenFile(IntPtr thisobj, string cszName, string cszMode, ref TSteamError pError);
		public UInt32 OpenFile(string cszName, string cszMode, ref TSteamError pError) { var call = this.GetFunction<NativeOpenFile>(this.Functions.OpenFile); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszMode ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeOpenFileEx(IntPtr thisobj, string cszFileName, string cszMode, ref UInt32 puSize, ref TSteamError pError);
		public UInt32 OpenFileEx(string cszFileName, string cszMode, ref UInt32 puSize, ref TSteamError pError) { var call = this.GetFunction<NativeOpenFileEx>(this.Functions.OpenFileEx); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszFileName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszMode ) ), ref puSize, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeOpenTmpFile(IntPtr thisobj, ref TSteamError pError);
		public UInt32 OpenTmpFile(ref TSteamError pError) { var call = this.GetFunction<NativeOpenTmpFile>(this.Functions.OpenTmpFile); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeClearError(IntPtr thisobj, ref TSteamError pError);
		public void ClearError(ref TSteamError pError) { var call = this.GetFunction<NativeClearError>(this.Functions.ClearError); call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetVersion(IntPtr thisobj, string szVersion, UInt32 uVersionBufSize);
		public Int32 GetVersion(string szVersion, UInt32 uVersionBufSize) { var call = this.GetFunction<NativeGetVersion>(this.Functions.GetVersion); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szVersion ) ), uVersionBufSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetOfflineStatus(IntPtr thisobj, ref TSteamOfflineStatus pSteamOfflineStatus, ref TSteamError pError);
		public Int32 GetOfflineStatus(ref TSteamOfflineStatus pSteamOfflineStatus, ref TSteamError pError) { var call = this.GetFunction<NativeGetOfflineStatus>(this.Functions.GetOfflineStatus); return call(this.ObjectAddress, ref pSteamOfflineStatus, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeChangeOfflineStatus(IntPtr thisobj, ref TSteamOfflineStatus pSteamOfflineStatus, ref TSteamError pError);
		public Int32 ChangeOfflineStatus(ref TSteamOfflineStatus pSteamOfflineStatus, ref TSteamError pError) { var call = this.GetFunction<NativeChangeOfflineStatus>(this.Functions.ChangeOfflineStatus); return call(this.ObjectAddress, ref pSteamOfflineStatus, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeProcessCall(IntPtr thisobj, UInt32 handle, ref TSteamProgress pProgress, ref TSteamError pError);
		public Int32 ProcessCall(UInt32 handle, ref TSteamProgress pProgress, ref TSteamError pError) { var call = this.GetFunction<NativeProcessCall>(this.Functions.ProcessCall); return call(this.ObjectAddress, handle, ref pProgress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAbortCall(IntPtr thisobj, UInt32 handle, ref TSteamError pError);
		public Int32 AbortCall(UInt32 handle, ref TSteamError pError) { var call = this.GetFunction<NativeAbortCall>(this.Functions.AbortCall); return call(this.ObjectAddress, handle, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeBlockingCall(IntPtr thisobj, UInt32 handle, UInt32 uiProcessTickMS, ref TSteamError pError);
		public Int32 BlockingCall(UInt32 handle, UInt32 uiProcessTickMS, ref TSteamError pError) { var call = this.GetFunction<NativeBlockingCall>(this.Functions.BlockingCall); return call(this.ObjectAddress, handle, uiProcessTickMS, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetMaxStallCount(IntPtr thisobj, UInt32 uNumStalls, ref TSteamError pError);
		public Int32 SetMaxStallCount(UInt32 uNumStalls, ref TSteamError pError) { var call = this.GetFunction<NativeSetMaxStallCount>(this.Functions.SetMaxStallCount); return call(this.ObjectAddress, uNumStalls, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCloseFile(IntPtr thisobj, UInt32 hFile, ref TSteamError pError);
		public Int32 CloseFile(UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativeCloseFile>(this.Functions.CloseFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeReadFile(IntPtr thisobj, byte[] pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSteamError pError);
		public UInt32 ReadFile(byte[] pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativeReadFile>(this.Functions.ReadFile); return call(this.ObjectAddress, pBuf, uSize, uCount, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeWriteFile(IntPtr thisobj, byte[] pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSteamError pError);
		public UInt32 WriteFile(byte[] pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativeWriteFile>(this.Functions.WriteFile); return call(this.ObjectAddress, pBuf, uSize, uCount, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetc(IntPtr thisobj, UInt32 hFile, ref TSteamError pError);
		public Int32 Getc(UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativeGetc>(this.Functions.Getc); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePutc(IntPtr thisobj, Int32 cChar, UInt32 hFile, ref TSteamError pError);
		public Int32 Putc(Int32 cChar, UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativePutc>(this.Functions.Putc); return call(this.ObjectAddress, cChar, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSeekFile(IntPtr thisobj, UInt32 hFile, Int32 lOffset, ESteamSeekMethod sm, ref TSteamError pError);
		public Int32 SeekFile(UInt32 hFile, Int32 lOffset, ESteamSeekMethod sm, ref TSteamError pError) { var call = this.GetFunction<NativeSeekFile>(this.Functions.SeekFile); return call(this.ObjectAddress, hFile, lOffset, sm, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeTellFile(IntPtr thisobj, UInt32 hFile, ref TSteamError pError);
		public Int32 TellFile(UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativeTellFile>(this.Functions.TellFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSizeFile(IntPtr thisobj, UInt32 hFile, ref TSteamError pError);
		public Int32 SizeFile(UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativeSizeFile>(this.Functions.SizeFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeFindFirst(IntPtr thisobj, string cszPattern, ESteamFindFilter eFilter, ref TSteamElemInfo pFindInfo, ref TSteamError pError);
		public UInt32 FindFirst(string cszPattern, ESteamFindFilter eFilter, ref TSteamElemInfo pFindInfo, ref TSteamError pError) { var call = this.GetFunction<NativeFindFirst>(this.Functions.FindFirst); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPattern ) ), eFilter, ref pFindInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFindNext(IntPtr thisobj, UInt32 hFind, ref TSteamElemInfo pFindInfo, ref TSteamError pError);
		public Int32 FindNext(UInt32 hFind, ref TSteamElemInfo pFindInfo, ref TSteamError pError) { var call = this.GetFunction<NativeFindNext>(this.Functions.FindNext); return call(this.ObjectAddress, hFind, ref pFindInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFindClose(IntPtr thisobj, UInt32 hFind, ref TSteamError pError);
		public Int32 FindClose(UInt32 hFind, ref TSteamError pError) { var call = this.GetFunction<NativeFindClose>(this.Functions.FindClose); return call(this.ObjectAddress, hFind, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLocalFileCopy(IntPtr thisobj, string cszName, ref TSteamError pError);
		public Int32 GetLocalFileCopy(string cszName, ref TSteamError pError) { var call = this.GetFunction<NativeGetLocalFileCopy>(this.Functions.GetLocalFileCopy); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszName ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsFileImmediatelyAvailable(IntPtr thisobj, string cszName, ref TSteamError pError);
		public Int32 IsFileImmediatelyAvailable(string cszName, ref TSteamError pError) { var call = this.GetFunction<NativeIsFileImmediatelyAvailable>(this.Functions.IsFileImmediatelyAvailable); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszName ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeHintResourceNeed(IntPtr thisobj, string cszHintList, Int32 bForgetEverything, ref TSteamError pError);
		public Int32 HintResourceNeed(string cszHintList, Int32 bForgetEverything, ref TSteamError pError) { var call = this.GetFunction<NativeHintResourceNeed>(this.Functions.HintResourceNeed); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszHintList ) ), bForgetEverything, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeForgetAllHints(IntPtr thisobj, ref TSteamError pError);
		public Int32 ForgetAllHints(ref TSteamError pError) { var call = this.GetFunction<NativeForgetAllHints>(this.Functions.ForgetAllHints); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePauseCachePreloading(IntPtr thisobj, ref TSteamError pError);
		public Int32 PauseCachePreloading(ref TSteamError pError) { var call = this.GetFunction<NativePauseCachePreloading>(this.Functions.PauseCachePreloading); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeResumeCachePreloading(IntPtr thisobj, ref TSteamError pError);
		public Int32 ResumeCachePreloading(ref TSteamError pError) { var call = this.GetFunction<NativeResumeCachePreloading>(this.Functions.ResumeCachePreloading); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeWaitForResources(IntPtr thisobj, string cszMasterList, ref TSteamError pError);
		public UInt32 WaitForResources(string cszMasterList, ref TSteamError pError) { var call = this.GetFunction<NativeWaitForResources>(this.Functions.WaitForResources); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszMasterList ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeStartEngine(IntPtr thisobj, ref TSteamError pError);
		public Int32 StartEngine(ref TSteamError pError) { var call = this.GetFunction<NativeStartEngine>(this.Functions.StartEngine); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeShutdownEngine(IntPtr thisobj, ref TSteamError pError);
		public Int32 ShutdownEngine(ref TSteamError pError) { var call = this.GetFunction<NativeShutdownEngine>(this.Functions.ShutdownEngine); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeStartup(IntPtr thisobj, UInt32 uUsingMask, ref TSteamError pError);
		public Int32 Startup(UInt32 uUsingMask, ref TSteamError pError) { var call = this.GetFunction<NativeStartup>(this.Functions.Startup); return call(this.ObjectAddress, uUsingMask, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCleanup(IntPtr thisobj, ref TSteamError pError);
		public Int32 Cleanup(ref TSteamError pError) { var call = this.GetFunction<NativeCleanup>(this.Functions.Cleanup); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeNumAppsRunning(IntPtr thisobj, ref TSteamError pError);
		public Int32 NumAppsRunning(ref TSteamError pError) { var call = this.GetFunction<NativeNumAppsRunning>(this.Functions.NumAppsRunning); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateAccount(IntPtr thisobj, string cszUser, string cszPassphrase, string cszCreationKey, string cszPersonalQuestion, string cszAnswerToQuestion, string cszArg6, ref Int32 pbCreated, ref TSteamError pError);
		public UInt32 CreateAccount(string cszUser, string cszPassphrase, string cszCreationKey, string cszPersonalQuestion, string cszAnswerToQuestion, string cszArg6, ref Int32 pbCreated, ref TSteamError pError) { var call = this.GetFunction<NativeCreateAccount>(this.Functions.CreateAccount); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszUser ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPassphrase ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszCreationKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPersonalQuestion ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszAnswerToQuestion ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg6 ) ), ref pbCreated, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGenerateSuggestedAccountNames(IntPtr thisobj, string cszArg1, string cszArg2, string szArg3, UInt32 uArg4, ref UInt32 puArg5, ref TSteamError pError);
		public UInt32 GenerateSuggestedAccountNames(string cszArg1, string cszArg2, string szArg3, UInt32 uArg4, ref UInt32 puArg5, ref TSteamError pError) { var call = this.GetFunction<NativeGenerateSuggestedAccountNames>(this.Functions.GenerateSuggestedAccountNames); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg2 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( szArg3 ) ), uArg4, ref puArg5, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsLoggedIn(IntPtr thisobj, ref Int32 pbIsLoggedIn, ref TSteamError pError);
		public Int32 IsLoggedIn(ref Int32 pbIsLoggedIn, ref TSteamError pError) { var call = this.GetFunction<NativeIsLoggedIn>(this.Functions.IsLoggedIn); return call(this.ObjectAddress, ref pbIsLoggedIn, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLogout(IntPtr thisobj, ref TSteamError pError);
		public UInt32 Logout(ref TSteamError pError) { var call = this.GetFunction<NativeLogout>(this.Functions.Logout); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsSecureComputer(IntPtr thisobj, ref Int32 pbIsSecure, ref TSteamError pError);
		public Int32 IsSecureComputer(ref Int32 pbIsSecure, ref TSteamError pError) { var call = this.GetFunction<NativeIsSecureComputer>(this.Functions.IsSecureComputer); return call(this.ObjectAddress, ref pbIsSecure, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateLogContext(IntPtr thisobj, string cszName);
		public UInt32 CreateLogContext(string cszName) { var call = this.GetFunction<NativeCreateLogContext>(this.Functions.CreateLogContext); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeLog(IntPtr thisobj, UInt32 hContext, string cszMsg);
		public Int32 Log(UInt32 hContext, string cszMsg) { var call = this.GetFunction<NativeLog>(this.Functions.Log); return call(this.ObjectAddress, hContext, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszMsg ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogResourceLoadStarted(IntPtr thisobj, string cszMsg);
		public void LogResourceLoadStarted(string cszMsg) { var call = this.GetFunction<NativeLogResourceLoadStarted>(this.Functions.LogResourceLoadStarted); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszMsg ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogResourceLoadFinished(IntPtr thisobj, string cszMsg);
		public void LogResourceLoadFinished(string cszMsg) { var call = this.GetFunction<NativeLogResourceLoadFinished>(this.Functions.LogResourceLoadFinished); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszMsg ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRefreshLogin(IntPtr thisobj, string cszPassphrase, Int32 bIsSecureComputer, ref TSteamError pError);
		public UInt32 RefreshLogin(string cszPassphrase, Int32 bIsSecureComputer, ref TSteamError pError) { var call = this.GetFunction<NativeRefreshLogin>(this.Functions.RefreshLogin); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPassphrase ) ), bIsSecureComputer, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeVerifyPassword(IntPtr thisobj, string cszArg1, ref Int32 piArg2, ref TSteamError pError);
		public Int32 VerifyPassword(string cszArg1, ref Int32 piArg2, ref TSteamError pError) { var call = this.GetFunction<NativeVerifyPassword>(this.Functions.VerifyPassword); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), ref piArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetUserType(IntPtr thisobj, ref UInt32 puArg1, ref TSteamError pError);
		public Int32 GetUserType(ref UInt32 puArg1, ref TSteamError pError) { var call = this.GetFunction<NativeGetUserType>(this.Functions.GetUserType); return call(this.ObjectAddress, ref puArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppStats(IntPtr thisobj, ref TSteamAppStats pAppStats, ref TSteamError pError);
		public Int32 GetAppStats(ref TSteamAppStats pAppStats, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppStats>(this.Functions.GetAppStats); return call(this.ObjectAddress, ref pAppStats, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeIsAccountNameInUse(IntPtr thisobj, string cszArg1, ref Int32 piArg2, ref TSteamError pError);
		public UInt32 IsAccountNameInUse(string cszArg1, ref Int32 piArg2, ref TSteamError pError) { var call = this.GetFunction<NativeIsAccountNameInUse>(this.Functions.IsAccountNameInUse); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), ref piArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppIds(IntPtr thisobj, ref UInt32 puIds, UInt32 uMaxIds, ref TSteamError pError);
		public Int32 GetAppIds(ref UInt32 puIds, UInt32 uMaxIds, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppIds>(this.Functions.GetAppIds); return call(this.ObjectAddress, ref puIds, uMaxIds, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionStats(IntPtr thisobj, ref TSteamSubscriptionStats pSubscriptionStats, ref TSteamError pError);
		public Int32 GetSubscriptionStats(ref TSteamSubscriptionStats pSubscriptionStats, ref TSteamError pError) { var call = this.GetFunction<NativeGetSubscriptionStats>(this.Functions.GetSubscriptionStats); return call(this.ObjectAddress, ref pSubscriptionStats, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRefreshAccountInfo(IntPtr thisobj, ref TSteamError pError);
		public UInt32 RefreshAccountInfo(ref TSteamError pError) { var call = this.GetFunction<NativeRefreshAccountInfo>(this.Functions.RefreshAccountInfo); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSubscribe(IntPtr thisobj, UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSteamError pError);
		public UInt32 Subscribe(UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSteamError pError) { var call = this.GetFunction<NativeSubscribe>(this.Functions.Subscribe); return call(this.ObjectAddress, uSubscriptionId, ref pSubscriptionBillingInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUnsubscribe(IntPtr thisobj, UInt32 uSubscriptionId, ref TSteamError pError);
		public UInt32 Unsubscribe(UInt32 uSubscriptionId, ref TSteamError pError) { var call = this.GetFunction<NativeUnsubscribe>(this.Functions.Unsubscribe); return call(this.ObjectAddress, uSubscriptionId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionReceipt(IntPtr thisobj, UInt32 arg1, ref TSteamSubscriptionReceipt pSteamSubscriptionReceipt, ref TSteamError pError);
		public Int32 GetSubscriptionReceipt(UInt32 arg1, ref TSteamSubscriptionReceipt pSteamSubscriptionReceipt, ref TSteamError pError) { var call = this.GetFunction<NativeGetSubscriptionReceipt>(this.Functions.GetSubscriptionReceipt); return call(this.ObjectAddress, arg1, ref pSteamSubscriptionReceipt, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAccountStatus(IntPtr thisobj, ref UInt32 puArg1, ref TSteamError pError);
		public Int32 GetAccountStatus(ref UInt32 puArg1, ref TSteamError pError) { var call = this.GetFunction<NativeGetAccountStatus>(this.Functions.GetAccountStatus); return call(this.ObjectAddress, ref puArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSetUser(IntPtr thisobj, string cszUser, ref Int32 pbUserSet, ref TSteamError pError);
		public UInt32 SetUser(string cszUser, ref Int32 pbUserSet, ref TSteamError pError) { var call = this.GetFunction<NativeSetUser>(this.Functions.SetUser); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszUser ) ), ref pbUserSet, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetUser(IntPtr thisobj, string szUser, UInt32 uBufSize, ref UInt32 puUserChars, ref TSteamGlobalUserID pSteamGlobalUserID, ref TSteamError pError);
		public Int32 GetUser(string szUser, UInt32 uBufSize, ref UInt32 puUserChars, ref TSteamGlobalUserID pSteamGlobalUserID, ref TSteamError pError) { var call = this.GetFunction<NativeGetUser>(this.Functions.GetUser); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szUser ) ), uBufSize, ref puUserChars, ref pSteamGlobalUserID, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLogin(IntPtr thisobj, string cszUser, string cszPassphrase, Int32 bIsSecureComputer, ref TSteamError pError);
		public UInt32 Login(string cszUser, string cszPassphrase, Int32 bIsSecureComputer, ref TSteamError pError) { var call = this.GetFunction<NativeLogin>(this.Functions.Login); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszUser ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPassphrase ) ), bIsSecureComputer, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeAckSubscriptionReceipt(IntPtr thisobj, UInt32 uArg1, ref TSteamError pError);
		public UInt32 AckSubscriptionReceipt(UInt32 uArg1, ref TSteamError pError) { var call = this.GetFunction<NativeAckSubscriptionReceipt>(this.Functions.AckSubscriptionReceipt); return call(this.ObjectAddress, uArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsAppSubscribed(IntPtr thisobj, UInt32 uAppId, ref Int32 pbIsAppSubscribed, ref Int32 pReserved, ref TSteamError pError);
		public Int32 IsAppSubscribed(UInt32 uAppId, ref Int32 pbIsAppSubscribed, ref Int32 pReserved, ref TSteamError pError) { var call = this.GetFunction<NativeIsAppSubscribed>(this.Functions.IsAppSubscribed); return call(this.ObjectAddress, uAppId, ref pbIsAppSubscribed, ref pReserved, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionIds(IntPtr thisobj, ref UInt32 puIds, UInt32 uMaxIds, ref TSteamError pError);
		public Int32 GetSubscriptionIds(ref UInt32 puIds, UInt32 uMaxIds, ref TSteamError pError) { var call = this.GetFunction<NativeGetSubscriptionIds>(this.Functions.GetSubscriptionIds); return call(this.ObjectAddress, ref puIds, uMaxIds, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateSubscription(IntPtr thisobj, UInt32 uSubscriptionId, ref TSteamSubscription pSubscription, ref TSteamError pError);
		public Int32 EnumerateSubscription(UInt32 uSubscriptionId, ref TSteamSubscription pSubscription, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateSubscription>(this.Functions.EnumerateSubscription); return call(this.ObjectAddress, uSubscriptionId, ref pSubscription, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateSubscriptionDiscount(IntPtr thisobj, UInt32 uSubscriptionId, UInt32 uDiscountIdx, ref TSteamSubscriptionDiscount pSteamSubscriptionDiscount, ref TSteamError pError);
		public Int32 EnumerateSubscriptionDiscount(UInt32 uSubscriptionId, UInt32 uDiscountIdx, ref TSteamSubscriptionDiscount pSteamSubscriptionDiscount, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateSubscriptionDiscount>(this.Functions.EnumerateSubscriptionDiscount); return call(this.ObjectAddress, uSubscriptionId, uDiscountIdx, ref pSteamSubscriptionDiscount, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateSubscriptionDiscountQualifier(IntPtr thisobj, UInt32 uSubscriptionId, UInt32 uDiscountIdx, UInt32 uQualifierIdx, ref TSteamDiscountQualifier pSteamDiscountQualifier, ref TSteamError pError);
		public Int32 EnumerateSubscriptionDiscountQualifier(UInt32 uSubscriptionId, UInt32 uDiscountIdx, UInt32 uQualifierIdx, ref TSteamDiscountQualifier pSteamDiscountQualifier, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateSubscriptionDiscountQualifier>(this.Functions.EnumerateSubscriptionDiscountQualifier); return call(this.ObjectAddress, uSubscriptionId, uDiscountIdx, uQualifierIdx, ref pSteamDiscountQualifier, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateApp(IntPtr thisobj, UInt32 uAppId, ref TSteamApp pApp, ref TSteamError pError);
		public Int32 EnumerateApp(UInt32 uAppId, ref TSteamApp pApp, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateApp>(this.Functions.EnumerateApp); return call(this.ObjectAddress, uAppId, ref pApp, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppLaunchOption(IntPtr thisobj, UInt32 uAppId, UInt32 uLaunchOptionIndex, ref TSteamAppLaunchOption pLaunchOption, ref TSteamError pError);
		public Int32 EnumerateAppLaunchOption(UInt32 uAppId, UInt32 uLaunchOptionIndex, ref TSteamAppLaunchOption pLaunchOption, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateAppLaunchOption>(this.Functions.EnumerateAppLaunchOption); return call(this.ObjectAddress, uAppId, uLaunchOptionIndex, ref pLaunchOption, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeDeleteAccount(IntPtr thisobj, ref TSteamError pError);
		public UInt32 DeleteAccount(ref TSteamError pError) { var call = this.GetFunction<NativeDeleteAccount>(this.Functions.DeleteAccount); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppIcon(IntPtr thisobj, UInt32 uAppId, UInt32 uIconIndex, byte[] pIconData, UInt32 uIconDataBufSize, ref UInt32 puSizeOfIconData, ref TSteamError pError);
		public Int32 EnumerateAppIcon(UInt32 uAppId, UInt32 uIconIndex, byte[] pIconData, UInt32 uIconDataBufSize, ref UInt32 puSizeOfIconData, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateAppIcon>(this.Functions.EnumerateAppIcon); return call(this.ObjectAddress, uAppId, uIconIndex, pIconData, uIconDataBufSize, ref puSizeOfIconData, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLaunchApp(IntPtr thisobj, UInt32 uAppId, UInt32 uLaunchOption, string cszArgs, ref TSteamError pError);
		public UInt32 LaunchApp(UInt32 uAppId, UInt32 uLaunchOption, string cszArgs, ref TSteamError pError) { var call = this.GetFunction<NativeLaunchApp>(this.Functions.LaunchApp); return call(this.ObjectAddress, uAppId, uLaunchOption, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArgs ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCacheFilePath(IntPtr thisobj, UInt32 uAppId, string szFilePath, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSteamError pError);
		public Int32 GetCacheFilePath(UInt32 uAppId, string szFilePath, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSteamError pError) { var call = this.GetFunction<NativeGetCacheFilePath>(this.Functions.GetCacheFilePath); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szFilePath ) ), uBufferLength, ref puRecievedLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppVersion(IntPtr thisobj, UInt32 uAppId, UInt32 uVersionIndex, ref TSteamAppVersion pAppVersion, ref TSteamError pError);
		public Int32 EnumerateAppVersion(UInt32 uAppId, UInt32 uVersionIndex, ref TSteamAppVersion pAppVersion, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateAppVersion>(this.Functions.EnumerateAppVersion); return call(this.ObjectAddress, uAppId, uVersionIndex, ref pAppVersion, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppDependency(IntPtr thisobj, UInt32 AppId, UInt32 uDependency, ref TSteamAppDependencyInfo pDependencyInfo, ref TSteamError pError);
		public Int32 EnumerateAppDependency(UInt32 AppId, UInt32 uDependency, ref TSteamAppDependencyInfo pDependencyInfo, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateAppDependency>(this.Functions.EnumerateAppDependency); return call(this.ObjectAddress, AppId, uDependency, ref pDependencyInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeStartLoadingCache(IntPtr thisobj, UInt32 uAppId, ref TSteamError pError);
		public UInt32 StartLoadingCache(UInt32 uAppId, ref TSteamError pError) { var call = this.GetFunction<NativeStartLoadingCache>(this.Functions.StartLoadingCache); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInsertAppDependency(IntPtr thisobj, UInt32 uAppId, UInt32 uFileSystemIndex, ref TSteamAppDependencyInfo pDependencyInfo, ref TSteamError pError);
		public Int32 InsertAppDependency(UInt32 uAppId, UInt32 uFileSystemIndex, ref TSteamAppDependencyInfo pDependencyInfo, ref TSteamError pError) { var call = this.GetFunction<NativeInsertAppDependency>(this.Functions.InsertAppDependency); return call(this.ObjectAddress, uAppId, uFileSystemIndex, ref pDependencyInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRemoveAppDependency(IntPtr thisobj, UInt32 uAppId, UInt32 uFileSystemIndex, ref TSteamError pError);
		public Int32 RemoveAppDependency(UInt32 uAppId, UInt32 uFileSystemIndex, ref TSteamError pError) { var call = this.GetFunction<NativeRemoveAppDependency>(this.Functions.RemoveAppDependency); return call(this.ObjectAddress, uAppId, uFileSystemIndex, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFindApp(IntPtr thisobj, string cszArg1, ref UInt32 puArg2, ref TSteamError pError);
		public Int32 FindApp(string cszArg1, ref UInt32 puArg2, ref TSteamError pError) { var call = this.GetFunction<NativeFindApp>(this.Functions.FindApp); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), ref puArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppDependencies(IntPtr thisobj, UInt32 uAppId, ref UInt32 puDependecies, UInt32 uBufferLength, ref TSteamError pError);
		public Int32 GetAppDependencies(UInt32 uAppId, ref UInt32 puDependecies, UInt32 uBufferLength, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppDependencies>(this.Functions.GetAppDependencies); return call(this.ObjectAddress, uAppId, ref puDependecies, uBufferLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsSubscribed(IntPtr thisobj, UInt32 uSubscriptionId, ref Int32 pbIsSubscribed, ref Int32 pReserved, ref TSteamError pError);
		public Int32 IsSubscribed(UInt32 uSubscriptionId, ref Int32 pbIsSubscribed, ref Int32 pReserved, ref TSteamError pError) { var call = this.GetFunction<NativeIsSubscribed>(this.Functions.IsSubscribed); return call(this.ObjectAddress, uSubscriptionId, ref pbIsSubscribed, ref pReserved, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppUserDefinedInfo(IntPtr thisobj, UInt32 uAppId, string cszPropertyName, string szPropertyValue, UInt32 uBufSize, ref UInt32 puPropertyValueLength, ref TSteamError pError);
		public Int32 GetAppUserDefinedInfo(UInt32 uAppId, string cszPropertyName, string szPropertyValue, UInt32 uBufSize, ref UInt32 puPropertyValueLength, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppUserDefinedInfo>(this.Functions.GetAppUserDefinedInfo); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPropertyName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( szPropertyValue ) ), uBufSize, ref puPropertyValueLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeWaitForAppReadyToLaunch(IntPtr thisobj, UInt32 uAppId, ref TSteamError pError);
		public UInt32 WaitForAppReadyToLaunch(UInt32 uAppId, ref TSteamError pError) { var call = this.GetFunction<NativeWaitForAppReadyToLaunch>(this.Functions.WaitForAppReadyToLaunch); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsCacheLoadingEnabled(IntPtr thisobj, UInt32 uAppId, ref Int32 pbIsLoading, ref TSteamError pError);
		public Int32 IsCacheLoadingEnabled(UInt32 uAppId, ref Int32 pbIsLoading, ref TSteamError pError) { var call = this.GetFunction<NativeIsCacheLoadingEnabled>(this.Functions.IsCacheLoadingEnabled); return call(this.ObjectAddress, uAppId, ref pbIsLoading, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeStopLoadingCache(IntPtr thisobj, UInt32 uAppId, ref TSteamError pError);
		public UInt32 StopLoadingCache(UInt32 uAppId, ref TSteamError pError) { var call = this.GetFunction<NativeStopLoadingCache>(this.Functions.StopLoadingCache); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ESteamError NativeGetEncryptedUserIDTicket(IntPtr thisobj, byte[] pEncryptionKeyReceivedFromAppServer, UInt32 uEncryptionKeyLength, byte[] pOutputBuffer, UInt32 uSizeOfOutputBuffer, ref UInt32 pReceiveSizeOfEncryptedTicket, ref TSteamError pError);
		public ESteamError GetEncryptedUserIDTicket(byte[] pEncryptionKeyReceivedFromAppServer, UInt32 uEncryptionKeyLength, byte[] pOutputBuffer, UInt32 uSizeOfOutputBuffer, ref UInt32 pReceiveSizeOfEncryptedTicket, ref TSteamError pError) { var call = this.GetFunction<NativeGetEncryptedUserIDTicket>(this.Functions.GetEncryptedUserIDTicket); return call(this.ObjectAddress, pEncryptionKeyReceivedFromAppServer, uEncryptionKeyLength, pOutputBuffer, uSizeOfOutputBuffer, ref pReceiveSizeOfEncryptedTicket, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeFlushCache(IntPtr thisobj, UInt32 uAppId, ref TSteamError pError);
		public UInt32 FlushCache(UInt32 uAppId, ref TSteamError pError) { var call = this.GetFunction<NativeFlushCache>(this.Functions.FlushCache); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRepairOrDecryptCaches(IntPtr thisobj, UInt32 uAppId, Int32 iArg2, ref TSteamError pError);
		public UInt32 RepairOrDecryptCaches(UInt32 uAppId, Int32 iArg2, ref TSteamError pError) { var call = this.GetFunction<NativeRepairOrDecryptCaches>(this.Functions.RepairOrDecryptCaches); return call(this.ObjectAddress, uAppId, iArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLoadCacheFromDir(IntPtr thisobj, UInt32 uAppId, string cszPath, ref TSteamError pError);
		public UInt32 LoadCacheFromDir(UInt32 uAppId, string cszPath, ref TSteamError pError) { var call = this.GetFunction<NativeLoadCacheFromDir>(this.Functions.LoadCacheFromDir); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPath ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCacheDefaultDirectory(IntPtr thisobj, string szPath, ref TSteamError pError);
		public Int32 GetCacheDefaultDirectory(string szPath, ref TSteamError pError) { var call = this.GetFunction<NativeGetCacheDefaultDirectory>(this.Functions.GetCacheDefaultDirectory); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szPath ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetCacheDefaultDirectory(IntPtr thisobj, string cszPath, ref TSteamError pError);
		public Int32 SetCacheDefaultDirectory(string cszPath, ref TSteamError pError) { var call = this.GetFunction<NativeSetCacheDefaultDirectory>(this.Functions.SetCacheDefaultDirectory); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPath ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppDir(IntPtr thisobj, UInt32 uAppId, string szAppDir, ref TSteamError pError);
		public Int32 GetAppDir(UInt32 uAppId, string szAppDir, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppDir>(this.Functions.GetAppDir); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szAppDir ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeMoveApp(IntPtr thisobj, UInt32 uAppId, string szPath, ref TSteamError pError);
		public UInt32 MoveApp(UInt32 uAppId, string szPath, ref TSteamError pError) { var call = this.GetFunction<NativeMoveApp>(this.Functions.MoveApp); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szPath ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppCacheSize(IntPtr thisobj, UInt32 uAppId, ref UInt32 puCacheSizeInMb, ref TSteamError pError);
		public UInt32 GetAppCacheSize(UInt32 uAppId, ref UInt32 puCacheSizeInMb, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppCacheSize>(this.Functions.GetAppCacheSize); return call(this.ObjectAddress, uAppId, ref puCacheSizeInMb, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSetAppCacheSize(IntPtr thisobj, UInt32 uAppId, UInt32 uCacheSizeInMb, ref TSteamError pError);
		public UInt32 SetAppCacheSize(UInt32 uAppId, UInt32 uCacheSizeInMb, ref TSteamError pError) { var call = this.GetFunction<NativeSetAppCacheSize>(this.Functions.SetAppCacheSize); return call(this.ObjectAddress, uAppId, uCacheSizeInMb, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSetAppVersion(IntPtr thisobj, UInt32 uAppId, UInt32 uAppVersionId, ref TSteamError pError);
		public UInt32 SetAppVersion(UInt32 uAppId, UInt32 uAppVersionId, ref TSteamError pError) { var call = this.GetFunction<NativeSetAppVersion>(this.Functions.SetAppVersion); return call(this.ObjectAddress, uAppId, uAppVersionId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUninstall(IntPtr thisobj, ref TSteamError pError);
		public UInt32 Uninstall(ref TSteamError pError) { var call = this.GetFunction<NativeUninstall>(this.Functions.Uninstall); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetNotificationCallback(IntPtr thisobj, ref IntPtr pCallbackFunction, ref TSteamError pError);
		public Int32 SetNotificationCallback(ref IntPtr pCallbackFunction, ref TSteamError pError) { var call = this.GetFunction<NativeSetNotificationCallback>(this.Functions.SetNotificationCallback); return call(this.ObjectAddress, ref pCallbackFunction, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangeForgottenPassword(IntPtr thisobj, string cszArg1, string cszArg2, string cszArg3, string cszArg4, ref Int32 piArg5, ref TSteamError pError);
		public UInt32 ChangeForgottenPassword(string cszArg1, string cszArg2, string cszArg3, string cszArg4, ref Int32 piArg5, ref TSteamError pError) { var call = this.GetFunction<NativeChangeForgottenPassword>(this.Functions.ChangeForgottenPassword); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg2 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg3 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg4 ) ), ref piArg5, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestForgottenPasswordEmail(IntPtr thisobj, string cszArg1, string szArg2, ref TSteamError pError);
		public UInt32 RequestForgottenPasswordEmail(string cszArg1, string szArg2, ref TSteamError pError) { var call = this.GetFunction<NativeRequestForgottenPasswordEmail>(this.Functions.RequestForgottenPasswordEmail); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( szArg2 ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestAccountsByEmailAddressEmail(IntPtr thisobj, string cszArg1, ref TSteamError pError);
		public UInt32 RequestAccountsByEmailAddressEmail(string cszArg1, ref TSteamError pError) { var call = this.GetFunction<NativeRequestAccountsByEmailAddressEmail>(this.Functions.RequestAccountsByEmailAddressEmail); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestAccountsByCdKeyEmail(IntPtr thisobj, string cszArg1, ref TSteamError pError);
		public UInt32 RequestAccountsByCdKeyEmail(string cszArg1, ref TSteamError pError) { var call = this.GetFunction<NativeRequestAccountsByCdKeyEmail>(this.Functions.RequestAccountsByCdKeyEmail); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumAccountsWithEmailAddress(IntPtr thisobj, string cszArg1, ref UInt32 puArg2, ref TSteamError pError);
		public UInt32 GetNumAccountsWithEmailAddress(string cszArg1, ref UInt32 puArg2, ref TSteamError pError) { var call = this.GetFunction<NativeGetNumAccountsWithEmailAddress>(this.Functions.GetNumAccountsWithEmailAddress); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), ref puArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUpdateAccountBillingInfo(IntPtr thisobj, ref TSteamPaymentCardInfo pPaymentCardInfo, ref TSteamError pError);
		public UInt32 UpdateAccountBillingInfo(ref TSteamPaymentCardInfo pPaymentCardInfo, ref TSteamError pError) { var call = this.GetFunction<NativeUpdateAccountBillingInfo>(this.Functions.UpdateAccountBillingInfo); return call(this.ObjectAddress, ref pPaymentCardInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUpdateSubscriptionBillingInfo(IntPtr thisobj, UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSteamError pError);
		public UInt32 UpdateSubscriptionBillingInfo(UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSteamError pError) { var call = this.GetFunction<NativeUpdateSubscriptionBillingInfo>(this.Functions.UpdateSubscriptionBillingInfo); return call(this.ObjectAddress, uSubscriptionId, ref pSubscriptionBillingInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSponsorUrl(IntPtr thisobj, UInt32 uAppId, string szUrl, UInt32 uBufSize, ref UInt32 pUrlChars, ref TSteamError pError);
		public Int32 GetSponsorUrl(UInt32 uAppId, string szUrl, UInt32 uBufSize, ref UInt32 pUrlChars, ref TSteamError pError) { var call = this.GetFunction<NativeGetSponsorUrl>(this.Functions.GetSponsorUrl); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szUrl ) ), uBufSize, ref pUrlChars, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetContentServerInfo(IntPtr thisobj, UInt32 uArg1, ref UInt32 puArg2, ref UInt32 puArg3, ref TSteamError pError);
		public Int32 GetContentServerInfo(UInt32 uArg1, ref UInt32 puArg2, ref UInt32 puArg3, ref TSteamError pError) { var call = this.GetFunction<NativeGetContentServerInfo>(this.Functions.GetContentServerInfo); return call(this.ObjectAddress, uArg1, ref puArg2, ref puArg3, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppUpdateStats(IntPtr thisobj, UInt32 uAppId, ESteamAppUpdateStatsQueryType eSteamAppUpdateStatsQueryType, ref TSteamUpdateStats pUpdateStats, ref TSteamError pError);
		public UInt32 GetAppUpdateStats(UInt32 uAppId, ESteamAppUpdateStatsQueryType eSteamAppUpdateStatsQueryType, ref TSteamUpdateStats pUpdateStats, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppUpdateStats>(this.Functions.GetAppUpdateStats); return call(this.ObjectAddress, uAppId, eSteamAppUpdateStatsQueryType, ref pUpdateStats, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetTotalUpdateStats(IntPtr thisobj, ref TSteamUpdateStats pUpdateStats, ref TSteamError pError);
		public Int32 GetTotalUpdateStats(ref TSteamUpdateStats pUpdateStats, ref TSteamError pError) { var call = this.GetFunction<NativeGetTotalUpdateStats>(this.Functions.GetTotalUpdateStats); return call(this.ObjectAddress, ref pUpdateStats, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateCachePreloaders(IntPtr thisobj, ref TSteamError pError);
		public UInt32 CreateCachePreloaders(ref TSteamError pError) { var call = this.GetFunction<NativeCreateCachePreloaders>(this.Functions.CreateCachePreloaders); return call(this.ObjectAddress, ref pError); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteam005VTable
	{
        public IntPtr DTor;
		public IntPtr ChangePassword;
		public IntPtr GetCurrentEmailAddress;
		public IntPtr ChangePersonalQA;
		public IntPtr ChangeEmailAddress;
		public IntPtr VerifyEmailAddress;
		public IntPtr RequestEmailAddressVerificationEmail;
		public IntPtr ChangeAccountName;
		public IntPtr MountAppFilesystem;
		public IntPtr UnmountAppFilesystem;
		public IntPtr MountFilesystem;
		public IntPtr UnmountFilesystem;
		public IntPtr Stat;
		public IntPtr SetvBuf;
		public IntPtr FlushFile;
		public IntPtr OpenFile;
		public IntPtr OpenFileEx;
		public IntPtr OpenTmpFile;
		public IntPtr ClearError;
		public IntPtr GetVersion;
		public IntPtr GetOfflineStatus;
		public IntPtr ChangeOfflineStatus;
		public IntPtr ProcessCall;
		public IntPtr AbortCall;
		public IntPtr BlockingCall;
		public IntPtr SetMaxStallCount;
		public IntPtr CloseFile;
		public IntPtr ReadFile;
		public IntPtr WriteFile;
		public IntPtr Getc;
		public IntPtr Putc;
		public IntPtr SeekFile;
		public IntPtr TellFile;
		public IntPtr SizeFile;
		public IntPtr FindFirst;
		public IntPtr FindNext;
		public IntPtr FindClose;
		public IntPtr GetLocalFileCopy;
		public IntPtr IsFileImmediatelyAvailable;
		public IntPtr HintResourceNeed;
		public IntPtr ForgetAllHints;
		public IntPtr PauseCachePreloading;
		public IntPtr ResumeCachePreloading;
		public IntPtr WaitForResources;
		public IntPtr StartEngine;
		public IntPtr ShutdownEngine;
		public IntPtr Startup;
		public IntPtr Cleanup;
		public IntPtr NumAppsRunning;
		public IntPtr CreateAccount;
		public IntPtr GenerateSuggestedAccountNames;
		public IntPtr IsLoggedIn;
		public IntPtr Logout;
		public IntPtr IsSecureComputer;
		public IntPtr CreateLogContext;
		public IntPtr Log;
		public IntPtr LogResourceLoadStarted;
		public IntPtr LogResourceLoadFinished;
		public IntPtr RefreshLogin;
		public IntPtr VerifyPassword;
		public IntPtr GetUserType;
		public IntPtr GetAppStats;
		public IntPtr IsAccountNameInUse;
		public IntPtr GetAppIds;
		public IntPtr GetSubscriptionStats;
		public IntPtr RefreshAccountInfo;
		public IntPtr Subscribe;
		public IntPtr Unsubscribe;
		public IntPtr GetSubscriptionReceipt;
		public IntPtr GetAccountStatus;
		public IntPtr SetUser;
		public IntPtr GetUser;
		public IntPtr Login;
		public IntPtr AckSubscriptionReceipt;
		public IntPtr IsAppSubscribed;
		public IntPtr GetSubscriptionIds;
		public IntPtr EnumerateSubscription;
		public IntPtr EnumerateSubscriptionDiscount;
		public IntPtr EnumerateSubscriptionDiscountQualifier;
		public IntPtr EnumerateApp;
		public IntPtr EnumerateAppLaunchOption;
		public IntPtr DeleteAccount;
		public IntPtr EnumerateAppIcon;
		public IntPtr LaunchApp;
		public IntPtr GetCacheFilePath;
		public IntPtr EnumerateAppVersion;
		public IntPtr EnumerateAppDependency;
		public IntPtr StartLoadingCache;
		public IntPtr InsertAppDependency;
		public IntPtr RemoveAppDependency;
		public IntPtr FindApp;
		public IntPtr GetAppDependencies;
		public IntPtr IsSubscribed;
		public IntPtr GetAppUserDefinedInfo;
		public IntPtr WaitForAppReadyToLaunch;
		public IntPtr IsCacheLoadingEnabled;
		public IntPtr StopLoadingCache;
		public IntPtr GetEncryptedUserIDTicket;
		public IntPtr FlushCache;
		public IntPtr RepairOrDecryptCaches;
		public IntPtr LoadCacheFromDir;
		public IntPtr GetCacheDefaultDirectory;
		public IntPtr SetCacheDefaultDirectory;
		public IntPtr GetAppDir;
		public IntPtr MoveApp;
		public IntPtr GetAppCacheSize;
		public IntPtr SetAppCacheSize;
		public IntPtr SetAppVersion;
		public IntPtr Uninstall;
		public IntPtr SetNotificationCallback;
		public IntPtr ChangeForgottenPassword;
		public IntPtr RequestForgottenPasswordEmail;
		public IntPtr RequestAccountsByEmailAddressEmail;
		public IntPtr RequestAccountsByCdKeyEmail;
		public IntPtr GetNumAccountsWithEmailAddress;
		public IntPtr UpdateAccountBillingInfo;
		public IntPtr UpdateSubscriptionBillingInfo;
		public IntPtr GetSponsorUrl;
		public IntPtr GetContentServerInfo;
		public IntPtr GetAppUpdateStats;
		public IntPtr GetTotalUpdateStats;
		public IntPtr CreateCachePreloaders;
		public IntPtr Win32SetMiniDumpComment;
		public IntPtr Win32SetMiniDumpSourceControlId;
		public IntPtr Win32SetMiniDumpEnableFullMemory;
		public IntPtr Win32WriteMiniDump;
		public IntPtr GetCurrentAppId;
		public IntPtr GetAppPurchaseCountry;
		public IntPtr GetLocalClientVersion;
		public IntPtr IsFileNeededByCache;
		public IntPtr LoadFileToCache;
		public IntPtr GetCacheDecryptionKey;
		public IntPtr GetSubscriptionExtendedInfo;
		public IntPtr GetSubscriptionPurchaseCountry;
		public IntPtr GetAppUserDefinedRecord;
	}
	
	public class ISteam005 : NativeWrapper<ISteam005VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangePassword(IntPtr thisobj, string cszCurrentPassphrase, string cszNewPassphrase, ref TSteamError pError);
		public UInt32 ChangePassword(string cszCurrentPassphrase, string cszNewPassphrase, ref TSteamError pError) { var call = this.GetFunction<NativeChangePassword>(this.Functions.ChangePassword); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszCurrentPassphrase ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszNewPassphrase ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCurrentEmailAddress(IntPtr thisobj, string szEmailaddress, UInt32 uBufSize, ref UInt32 puEmailaddressChars, ref TSteamError pError);
		public Int32 GetCurrentEmailAddress(string szEmailaddress, UInt32 uBufSize, ref UInt32 puEmailaddressChars, ref TSteamError pError) { var call = this.GetFunction<NativeGetCurrentEmailAddress>(this.Functions.GetCurrentEmailAddress); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szEmailaddress ) ), uBufSize, ref puEmailaddressChars, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangePersonalQA(IntPtr thisobj, string cszCurrentPassphrase, string cszNewPersonalQuestion, string cszNewAnswerToQuestion, ref TSteamError pError);
		public UInt32 ChangePersonalQA(string cszCurrentPassphrase, string cszNewPersonalQuestion, string cszNewAnswerToQuestion, ref TSteamError pError) { var call = this.GetFunction<NativeChangePersonalQA>(this.Functions.ChangePersonalQA); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszCurrentPassphrase ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszNewPersonalQuestion ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszNewAnswerToQuestion ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangeEmailAddress(IntPtr thisobj, string cszNewEmailAddress, ref TSteamError pError);
		public UInt32 ChangeEmailAddress(string cszNewEmailAddress, ref TSteamError pError) { var call = this.GetFunction<NativeChangeEmailAddress>(this.Functions.ChangeEmailAddress); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszNewEmailAddress ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeVerifyEmailAddress(IntPtr thisobj, string cszEmailAddress, ref TSteamError pError);
		public UInt32 VerifyEmailAddress(string cszEmailAddress, ref TSteamError pError) { var call = this.GetFunction<NativeVerifyEmailAddress>(this.Functions.VerifyEmailAddress); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszEmailAddress ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestEmailAddressVerificationEmail(IntPtr thisobj, ref TSteamError pError);
		public UInt32 RequestEmailAddressVerificationEmail(ref TSteamError pError) { var call = this.GetFunction<NativeRequestEmailAddressVerificationEmail>(this.Functions.RequestEmailAddressVerificationEmail); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangeAccountName(IntPtr thisobj, string cszCurrentAccountName, string cszNewAccountName, ref TSteamError pError);
		public UInt32 ChangeAccountName(string cszCurrentAccountName, string cszNewAccountName, ref TSteamError pError) { var call = this.GetFunction<NativeChangeAccountName>(this.Functions.ChangeAccountName); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszCurrentAccountName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszNewAccountName ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeMountAppFilesystem(IntPtr thisobj, ref TSteamError pError);
		public Int32 MountAppFilesystem(ref TSteamError pError) { var call = this.GetFunction<NativeMountAppFilesystem>(this.Functions.MountAppFilesystem); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeUnmountAppFilesystem(IntPtr thisobj, ref TSteamError pError);
		public Int32 UnmountAppFilesystem(ref TSteamError pError) { var call = this.GetFunction<NativeUnmountAppFilesystem>(this.Functions.UnmountAppFilesystem); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeMountFilesystem(IntPtr thisobj, UInt32 uAppId, string szMountPath, ref TSteamError pError);
		public Int32 MountFilesystem(UInt32 uAppId, string szMountPath, ref TSteamError pError) { var call = this.GetFunction<NativeMountFilesystem>(this.Functions.MountFilesystem); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szMountPath ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeUnmountFilesystem(IntPtr thisobj, UInt32 uAppId, ref TSteamError pError);
		public Int32 UnmountFilesystem(UInt32 uAppId, ref TSteamError pError) { var call = this.GetFunction<NativeUnmountFilesystem>(this.Functions.UnmountFilesystem); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeStat(IntPtr thisobj, string cszName, ref TSteamElemInfo pInfo, ref TSteamError pError);
		public Int32 Stat(string cszName, ref TSteamElemInfo pInfo, ref TSteamError pError) { var call = this.GetFunction<NativeStat>(this.Functions.Stat); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszName ) ), ref pInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetvBuf(IntPtr thisobj, UInt32 hFile, byte[] pBuf, ESteamBufferMethod eMethod, UInt32 uBytes, ref TSteamError pError);
		public Int32 SetvBuf(UInt32 hFile, byte[] pBuf, ESteamBufferMethod eMethod, UInt32 uBytes, ref TSteamError pError) { var call = this.GetFunction<NativeSetvBuf>(this.Functions.SetvBuf); return call(this.ObjectAddress, hFile, pBuf, eMethod, uBytes, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFlushFile(IntPtr thisobj, UInt32 hFile, ref TSteamError pError);
		public Int32 FlushFile(UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativeFlushFile>(this.Functions.FlushFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeOpenFile(IntPtr thisobj, string cszName, string cszMode, ref TSteamError pError);
		public UInt32 OpenFile(string cszName, string cszMode, ref TSteamError pError) { var call = this.GetFunction<NativeOpenFile>(this.Functions.OpenFile); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszMode ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeOpenFileEx(IntPtr thisobj, string cszFileName, string cszMode, ref UInt32 puSize, ref TSteamError pError);
		public UInt32 OpenFileEx(string cszFileName, string cszMode, ref UInt32 puSize, ref TSteamError pError) { var call = this.GetFunction<NativeOpenFileEx>(this.Functions.OpenFileEx); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszFileName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszMode ) ), ref puSize, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeOpenTmpFile(IntPtr thisobj, ref TSteamError pError);
		public UInt32 OpenTmpFile(ref TSteamError pError) { var call = this.GetFunction<NativeOpenTmpFile>(this.Functions.OpenTmpFile); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeClearError(IntPtr thisobj, ref TSteamError pError);
		public void ClearError(ref TSteamError pError) { var call = this.GetFunction<NativeClearError>(this.Functions.ClearError); call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetVersion(IntPtr thisobj, string szVersion, UInt32 uVersionBufSize);
		public Int32 GetVersion(string szVersion, UInt32 uVersionBufSize) { var call = this.GetFunction<NativeGetVersion>(this.Functions.GetVersion); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szVersion ) ), uVersionBufSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetOfflineStatus(IntPtr thisobj, ref TSteamOfflineStatus pSteamOfflineStatus, ref TSteamError pError);
		public Int32 GetOfflineStatus(ref TSteamOfflineStatus pSteamOfflineStatus, ref TSteamError pError) { var call = this.GetFunction<NativeGetOfflineStatus>(this.Functions.GetOfflineStatus); return call(this.ObjectAddress, ref pSteamOfflineStatus, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeChangeOfflineStatus(IntPtr thisobj, ref TSteamOfflineStatus pSteamOfflineStatus, ref TSteamError pError);
		public Int32 ChangeOfflineStatus(ref TSteamOfflineStatus pSteamOfflineStatus, ref TSteamError pError) { var call = this.GetFunction<NativeChangeOfflineStatus>(this.Functions.ChangeOfflineStatus); return call(this.ObjectAddress, ref pSteamOfflineStatus, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeProcessCall(IntPtr thisobj, UInt32 handle, ref TSteamProgress pProgress, ref TSteamError pError);
		public Int32 ProcessCall(UInt32 handle, ref TSteamProgress pProgress, ref TSteamError pError) { var call = this.GetFunction<NativeProcessCall>(this.Functions.ProcessCall); return call(this.ObjectAddress, handle, ref pProgress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAbortCall(IntPtr thisobj, UInt32 handle, ref TSteamError pError);
		public Int32 AbortCall(UInt32 handle, ref TSteamError pError) { var call = this.GetFunction<NativeAbortCall>(this.Functions.AbortCall); return call(this.ObjectAddress, handle, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeBlockingCall(IntPtr thisobj, UInt32 handle, UInt32 uiProcessTickMS, ref TSteamError pError);
		public Int32 BlockingCall(UInt32 handle, UInt32 uiProcessTickMS, ref TSteamError pError) { var call = this.GetFunction<NativeBlockingCall>(this.Functions.BlockingCall); return call(this.ObjectAddress, handle, uiProcessTickMS, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetMaxStallCount(IntPtr thisobj, UInt32 uNumStalls, ref TSteamError pError);
		public Int32 SetMaxStallCount(UInt32 uNumStalls, ref TSteamError pError) { var call = this.GetFunction<NativeSetMaxStallCount>(this.Functions.SetMaxStallCount); return call(this.ObjectAddress, uNumStalls, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCloseFile(IntPtr thisobj, UInt32 hFile, ref TSteamError pError);
		public Int32 CloseFile(UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativeCloseFile>(this.Functions.CloseFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeReadFile(IntPtr thisobj, byte[] pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSteamError pError);
		public UInt32 ReadFile(byte[] pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativeReadFile>(this.Functions.ReadFile); return call(this.ObjectAddress, pBuf, uSize, uCount, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeWriteFile(IntPtr thisobj, byte[] pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSteamError pError);
		public UInt32 WriteFile(byte[] pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativeWriteFile>(this.Functions.WriteFile); return call(this.ObjectAddress, pBuf, uSize, uCount, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetc(IntPtr thisobj, UInt32 hFile, ref TSteamError pError);
		public Int32 Getc(UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativeGetc>(this.Functions.Getc); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePutc(IntPtr thisobj, Int32 cChar, UInt32 hFile, ref TSteamError pError);
		public Int32 Putc(Int32 cChar, UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativePutc>(this.Functions.Putc); return call(this.ObjectAddress, cChar, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSeekFile(IntPtr thisobj, UInt32 hFile, Int32 lOffset, ESteamSeekMethod sm, ref TSteamError pError);
		public Int32 SeekFile(UInt32 hFile, Int32 lOffset, ESteamSeekMethod sm, ref TSteamError pError) { var call = this.GetFunction<NativeSeekFile>(this.Functions.SeekFile); return call(this.ObjectAddress, hFile, lOffset, sm, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeTellFile(IntPtr thisobj, UInt32 hFile, ref TSteamError pError);
		public Int32 TellFile(UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativeTellFile>(this.Functions.TellFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSizeFile(IntPtr thisobj, UInt32 hFile, ref TSteamError pError);
		public Int32 SizeFile(UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativeSizeFile>(this.Functions.SizeFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeFindFirst(IntPtr thisobj, string cszPattern, ESteamFindFilter eFilter, ref TSteamElemInfo pFindInfo, ref TSteamError pError);
		public UInt32 FindFirst(string cszPattern, ESteamFindFilter eFilter, ref TSteamElemInfo pFindInfo, ref TSteamError pError) { var call = this.GetFunction<NativeFindFirst>(this.Functions.FindFirst); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPattern ) ), eFilter, ref pFindInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFindNext(IntPtr thisobj, UInt32 hFind, ref TSteamElemInfo pFindInfo, ref TSteamError pError);
		public Int32 FindNext(UInt32 hFind, ref TSteamElemInfo pFindInfo, ref TSteamError pError) { var call = this.GetFunction<NativeFindNext>(this.Functions.FindNext); return call(this.ObjectAddress, hFind, ref pFindInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFindClose(IntPtr thisobj, UInt32 hFind, ref TSteamError pError);
		public Int32 FindClose(UInt32 hFind, ref TSteamError pError) { var call = this.GetFunction<NativeFindClose>(this.Functions.FindClose); return call(this.ObjectAddress, hFind, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLocalFileCopy(IntPtr thisobj, string cszName, ref TSteamError pError);
		public Int32 GetLocalFileCopy(string cszName, ref TSteamError pError) { var call = this.GetFunction<NativeGetLocalFileCopy>(this.Functions.GetLocalFileCopy); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszName ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsFileImmediatelyAvailable(IntPtr thisobj, string cszName, ref TSteamError pError);
		public Int32 IsFileImmediatelyAvailable(string cszName, ref TSteamError pError) { var call = this.GetFunction<NativeIsFileImmediatelyAvailable>(this.Functions.IsFileImmediatelyAvailable); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszName ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeHintResourceNeed(IntPtr thisobj, string cszHintList, Int32 bForgetEverything, ref TSteamError pError);
		public Int32 HintResourceNeed(string cszHintList, Int32 bForgetEverything, ref TSteamError pError) { var call = this.GetFunction<NativeHintResourceNeed>(this.Functions.HintResourceNeed); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszHintList ) ), bForgetEverything, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeForgetAllHints(IntPtr thisobj, ref TSteamError pError);
		public Int32 ForgetAllHints(ref TSteamError pError) { var call = this.GetFunction<NativeForgetAllHints>(this.Functions.ForgetAllHints); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePauseCachePreloading(IntPtr thisobj, ref TSteamError pError);
		public Int32 PauseCachePreloading(ref TSteamError pError) { var call = this.GetFunction<NativePauseCachePreloading>(this.Functions.PauseCachePreloading); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeResumeCachePreloading(IntPtr thisobj, ref TSteamError pError);
		public Int32 ResumeCachePreloading(ref TSteamError pError) { var call = this.GetFunction<NativeResumeCachePreloading>(this.Functions.ResumeCachePreloading); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeWaitForResources(IntPtr thisobj, string cszMasterList, ref TSteamError pError);
		public UInt32 WaitForResources(string cszMasterList, ref TSteamError pError) { var call = this.GetFunction<NativeWaitForResources>(this.Functions.WaitForResources); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszMasterList ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeStartEngine(IntPtr thisobj, ref TSteamError pError);
		public Int32 StartEngine(ref TSteamError pError) { var call = this.GetFunction<NativeStartEngine>(this.Functions.StartEngine); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeShutdownEngine(IntPtr thisobj, ref TSteamError pError);
		public Int32 ShutdownEngine(ref TSteamError pError) { var call = this.GetFunction<NativeShutdownEngine>(this.Functions.ShutdownEngine); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeStartup(IntPtr thisobj, UInt32 uUsingMask, ref TSteamError pError);
		public Int32 Startup(UInt32 uUsingMask, ref TSteamError pError) { var call = this.GetFunction<NativeStartup>(this.Functions.Startup); return call(this.ObjectAddress, uUsingMask, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCleanup(IntPtr thisobj, ref TSteamError pError);
		public Int32 Cleanup(ref TSteamError pError) { var call = this.GetFunction<NativeCleanup>(this.Functions.Cleanup); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeNumAppsRunning(IntPtr thisobj, ref TSteamError pError);
		public Int32 NumAppsRunning(ref TSteamError pError) { var call = this.GetFunction<NativeNumAppsRunning>(this.Functions.NumAppsRunning); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateAccount(IntPtr thisobj, string cszUser, string cszPassphrase, string cszCreationKey, string cszPersonalQuestion, string cszAnswerToQuestion, string cszArg6, ref Int32 pbCreated, ref TSteamError pError);
		public UInt32 CreateAccount(string cszUser, string cszPassphrase, string cszCreationKey, string cszPersonalQuestion, string cszAnswerToQuestion, string cszArg6, ref Int32 pbCreated, ref TSteamError pError) { var call = this.GetFunction<NativeCreateAccount>(this.Functions.CreateAccount); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszUser ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPassphrase ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszCreationKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPersonalQuestion ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszAnswerToQuestion ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg6 ) ), ref pbCreated, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGenerateSuggestedAccountNames(IntPtr thisobj, string cszArg1, string cszArg2, string szArg3, UInt32 uArg4, ref UInt32 puArg5, ref TSteamError pError);
		public UInt32 GenerateSuggestedAccountNames(string cszArg1, string cszArg2, string szArg3, UInt32 uArg4, ref UInt32 puArg5, ref TSteamError pError) { var call = this.GetFunction<NativeGenerateSuggestedAccountNames>(this.Functions.GenerateSuggestedAccountNames); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg2 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( szArg3 ) ), uArg4, ref puArg5, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsLoggedIn(IntPtr thisobj, ref Int32 pbIsLoggedIn, ref TSteamError pError);
		public Int32 IsLoggedIn(ref Int32 pbIsLoggedIn, ref TSteamError pError) { var call = this.GetFunction<NativeIsLoggedIn>(this.Functions.IsLoggedIn); return call(this.ObjectAddress, ref pbIsLoggedIn, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLogout(IntPtr thisobj, ref TSteamError pError);
		public UInt32 Logout(ref TSteamError pError) { var call = this.GetFunction<NativeLogout>(this.Functions.Logout); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsSecureComputer(IntPtr thisobj, ref Int32 pbIsSecure, ref TSteamError pError);
		public Int32 IsSecureComputer(ref Int32 pbIsSecure, ref TSteamError pError) { var call = this.GetFunction<NativeIsSecureComputer>(this.Functions.IsSecureComputer); return call(this.ObjectAddress, ref pbIsSecure, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateLogContext(IntPtr thisobj, string cszName);
		public UInt32 CreateLogContext(string cszName) { var call = this.GetFunction<NativeCreateLogContext>(this.Functions.CreateLogContext); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeLog(IntPtr thisobj, UInt32 hContext, string cszMsg);
		public Int32 Log(UInt32 hContext, string cszMsg) { var call = this.GetFunction<NativeLog>(this.Functions.Log); return call(this.ObjectAddress, hContext, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszMsg ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogResourceLoadStarted(IntPtr thisobj, string cszMsg);
		public void LogResourceLoadStarted(string cszMsg) { var call = this.GetFunction<NativeLogResourceLoadStarted>(this.Functions.LogResourceLoadStarted); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszMsg ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogResourceLoadFinished(IntPtr thisobj, string cszMsg);
		public void LogResourceLoadFinished(string cszMsg) { var call = this.GetFunction<NativeLogResourceLoadFinished>(this.Functions.LogResourceLoadFinished); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszMsg ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRefreshLogin(IntPtr thisobj, string cszPassphrase, Int32 bIsSecureComputer, ref TSteamError pError);
		public UInt32 RefreshLogin(string cszPassphrase, Int32 bIsSecureComputer, ref TSteamError pError) { var call = this.GetFunction<NativeRefreshLogin>(this.Functions.RefreshLogin); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPassphrase ) ), bIsSecureComputer, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeVerifyPassword(IntPtr thisobj, string cszArg1, ref Int32 piArg2, ref TSteamError pError);
		public Int32 VerifyPassword(string cszArg1, ref Int32 piArg2, ref TSteamError pError) { var call = this.GetFunction<NativeVerifyPassword>(this.Functions.VerifyPassword); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), ref piArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetUserType(IntPtr thisobj, ref UInt32 puArg1, ref TSteamError pError);
		public Int32 GetUserType(ref UInt32 puArg1, ref TSteamError pError) { var call = this.GetFunction<NativeGetUserType>(this.Functions.GetUserType); return call(this.ObjectAddress, ref puArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppStats(IntPtr thisobj, ref TSteamAppStats pAppStats, ref TSteamError pError);
		public Int32 GetAppStats(ref TSteamAppStats pAppStats, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppStats>(this.Functions.GetAppStats); return call(this.ObjectAddress, ref pAppStats, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeIsAccountNameInUse(IntPtr thisobj, string cszArg1, ref Int32 piArg2, ref TSteamError pError);
		public UInt32 IsAccountNameInUse(string cszArg1, ref Int32 piArg2, ref TSteamError pError) { var call = this.GetFunction<NativeIsAccountNameInUse>(this.Functions.IsAccountNameInUse); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), ref piArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppIds(IntPtr thisobj, ref UInt32 puIds, UInt32 uMaxIds, ref TSteamError pError);
		public Int32 GetAppIds(ref UInt32 puIds, UInt32 uMaxIds, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppIds>(this.Functions.GetAppIds); return call(this.ObjectAddress, ref puIds, uMaxIds, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionStats(IntPtr thisobj, ref TSteamSubscriptionStats pSubscriptionStats, ref TSteamError pError);
		public Int32 GetSubscriptionStats(ref TSteamSubscriptionStats pSubscriptionStats, ref TSteamError pError) { var call = this.GetFunction<NativeGetSubscriptionStats>(this.Functions.GetSubscriptionStats); return call(this.ObjectAddress, ref pSubscriptionStats, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRefreshAccountInfo(IntPtr thisobj, Int32 arg1, ref TSteamError pError);
		public UInt32 RefreshAccountInfo(Int32 arg1, ref TSteamError pError) { var call = this.GetFunction<NativeRefreshAccountInfo>(this.Functions.RefreshAccountInfo); return call(this.ObjectAddress, arg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSubscribe(IntPtr thisobj, UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSteamError pError);
		public UInt32 Subscribe(UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSteamError pError) { var call = this.GetFunction<NativeSubscribe>(this.Functions.Subscribe); return call(this.ObjectAddress, uSubscriptionId, ref pSubscriptionBillingInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUnsubscribe(IntPtr thisobj, UInt32 uSubscriptionId, ref TSteamError pError);
		public UInt32 Unsubscribe(UInt32 uSubscriptionId, ref TSteamError pError) { var call = this.GetFunction<NativeUnsubscribe>(this.Functions.Unsubscribe); return call(this.ObjectAddress, uSubscriptionId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionReceipt(IntPtr thisobj, UInt32 arg1, ref TSteamSubscriptionReceipt pSteamSubscriptionReceipt, ref TSteamError pError);
		public Int32 GetSubscriptionReceipt(UInt32 arg1, ref TSteamSubscriptionReceipt pSteamSubscriptionReceipt, ref TSteamError pError) { var call = this.GetFunction<NativeGetSubscriptionReceipt>(this.Functions.GetSubscriptionReceipt); return call(this.ObjectAddress, arg1, ref pSteamSubscriptionReceipt, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAccountStatus(IntPtr thisobj, ref UInt32 puArg1, ref TSteamError pError);
		public Int32 GetAccountStatus(ref UInt32 puArg1, ref TSteamError pError) { var call = this.GetFunction<NativeGetAccountStatus>(this.Functions.GetAccountStatus); return call(this.ObjectAddress, ref puArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSetUser(IntPtr thisobj, string cszUser, ref Int32 pbUserSet, ref TSteamError pError);
		public UInt32 SetUser(string cszUser, ref Int32 pbUserSet, ref TSteamError pError) { var call = this.GetFunction<NativeSetUser>(this.Functions.SetUser); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszUser ) ), ref pbUserSet, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetUser(IntPtr thisobj, string szUser, UInt32 uBufSize, ref UInt32 puUserChars, ref TSteamGlobalUserID pSteamGlobalUserID, ref TSteamError pError);
		public Int32 GetUser(string szUser, UInt32 uBufSize, ref UInt32 puUserChars, ref TSteamGlobalUserID pSteamGlobalUserID, ref TSteamError pError) { var call = this.GetFunction<NativeGetUser>(this.Functions.GetUser); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szUser ) ), uBufSize, ref puUserChars, ref pSteamGlobalUserID, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLogin(IntPtr thisobj, string cszUser, string cszPassphrase, Int32 bIsSecureComputer, ref TSteamError pError);
		public UInt32 Login(string cszUser, string cszPassphrase, Int32 bIsSecureComputer, ref TSteamError pError) { var call = this.GetFunction<NativeLogin>(this.Functions.Login); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszUser ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPassphrase ) ), bIsSecureComputer, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeAckSubscriptionReceipt(IntPtr thisobj, UInt32 uArg1, ref TSteamError pError);
		public UInt32 AckSubscriptionReceipt(UInt32 uArg1, ref TSteamError pError) { var call = this.GetFunction<NativeAckSubscriptionReceipt>(this.Functions.AckSubscriptionReceipt); return call(this.ObjectAddress, uArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsAppSubscribed(IntPtr thisobj, UInt32 uAppId, ref Int32 pbIsAppSubscribed, ref Int32 pReserved, ref TSteamError pError);
		public Int32 IsAppSubscribed(UInt32 uAppId, ref Int32 pbIsAppSubscribed, ref Int32 pReserved, ref TSteamError pError) { var call = this.GetFunction<NativeIsAppSubscribed>(this.Functions.IsAppSubscribed); return call(this.ObjectAddress, uAppId, ref pbIsAppSubscribed, ref pReserved, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionIds(IntPtr thisobj, ref UInt32 puIds, UInt32 uMaxIds, ref TSteamError pError);
		public Int32 GetSubscriptionIds(ref UInt32 puIds, UInt32 uMaxIds, ref TSteamError pError) { var call = this.GetFunction<NativeGetSubscriptionIds>(this.Functions.GetSubscriptionIds); return call(this.ObjectAddress, ref puIds, uMaxIds, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateSubscription(IntPtr thisobj, UInt32 uSubscriptionId, ref TSteamSubscription pSubscription, ref TSteamError pError);
		public Int32 EnumerateSubscription(UInt32 uSubscriptionId, ref TSteamSubscription pSubscription, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateSubscription>(this.Functions.EnumerateSubscription); return call(this.ObjectAddress, uSubscriptionId, ref pSubscription, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateSubscriptionDiscount(IntPtr thisobj, UInt32 uSubscriptionId, UInt32 uDiscountIdx, ref TSteamSubscriptionDiscount pSteamSubscriptionDiscount, ref TSteamError pError);
		public Int32 EnumerateSubscriptionDiscount(UInt32 uSubscriptionId, UInt32 uDiscountIdx, ref TSteamSubscriptionDiscount pSteamSubscriptionDiscount, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateSubscriptionDiscount>(this.Functions.EnumerateSubscriptionDiscount); return call(this.ObjectAddress, uSubscriptionId, uDiscountIdx, ref pSteamSubscriptionDiscount, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateSubscriptionDiscountQualifier(IntPtr thisobj, UInt32 uSubscriptionId, UInt32 uDiscountIdx, UInt32 uQualifierIdx, ref TSteamDiscountQualifier pSteamDiscountQualifier, ref TSteamError pError);
		public Int32 EnumerateSubscriptionDiscountQualifier(UInt32 uSubscriptionId, UInt32 uDiscountIdx, UInt32 uQualifierIdx, ref TSteamDiscountQualifier pSteamDiscountQualifier, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateSubscriptionDiscountQualifier>(this.Functions.EnumerateSubscriptionDiscountQualifier); return call(this.ObjectAddress, uSubscriptionId, uDiscountIdx, uQualifierIdx, ref pSteamDiscountQualifier, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateApp(IntPtr thisobj, UInt32 uAppId, ref TSteamApp pApp, ref TSteamError pError);
		public Int32 EnumerateApp(UInt32 uAppId, ref TSteamApp pApp, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateApp>(this.Functions.EnumerateApp); return call(this.ObjectAddress, uAppId, ref pApp, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppLaunchOption(IntPtr thisobj, UInt32 uAppId, UInt32 uLaunchOptionIndex, ref TSteamAppLaunchOption pLaunchOption, ref TSteamError pError);
		public Int32 EnumerateAppLaunchOption(UInt32 uAppId, UInt32 uLaunchOptionIndex, ref TSteamAppLaunchOption pLaunchOption, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateAppLaunchOption>(this.Functions.EnumerateAppLaunchOption); return call(this.ObjectAddress, uAppId, uLaunchOptionIndex, ref pLaunchOption, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeDeleteAccount(IntPtr thisobj, ref TSteamError pError);
		public UInt32 DeleteAccount(ref TSteamError pError) { var call = this.GetFunction<NativeDeleteAccount>(this.Functions.DeleteAccount); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppIcon(IntPtr thisobj, UInt32 uAppId, UInt32 uIconIndex, byte[] pIconData, UInt32 uIconDataBufSize, ref UInt32 puSizeOfIconData, ref TSteamError pError);
		public Int32 EnumerateAppIcon(UInt32 uAppId, UInt32 uIconIndex, byte[] pIconData, UInt32 uIconDataBufSize, ref UInt32 puSizeOfIconData, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateAppIcon>(this.Functions.EnumerateAppIcon); return call(this.ObjectAddress, uAppId, uIconIndex, pIconData, uIconDataBufSize, ref puSizeOfIconData, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLaunchApp(IntPtr thisobj, UInt32 uAppId, UInt32 uLaunchOption, string cszArgs, ref TSteamError pError);
		public UInt32 LaunchApp(UInt32 uAppId, UInt32 uLaunchOption, string cszArgs, ref TSteamError pError) { var call = this.GetFunction<NativeLaunchApp>(this.Functions.LaunchApp); return call(this.ObjectAddress, uAppId, uLaunchOption, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArgs ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCacheFilePath(IntPtr thisobj, UInt32 uAppId, string szFilePath, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSteamError pError);
		public Int32 GetCacheFilePath(UInt32 uAppId, string szFilePath, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSteamError pError) { var call = this.GetFunction<NativeGetCacheFilePath>(this.Functions.GetCacheFilePath); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szFilePath ) ), uBufferLength, ref puRecievedLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppVersion(IntPtr thisobj, UInt32 uAppId, UInt32 uVersionIndex, ref TSteamAppVersion pAppVersion, ref TSteamError pError);
		public Int32 EnumerateAppVersion(UInt32 uAppId, UInt32 uVersionIndex, ref TSteamAppVersion pAppVersion, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateAppVersion>(this.Functions.EnumerateAppVersion); return call(this.ObjectAddress, uAppId, uVersionIndex, ref pAppVersion, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppDependency(IntPtr thisobj, UInt32 AppId, UInt32 uDependency, ref TSteamAppDependencyInfo pDependencyInfo, ref TSteamError pError);
		public Int32 EnumerateAppDependency(UInt32 AppId, UInt32 uDependency, ref TSteamAppDependencyInfo pDependencyInfo, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateAppDependency>(this.Functions.EnumerateAppDependency); return call(this.ObjectAddress, AppId, uDependency, ref pDependencyInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeStartLoadingCache(IntPtr thisobj, UInt32 uAppId, ref TSteamError pError);
		public UInt32 StartLoadingCache(UInt32 uAppId, ref TSteamError pError) { var call = this.GetFunction<NativeStartLoadingCache>(this.Functions.StartLoadingCache); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInsertAppDependency(IntPtr thisobj, UInt32 uAppId, UInt32 uFileSystemIndex, ref TSteamAppDependencyInfo pDependencyInfo, ref TSteamError pError);
		public Int32 InsertAppDependency(UInt32 uAppId, UInt32 uFileSystemIndex, ref TSteamAppDependencyInfo pDependencyInfo, ref TSteamError pError) { var call = this.GetFunction<NativeInsertAppDependency>(this.Functions.InsertAppDependency); return call(this.ObjectAddress, uAppId, uFileSystemIndex, ref pDependencyInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRemoveAppDependency(IntPtr thisobj, UInt32 uAppId, UInt32 uFileSystemIndex, ref TSteamError pError);
		public Int32 RemoveAppDependency(UInt32 uAppId, UInt32 uFileSystemIndex, ref TSteamError pError) { var call = this.GetFunction<NativeRemoveAppDependency>(this.Functions.RemoveAppDependency); return call(this.ObjectAddress, uAppId, uFileSystemIndex, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFindApp(IntPtr thisobj, string cszArg1, ref UInt32 puArg2, ref TSteamError pError);
		public Int32 FindApp(string cszArg1, ref UInt32 puArg2, ref TSteamError pError) { var call = this.GetFunction<NativeFindApp>(this.Functions.FindApp); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), ref puArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppDependencies(IntPtr thisobj, UInt32 uAppId, ref UInt32 puDependecies, UInt32 uBufferLength, ref TSteamError pError);
		public Int32 GetAppDependencies(UInt32 uAppId, ref UInt32 puDependecies, UInt32 uBufferLength, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppDependencies>(this.Functions.GetAppDependencies); return call(this.ObjectAddress, uAppId, ref puDependecies, uBufferLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsSubscribed(IntPtr thisobj, UInt32 uSubscriptionId, ref Int32 pbIsSubscribed, ref Int32 pReserved, ref TSteamError pError);
		public Int32 IsSubscribed(UInt32 uSubscriptionId, ref Int32 pbIsSubscribed, ref Int32 pReserved, ref TSteamError pError) { var call = this.GetFunction<NativeIsSubscribed>(this.Functions.IsSubscribed); return call(this.ObjectAddress, uSubscriptionId, ref pbIsSubscribed, ref pReserved, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppUserDefinedInfo(IntPtr thisobj, UInt32 uAppId, string cszPropertyName, string szPropertyValue, UInt32 uBufSize, ref UInt32 puPropertyValueLength, ref TSteamError pError);
		public Int32 GetAppUserDefinedInfo(UInt32 uAppId, string cszPropertyName, string szPropertyValue, UInt32 uBufSize, ref UInt32 puPropertyValueLength, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppUserDefinedInfo>(this.Functions.GetAppUserDefinedInfo); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPropertyName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( szPropertyValue ) ), uBufSize, ref puPropertyValueLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeWaitForAppReadyToLaunch(IntPtr thisobj, UInt32 uAppId, ref TSteamError pError);
		public UInt32 WaitForAppReadyToLaunch(UInt32 uAppId, ref TSteamError pError) { var call = this.GetFunction<NativeWaitForAppReadyToLaunch>(this.Functions.WaitForAppReadyToLaunch); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsCacheLoadingEnabled(IntPtr thisobj, UInt32 uAppId, ref Int32 pbIsLoading, ref TSteamError pError);
		public Int32 IsCacheLoadingEnabled(UInt32 uAppId, ref Int32 pbIsLoading, ref TSteamError pError) { var call = this.GetFunction<NativeIsCacheLoadingEnabled>(this.Functions.IsCacheLoadingEnabled); return call(this.ObjectAddress, uAppId, ref pbIsLoading, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeStopLoadingCache(IntPtr thisobj, UInt32 uAppId, ref TSteamError pError);
		public UInt32 StopLoadingCache(UInt32 uAppId, ref TSteamError pError) { var call = this.GetFunction<NativeStopLoadingCache>(this.Functions.StopLoadingCache); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ESteamError NativeGetEncryptedUserIDTicket(IntPtr thisobj, byte[] pEncryptionKeyReceivedFromAppServer, UInt32 uEncryptionKeyLength, byte[] pOutputBuffer, UInt32 uSizeOfOutputBuffer, ref UInt32 pReceiveSizeOfEncryptedTicket, ref TSteamError pError);
		public ESteamError GetEncryptedUserIDTicket(byte[] pEncryptionKeyReceivedFromAppServer, UInt32 uEncryptionKeyLength, byte[] pOutputBuffer, UInt32 uSizeOfOutputBuffer, ref UInt32 pReceiveSizeOfEncryptedTicket, ref TSteamError pError) { var call = this.GetFunction<NativeGetEncryptedUserIDTicket>(this.Functions.GetEncryptedUserIDTicket); return call(this.ObjectAddress, pEncryptionKeyReceivedFromAppServer, uEncryptionKeyLength, pOutputBuffer, uSizeOfOutputBuffer, ref pReceiveSizeOfEncryptedTicket, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeFlushCache(IntPtr thisobj, UInt32 uAppId, ref TSteamError pError);
		public UInt32 FlushCache(UInt32 uAppId, ref TSteamError pError) { var call = this.GetFunction<NativeFlushCache>(this.Functions.FlushCache); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRepairOrDecryptCaches(IntPtr thisobj, UInt32 uAppId, Int32 iArg2, ref TSteamError pError);
		public UInt32 RepairOrDecryptCaches(UInt32 uAppId, Int32 iArg2, ref TSteamError pError) { var call = this.GetFunction<NativeRepairOrDecryptCaches>(this.Functions.RepairOrDecryptCaches); return call(this.ObjectAddress, uAppId, iArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLoadCacheFromDir(IntPtr thisobj, UInt32 uAppId, string cszPath, ref TSteamError pError);
		public UInt32 LoadCacheFromDir(UInt32 uAppId, string cszPath, ref TSteamError pError) { var call = this.GetFunction<NativeLoadCacheFromDir>(this.Functions.LoadCacheFromDir); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPath ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCacheDefaultDirectory(IntPtr thisobj, string szPath, ref TSteamError pError);
		public Int32 GetCacheDefaultDirectory(string szPath, ref TSteamError pError) { var call = this.GetFunction<NativeGetCacheDefaultDirectory>(this.Functions.GetCacheDefaultDirectory); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szPath ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetCacheDefaultDirectory(IntPtr thisobj, string cszPath, ref TSteamError pError);
		public Int32 SetCacheDefaultDirectory(string cszPath, ref TSteamError pError) { var call = this.GetFunction<NativeSetCacheDefaultDirectory>(this.Functions.SetCacheDefaultDirectory); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPath ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppDir(IntPtr thisobj, UInt32 uAppId, string szAppDir, ref TSteamError pError);
		public Int32 GetAppDir(UInt32 uAppId, string szAppDir, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppDir>(this.Functions.GetAppDir); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szAppDir ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeMoveApp(IntPtr thisobj, UInt32 uAppId, string szPath, ref TSteamError pError);
		public UInt32 MoveApp(UInt32 uAppId, string szPath, ref TSteamError pError) { var call = this.GetFunction<NativeMoveApp>(this.Functions.MoveApp); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szPath ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppCacheSize(IntPtr thisobj, UInt32 uAppId, ref UInt32 puCacheSizeInMb, ref TSteamError pError);
		public UInt32 GetAppCacheSize(UInt32 uAppId, ref UInt32 puCacheSizeInMb, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppCacheSize>(this.Functions.GetAppCacheSize); return call(this.ObjectAddress, uAppId, ref puCacheSizeInMb, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSetAppCacheSize(IntPtr thisobj, UInt32 uAppId, UInt32 uCacheSizeInMb, ref TSteamError pError);
		public UInt32 SetAppCacheSize(UInt32 uAppId, UInt32 uCacheSizeInMb, ref TSteamError pError) { var call = this.GetFunction<NativeSetAppCacheSize>(this.Functions.SetAppCacheSize); return call(this.ObjectAddress, uAppId, uCacheSizeInMb, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSetAppVersion(IntPtr thisobj, UInt32 uAppId, UInt32 uAppVersionId, ref TSteamError pError);
		public UInt32 SetAppVersion(UInt32 uAppId, UInt32 uAppVersionId, ref TSteamError pError) { var call = this.GetFunction<NativeSetAppVersion>(this.Functions.SetAppVersion); return call(this.ObjectAddress, uAppId, uAppVersionId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUninstall(IntPtr thisobj, ref TSteamError pError);
		public UInt32 Uninstall(ref TSteamError pError) { var call = this.GetFunction<NativeUninstall>(this.Functions.Uninstall); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetNotificationCallback(IntPtr thisobj, ref IntPtr pCallbackFunction, ref TSteamError pError);
		public Int32 SetNotificationCallback(ref IntPtr pCallbackFunction, ref TSteamError pError) { var call = this.GetFunction<NativeSetNotificationCallback>(this.Functions.SetNotificationCallback); return call(this.ObjectAddress, ref pCallbackFunction, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangeForgottenPassword(IntPtr thisobj, string cszArg1, string cszArg2, string cszArg3, string cszArg4, ref Int32 piArg5, ref TSteamError pError);
		public UInt32 ChangeForgottenPassword(string cszArg1, string cszArg2, string cszArg3, string cszArg4, ref Int32 piArg5, ref TSteamError pError) { var call = this.GetFunction<NativeChangeForgottenPassword>(this.Functions.ChangeForgottenPassword); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg2 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg3 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg4 ) ), ref piArg5, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestForgottenPasswordEmail(IntPtr thisobj, string cszArg1, string szArg2, ref TSteamError pError);
		public UInt32 RequestForgottenPasswordEmail(string cszArg1, string szArg2, ref TSteamError pError) { var call = this.GetFunction<NativeRequestForgottenPasswordEmail>(this.Functions.RequestForgottenPasswordEmail); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( szArg2 ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestAccountsByEmailAddressEmail(IntPtr thisobj, string cszArg1, ref TSteamError pError);
		public UInt32 RequestAccountsByEmailAddressEmail(string cszArg1, ref TSteamError pError) { var call = this.GetFunction<NativeRequestAccountsByEmailAddressEmail>(this.Functions.RequestAccountsByEmailAddressEmail); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestAccountsByCdKeyEmail(IntPtr thisobj, string cszArg1, ref TSteamError pError);
		public UInt32 RequestAccountsByCdKeyEmail(string cszArg1, ref TSteamError pError) { var call = this.GetFunction<NativeRequestAccountsByCdKeyEmail>(this.Functions.RequestAccountsByCdKeyEmail); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumAccountsWithEmailAddress(IntPtr thisobj, string cszArg1, ref UInt32 puArg2, ref TSteamError pError);
		public UInt32 GetNumAccountsWithEmailAddress(string cszArg1, ref UInt32 puArg2, ref TSteamError pError) { var call = this.GetFunction<NativeGetNumAccountsWithEmailAddress>(this.Functions.GetNumAccountsWithEmailAddress); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), ref puArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUpdateAccountBillingInfo(IntPtr thisobj, ref TSteamPaymentCardInfo pPaymentCardInfo, ref TSteamError pError);
		public UInt32 UpdateAccountBillingInfo(ref TSteamPaymentCardInfo pPaymentCardInfo, ref TSteamError pError) { var call = this.GetFunction<NativeUpdateAccountBillingInfo>(this.Functions.UpdateAccountBillingInfo); return call(this.ObjectAddress, ref pPaymentCardInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUpdateSubscriptionBillingInfo(IntPtr thisobj, UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSteamError pError);
		public UInt32 UpdateSubscriptionBillingInfo(UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSteamError pError) { var call = this.GetFunction<NativeUpdateSubscriptionBillingInfo>(this.Functions.UpdateSubscriptionBillingInfo); return call(this.ObjectAddress, uSubscriptionId, ref pSubscriptionBillingInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSponsorUrl(IntPtr thisobj, UInt32 uAppId, string szUrl, UInt32 uBufSize, ref UInt32 pUrlChars, ref TSteamError pError);
		public Int32 GetSponsorUrl(UInt32 uAppId, string szUrl, UInt32 uBufSize, ref UInt32 pUrlChars, ref TSteamError pError) { var call = this.GetFunction<NativeGetSponsorUrl>(this.Functions.GetSponsorUrl); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szUrl ) ), uBufSize, ref pUrlChars, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetContentServerInfo(IntPtr thisobj, UInt32 uArg1, ref UInt32 puArg2, ref UInt32 puArg3, ref TSteamError pError);
		public Int32 GetContentServerInfo(UInt32 uArg1, ref UInt32 puArg2, ref UInt32 puArg3, ref TSteamError pError) { var call = this.GetFunction<NativeGetContentServerInfo>(this.Functions.GetContentServerInfo); return call(this.ObjectAddress, uArg1, ref puArg2, ref puArg3, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppUpdateStats(IntPtr thisobj, UInt32 uAppId, ESteamAppUpdateStatsQueryType eSteamAppUpdateStatsQueryType, ref TSteamUpdateStats pUpdateStats, ref TSteamError pError);
		public UInt32 GetAppUpdateStats(UInt32 uAppId, ESteamAppUpdateStatsQueryType eSteamAppUpdateStatsQueryType, ref TSteamUpdateStats pUpdateStats, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppUpdateStats>(this.Functions.GetAppUpdateStats); return call(this.ObjectAddress, uAppId, eSteamAppUpdateStatsQueryType, ref pUpdateStats, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetTotalUpdateStats(IntPtr thisobj, ref TSteamUpdateStats pUpdateStats, ref TSteamError pError);
		public Int32 GetTotalUpdateStats(ref TSteamUpdateStats pUpdateStats, ref TSteamError pError) { var call = this.GetFunction<NativeGetTotalUpdateStats>(this.Functions.GetTotalUpdateStats); return call(this.ObjectAddress, ref pUpdateStats, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateCachePreloaders(IntPtr thisobj, ref TSteamError pError);
		public UInt32 CreateCachePreloaders(ref TSteamError pError) { var call = this.GetFunction<NativeCreateCachePreloaders>(this.Functions.CreateCachePreloaders); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeWin32SetMiniDumpComment(IntPtr thisobj, string cszComment);
		public void Win32SetMiniDumpComment(string cszComment) { var call = this.GetFunction<NativeWin32SetMiniDumpComment>(this.Functions.Win32SetMiniDumpComment); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszComment ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeWin32SetMiniDumpSourceControlId(IntPtr thisobj, UInt32 uSourceControlId);
		public void Win32SetMiniDumpSourceControlId(UInt32 uSourceControlId) { var call = this.GetFunction<NativeWin32SetMiniDumpSourceControlId>(this.Functions.Win32SetMiniDumpSourceControlId); call(this.ObjectAddress, uSourceControlId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeWin32SetMiniDumpEnableFullMemory(IntPtr thisobj);
		public void Win32SetMiniDumpEnableFullMemory() { var call = this.GetFunction<NativeWin32SetMiniDumpEnableFullMemory>(this.Functions.Win32SetMiniDumpEnableFullMemory); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeWin32WriteMiniDump(IntPtr thisobj, string arg1, string arg2, string arg3, string arg4, UInt32 arg5);
		public void Win32WriteMiniDump(string arg1, string arg2, string arg3, string arg4, UInt32 arg5) { var call = this.GetFunction<NativeWin32WriteMiniDump>(this.Functions.Win32WriteMiniDump); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg1 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg2 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg3 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg4 ) ), arg5); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCurrentAppId(IntPtr thisobj, ref UInt32 puAppId, ref TSteamError pError);
		public Int32 GetCurrentAppId(ref UInt32 puAppId, ref TSteamError pError) { var call = this.GetFunction<NativeGetCurrentAppId>(this.Functions.GetCurrentAppId); return call(this.ObjectAddress, ref puAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppPurchaseCountry(IntPtr thisobj, UInt32 uAppId, string szCountryCode, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSteamError pError);
		public Int32 GetAppPurchaseCountry(UInt32 uAppId, string szCountryCode, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppPurchaseCountry>(this.Functions.GetAppPurchaseCountry); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szCountryCode ) ), uBufferLength, ref puRecievedLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLocalClientVersion(IntPtr thisobj, ref UInt32 puArg1, ref UInt32 puArg2, ref TSteamError pError);
		public Int32 GetLocalClientVersion(ref UInt32 puArg1, ref UInt32 puArg2, ref TSteamError pError) { var call = this.GetFunction<NativeGetLocalClientVersion>(this.Functions.GetLocalClientVersion); return call(this.ObjectAddress, ref puArg1, ref puArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsFileNeededByCache(IntPtr thisobj, UInt32 uArg1, string cszFileName, UInt32 uArg3, ref TSteamError pError);
		public Int32 IsFileNeededByCache(UInt32 uArg1, string cszFileName, UInt32 uArg3, ref TSteamError pError) { var call = this.GetFunction<NativeIsFileNeededByCache>(this.Functions.IsFileNeededByCache); return call(this.ObjectAddress, uArg1, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszFileName ) ), uArg3, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeLoadFileToCache(IntPtr thisobj, UInt32 uArg1, string cszArg2, byte[] pcvArg3, UInt32 uArg4, UInt32 uArg5, ref TSteamError pError);
		public Int32 LoadFileToCache(UInt32 uArg1, string cszArg2, byte[] pcvArg3, UInt32 uArg4, UInt32 uArg5, ref TSteamError pError) { var call = this.GetFunction<NativeLoadFileToCache>(this.Functions.LoadFileToCache); return call(this.ObjectAddress, uArg1, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg2 ) ), pcvArg3, uArg4, uArg5, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCacheDecryptionKey(IntPtr thisobj, UInt32 uAppId, string szCacheDecryptionKey, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSteamError pError);
		public Int32 GetCacheDecryptionKey(UInt32 uAppId, string szCacheDecryptionKey, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSteamError pError) { var call = this.GetFunction<NativeGetCacheDecryptionKey>(this.Functions.GetCacheDecryptionKey); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szCacheDecryptionKey ) ), uBufferLength, ref puRecievedLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionExtendedInfo(IntPtr thisobj, UInt32 uSubscritptionId, string cszKeyName, string szKeyValue, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSteamError pError);
		public Int32 GetSubscriptionExtendedInfo(UInt32 uSubscritptionId, string cszKeyName, string szKeyValue, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSteamError pError) { var call = this.GetFunction<NativeGetSubscriptionExtendedInfo>(this.Functions.GetSubscriptionExtendedInfo); return call(this.ObjectAddress, uSubscritptionId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszKeyName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( szKeyValue ) ), uBufferLength, ref puRecievedLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionPurchaseCountry(IntPtr thisobj, UInt32 uSubscritptionId, string szCountry, UInt32 arg3, ref Int32 piRecievedLength, ref TSteamError pError);
		public Int32 GetSubscriptionPurchaseCountry(UInt32 uSubscritptionId, string szCountry, UInt32 arg3, ref Int32 piRecievedLength, ref TSteamError pError) { var call = this.GetFunction<NativeGetSubscriptionPurchaseCountry>(this.Functions.GetSubscriptionPurchaseCountry); return call(this.ObjectAddress, uSubscritptionId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szCountry ) ), arg3, ref piRecievedLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppUserDefinedRecord(IntPtr thisobj, UInt32 uAppId, ref byte[] AddEntryToKeyValueFunc, byte[] pvCKeyValue, ref TSteamError pError);
		public Int32 GetAppUserDefinedRecord(UInt32 uAppId, ref byte[] AddEntryToKeyValueFunc, byte[] pvCKeyValue, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppUserDefinedRecord>(this.Functions.GetAppUserDefinedRecord); return call(this.ObjectAddress, uAppId, ref AddEntryToKeyValueFunc, pvCKeyValue, ref pError); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteam2Bridge002VTable
	{
		public IntPtr SetSteam2Ticket;
		public IntPtr SetAccountName;
		public IntPtr SetPassword;
		public IntPtr SetAccountCreationTime;
		public IntPtr CreateProcess;
		public IntPtr GetConnectedUniverse;
		public IntPtr GetIPCountry;
		public IntPtr GetNumLicenses;
		public IntPtr GetLicensePackageID;
		public IntPtr GetLicenseTimeCreated;
		public IntPtr GetLicenseTimeNextProcess;
		public IntPtr GetLicenseMinuteLimit;
		public IntPtr GetLicenseMinutesUsed;
		public IntPtr GetLicensePaymentMethod;
		public IntPtr GetLicenseFlags;
		public IntPtr GetLicensePurchaseCountryCode;
		public IntPtr SetOfflineMode;
		public IntPtr GetCurrentSessionToken;
		public IntPtr SetCellID;
		public IntPtr SetSteam2FullASTicket;
		public IntPtr UpdateAppOwnershipTicket;
		public IntPtr GetAppOwnershipTicketLength;
		public IntPtr GetAppOwnershipTicketData;
		public IntPtr GetAppDecryptionKey;
	}
	
	public class ISteam2Bridge002 : NativeWrapper<ISteam2Bridge002VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetSteam2Ticket(IntPtr thisobj, byte[] pubTicket, Int32 cubTicket);
		public Int32 SetSteam2Ticket(byte[] pubTicket, Int32 cubTicket) { var call = this.GetFunction<NativeSetSteam2Ticket>(this.Functions.SetSteam2Ticket); return call(this.ObjectAddress, pubTicket, cubTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetAccountName(IntPtr thisobj, string szName);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetAccountName(string szName) { var call = this.GetFunction<NativeSetAccountName>(this.Functions.SetAccountName); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetPassword(IntPtr thisobj, string szPassword);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetPassword(string szPassword) { var call = this.GetFunction<NativeSetPassword>(this.Functions.SetPassword); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szPassword ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetAccountCreationTime(IntPtr thisobj, UInt32 creationTime);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetAccountCreationTime(UInt32 creationTime) { var call = this.GetFunction<NativeSetAccountCreationTime>(this.Functions.SetAccountCreationTime); return call(this.ObjectAddress, creationTime); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateProcess(IntPtr thisobj, byte[] lpVACBlob, UInt32 cbVACBlob, string arg3, string arg4, UInt32 arg5, byte[] arg6, string arg7, UInt32 arg8);
		public Int32 CreateProcess(byte[] lpVACBlob, UInt32 cbVACBlob, string arg3, string arg4, UInt32 arg5, byte[] arg6, string arg7, UInt32 arg8) { var call = this.GetFunction<NativeCreateProcess>(this.Functions.CreateProcess); return call(this.ObjectAddress, lpVACBlob, cbVACBlob, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg3 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg4 ) ), arg5, arg6, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg7 ) ), arg8); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EUniverse NativeGetConnectedUniverse(IntPtr thisobj);
		public EUniverse GetConnectedUniverse() { var call = this.GetFunction<NativeGetConnectedUniverse>(this.Functions.GetConnectedUniverse); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetIPCountry(IntPtr thisobj);
		public string GetIPCountry() { var call = this.GetFunction<NativeGetIPCountry>(this.Functions.GetIPCountry); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumLicenses(IntPtr thisobj);
		public UInt32 GetNumLicenses() { var call = this.GetFunction<NativeGetNumLicenses>(this.Functions.GetNumLicenses); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicensePackageID(IntPtr thisobj, UInt32 licenseId);
		public UInt32 GetLicensePackageID(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicensePackageID>(this.Functions.GetLicensePackageID); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicenseTimeCreated(IntPtr thisobj, UInt32 licenseId);
		public UInt32 GetLicenseTimeCreated(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicenseTimeCreated>(this.Functions.GetLicenseTimeCreated); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLicenseTimeNextProcess(IntPtr thisobj, UInt32 licenseId);
		public Int32 GetLicenseTimeNextProcess(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicenseTimeNextProcess>(this.Functions.GetLicenseTimeNextProcess); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicenseMinuteLimit(IntPtr thisobj, UInt32 licenseId);
		public UInt32 GetLicenseMinuteLimit(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicenseMinuteLimit>(this.Functions.GetLicenseMinuteLimit); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicenseMinutesUsed(IntPtr thisobj, UInt32 licenseId);
		public UInt32 GetLicenseMinutesUsed(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicenseMinutesUsed>(this.Functions.GetLicenseMinutesUsed); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPaymentMethod NativeGetLicensePaymentMethod(IntPtr thisobj, UInt32 licenseId);
		public EPaymentMethod GetLicensePaymentMethod(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicensePaymentMethod>(this.Functions.GetLicensePaymentMethod); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELicenseFlags NativeGetLicenseFlags(IntPtr thisobj, UInt32 licenseId);
		public ELicenseFlags GetLicenseFlags(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicenseFlags>(this.Functions.GetLicenseFlags); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLicensePurchaseCountryCode(IntPtr thisobj, UInt32 licenseId);
		public string GetLicensePurchaseCountryCode(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicensePurchaseCountryCode>(this.Functions.GetLicensePurchaseCountryCode); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, licenseId) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetOfflineMode(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool offlineMode);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetOfflineMode([MarshalAs(UnmanagedType.I1)] bool offlineMode) { var call = this.GetFunction<NativeSetOfflineMode>(this.Functions.SetOfflineMode); return call(this.ObjectAddress, offlineMode); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCurrentSessionToken(IntPtr thisobj);
		public Int32 GetCurrentSessionToken() { var call = this.GetFunction<NativeGetCurrentSessionToken>(this.Functions.GetCurrentSessionToken); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetCellID(IntPtr thisobj, UInt32 cellId);
		public Int32 SetCellID(UInt32 cellId) { var call = this.GetFunction<NativeSetCellID>(this.Functions.SetCellID); return call(this.ObjectAddress, cellId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetSteam2FullASTicket(IntPtr thisobj, byte[] pubTicket, Int32 cubTicket);
		public Int32 SetSteam2FullASTicket(byte[] pubTicket, Int32 cubTicket) { var call = this.GetFunction<NativeSetSteam2FullASTicket>(this.Functions.SetSteam2FullASTicket); return call(this.ObjectAddress, pubTicket, cubTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateAppOwnershipTicket(IntPtr thisobj, UInt32 appId, [MarshalAs(UnmanagedType.I1)] bool arg2);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateAppOwnershipTicket(UInt32 appId, [MarshalAs(UnmanagedType.I1)] bool arg2) { var call = this.GetFunction<NativeUpdateAppOwnershipTicket>(this.Functions.UpdateAppOwnershipTicket); return call(this.ObjectAddress, appId, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppOwnershipTicketLength(IntPtr thisobj, UInt32 appId);
		public UInt32 GetAppOwnershipTicketLength(UInt32 appId) { var call = this.GetFunction<NativeGetAppOwnershipTicketLength>(this.Functions.GetAppOwnershipTicketLength); return call(this.ObjectAddress, appId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppOwnershipTicketData(IntPtr thisobj, UInt32 appId, byte[] lpTicketData, UInt32 cubTicketData);
		public UInt32 GetAppOwnershipTicketData(UInt32 appId, byte[] lpTicketData, UInt32 cubTicketData) { var call = this.GetFunction<NativeGetAppOwnershipTicketData>(this.Functions.GetAppOwnershipTicketData); return call(this.ObjectAddress, appId, lpTicketData, cubTicketData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppDecryptionKey(IntPtr thisobj, UInt32 appId, byte[] lpDecryptionKey, UInt32 cubDecryptionKey);
		public Int32 GetAppDecryptionKey(UInt32 appId, byte[] lpDecryptionKey, UInt32 cubDecryptionKey) { var call = this.GetFunction<NativeGetAppDecryptionKey>(this.Functions.GetAppDecryptionKey); return call(this.ObjectAddress, appId, lpDecryptionKey, cubDecryptionKey); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamGameServer003VTable
	{
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr Secure;
		public IntPtr GetSteamID;
		public IntPtr GetSteam2GetEncryptionKeyToSendToNewClient;
		public IntPtr SendUserConnect;
		public IntPtr RemoveUserConnect;
		public IntPtr SendUserDisconnect;
		public IntPtr SetSpawnCount;
		public IntPtr SetServerType;
		public IntPtr UpdateStatus;
		public IntPtr CreateUnauthenticatedUser;
		public IntPtr SetUserData;
		public IntPtr UpdateSpectatorPort;
		public IntPtr SetGameType;
		public IntPtr GetUserAchievementStatus;
	}
	
	public class ISteamGameServer003 : NativeWrapper<ISteamGameServer003VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj);
		public void LogOn() { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSecure(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Secure() { var call = this.GetFunction<NativeSecure>(this.Functions.Secure); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetSteamID(IntPtr thisobj, ref UInt64 ret);
		public UInt64 GetSteamID() { UInt64 ret = 0; var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetSteam2GetEncryptionKeyToSendToNewClient(IntPtr thisobj, byte[] pvEncryptionKey, ref UInt32 pcbEncryptionKey, UInt32 cbMaxEncryptionKey);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetSteam2GetEncryptionKeyToSendToNewClient(byte[] pvEncryptionKey, ref UInt32 pcbEncryptionKey, UInt32 cbMaxEncryptionKey) { var call = this.GetFunction<NativeGetSteam2GetEncryptionKeyToSendToNewClient>(this.Functions.GetSteam2GetEncryptionKeyToSendToNewClient); return call(this.ObjectAddress, pvEncryptionKey, ref pcbEncryptionKey, cbMaxEncryptionKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendUserConnect(IntPtr thisobj, UInt32 arg1, UInt32 arg2, UInt16 uint16, byte[] arg4, UInt32 arg5);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendUserConnect(UInt32 arg1, UInt32 arg2, UInt16 uint16, byte[] arg4, UInt32 arg5) { var call = this.GetFunction<NativeSendUserConnect>(this.Functions.SendUserConnect); return call(this.ObjectAddress, arg1, arg2, uint16, arg4, arg5); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveUserConnect(IntPtr thisobj, UInt32 unUserID);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveUserConnect(UInt32 unUserID) { var call = this.GetFunction<NativeRemoveUserConnect>(this.Functions.RemoveUserConnect); return call(this.ObjectAddress, unUserID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendUserDisconnect(IntPtr thisobj, UInt64 steamID, UInt32 unUserID);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendUserDisconnect(UInt64 steamID, UInt32 unUserID) { var call = this.GetFunction<NativeSendUserDisconnect>(this.Functions.SendUserDisconnect); return call(this.ObjectAddress, steamID, unUserID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetSpawnCount(IntPtr thisobj, UInt32 ucSpawn);
		public void SetSpawnCount(UInt32 ucSpawn) { var call = this.GetFunction<NativeSetSpawnCount>(this.Functions.SetSpawnCount); call(this.ObjectAddress, ucSpawn); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetServerType(IntPtr thisobj, Int32 nGameAppId, UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 usSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetServerType(Int32 nGameAppId, UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 usSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode) { var call = this.GetFunction<NativeSetServerType>(this.Functions.SetServerType); return call(this.ObjectAddress, nGameAppId, unServerFlags, unGameIP, unGamePort, usSpectatorPort, usQueryPort, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchGameDir ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) ), bLANMode); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateStatus(IntPtr thisobj, Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateStatus(Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName) { var call = this.GetFunction<NativeUpdateStatus>(this.Functions.UpdateStatus); return call(this.ObjectAddress, cPlayers, cPlayersMax, cBotPlayers, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchServerName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pSpectatorServerName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchMapName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateUnauthenticatedUser(IntPtr thisobj, ref UInt64 pSteamID);
		public Int32 CreateUnauthenticatedUser(ref UInt64 pSteamID) { var call = this.GetFunction<NativeCreateUnauthenticatedUser>(this.Functions.CreateUnauthenticatedUser); return call(this.ObjectAddress, ref pSteamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetUserData(IntPtr thisobj, UInt64 steamIDUser, string pchPlayerName, UInt32 uScore);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetUserData(UInt64 steamIDUser, string pchPlayerName, UInt32 uScore) { var call = this.GetFunction<NativeSetUserData>(this.Functions.SetUserData); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPlayerName ) ), uScore); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateSpectatorPort(IntPtr thisobj, UInt16 unSpectatorPort);
		public void UpdateSpectatorPort(UInt16 unSpectatorPort) { var call = this.GetFunction<NativeUpdateSpectatorPort>(this.Functions.UpdateSpectatorPort); call(this.ObjectAddress, unSpectatorPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetGameType(IntPtr thisobj, string pchGameType);
		public void SetGameType(string pchGameType) { var call = this.GetFunction<NativeSetGameType>(this.Functions.SetGameType); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchGameType ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserAchievementStatus(IntPtr thisobj, UInt64 steamID, string pchAchievementName);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserAchievementStatus(UInt64 steamID, string pchAchievementName) { var call = this.GetFunction<NativeGetUserAchievementStatus>(this.Functions.GetUserAchievementStatus); return call(this.ObjectAddress, steamID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAchievementName ) )); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamGameServer004VTable
	{
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr Secure;
		public IntPtr GetSteamID;
		public IntPtr SendUserConnectAndAuthenticate;
		public IntPtr CreateUnauthenticatedUserConnection;
		public IntPtr SendUserDisconnect;
		public IntPtr UpdateUserData;
		public IntPtr SetServerType;
		public IntPtr UpdateStatus;
		public IntPtr UpdateSpectatorPort;
		public IntPtr SetGameType;
		public IntPtr GetUserAchievementStatus;
	}
	
	public class ISteamGameServer004 : NativeWrapper<ISteamGameServer004VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj);
		public void LogOn() { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSecure(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Secure() { var call = this.GetFunction<NativeSecure>(this.Functions.Secure); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetSteamID(IntPtr thisobj, ref UInt64 ret);
		public UInt64 GetSteamID() { UInt64 ret = 0; var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendUserConnectAndAuthenticate(IntPtr thisobj, UInt64 steamIDUser, UInt32 arg2, byte[] arg3, UInt32 arg4);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendUserConnectAndAuthenticate(UInt64 steamIDUser, UInt32 arg2, byte[] arg3, UInt32 arg4) { var call = this.GetFunction<NativeSendUserConnectAndAuthenticate>(this.Functions.SendUserConnectAndAuthenticate); return call(this.ObjectAddress, steamIDUser, arg2, arg3, arg4); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCreateUnauthenticatedUserConnection(IntPtr thisobj, ref UInt64 ret);
		public UInt64 CreateUnauthenticatedUserConnection() { UInt64 ret = 0; var call = this.GetFunction<NativeCreateUnauthenticatedUserConnection>(this.Functions.CreateUnauthenticatedUserConnection); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSendUserDisconnect(IntPtr thisobj, UInt64 steamIDUser);
		public void SendUserDisconnect(UInt64 steamIDUser) { var call = this.GetFunction<NativeSendUserDisconnect>(this.Functions.SendUserDisconnect); call(this.ObjectAddress, steamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateUserData(IntPtr thisobj, UInt64 steamIDUser, string pchPlayerName, UInt32 uScore);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateUserData(UInt64 steamIDUser, string pchPlayerName, UInt32 uScore) { var call = this.GetFunction<NativeUpdateUserData>(this.Functions.UpdateUserData); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPlayerName ) ), uScore); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetServerType(IntPtr thisobj, Int32 nGameAppId, UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 usSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetServerType(Int32 nGameAppId, UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 usSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode) { var call = this.GetFunction<NativeSetServerType>(this.Functions.SetServerType); return call(this.ObjectAddress, nGameAppId, unServerFlags, unGameIP, unGamePort, usSpectatorPort, usQueryPort, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchGameDir ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) ), bLANMode); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateStatus(IntPtr thisobj, Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateStatus(Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName) { var call = this.GetFunction<NativeUpdateStatus>(this.Functions.UpdateStatus); return call(this.ObjectAddress, cPlayers, cPlayersMax, cBotPlayers, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchServerName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pSpectatorServerName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchMapName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateSpectatorPort(IntPtr thisobj, UInt16 unSpectatorPort);
		public void UpdateSpectatorPort(UInt16 unSpectatorPort) { var call = this.GetFunction<NativeUpdateSpectatorPort>(this.Functions.UpdateSpectatorPort); call(this.ObjectAddress, unSpectatorPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetGameType(IntPtr thisobj, string pchGameType);
		public void SetGameType(string pchGameType) { var call = this.GetFunction<NativeSetGameType>(this.Functions.SetGameType); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchGameType ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserAchievementStatus(IntPtr thisobj, UInt64 steamID, string pchAchievementName);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserAchievementStatus(UInt64 steamID, string pchAchievementName) { var call = this.GetFunction<NativeGetUserAchievementStatus>(this.Functions.GetUserAchievementStatus); return call(this.ObjectAddress, steamID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAchievementName ) )); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamGameServer009VTable
	{
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr Secure;
		public IntPtr GetSteamID;
		public IntPtr SendUserConnectAndAuthenticate;
		public IntPtr CreateUnauthenticatedUserConnection;
		public IntPtr SendUserDisconnect;
		public IntPtr UpdateUserData;
		public IntPtr SetServerType;
		public IntPtr UpdateServerStatus;
		public IntPtr UpdateSpectatorPort;
		public IntPtr SetGameType;
		public IntPtr GetUserAchievementStatus;
		public IntPtr GetGameplayStats;
		public IntPtr RequestUserGroupStatus;
		public IntPtr GetPublicIP;
		public IntPtr SetGameData;
		public IntPtr UserHasLicenseForApp;
	}
	
	public class ISteamGameServer009 : NativeWrapper<ISteamGameServer009VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj);
		public void LogOn() { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSecure(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Secure() { var call = this.GetFunction<NativeSecure>(this.Functions.Secure); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetSteamID(IntPtr thisobj, ref UInt64 ret);
		public UInt64 GetSteamID() { UInt64 ret = 0; var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendUserConnectAndAuthenticate(IntPtr thisobj, UInt32 unIPClient, byte[] pvAuthBlob, UInt32 cubAuthBlobSize, ref UInt64 pSteamIDUser);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendUserConnectAndAuthenticate(UInt32 unIPClient, byte[] pvAuthBlob, UInt32 cubAuthBlobSize, ref UInt64 pSteamIDUser) { var call = this.GetFunction<NativeSendUserConnectAndAuthenticate>(this.Functions.SendUserConnectAndAuthenticate); return call(this.ObjectAddress, unIPClient, pvAuthBlob, cubAuthBlobSize, ref pSteamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCreateUnauthenticatedUserConnection(IntPtr thisobj, ref UInt64 ret);
		public UInt64 CreateUnauthenticatedUserConnection() { UInt64 ret = 0; var call = this.GetFunction<NativeCreateUnauthenticatedUserConnection>(this.Functions.CreateUnauthenticatedUserConnection); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSendUserDisconnect(IntPtr thisobj, UInt64 steamIDUser);
		public void SendUserDisconnect(UInt64 steamIDUser) { var call = this.GetFunction<NativeSendUserDisconnect>(this.Functions.SendUserDisconnect); call(this.ObjectAddress, steamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateUserData(IntPtr thisobj, UInt64 steamIDUser, string pchPlayerName, UInt32 uScore);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateUserData(UInt64 steamIDUser, string pchPlayerName, UInt32 uScore) { var call = this.GetFunction<NativeUpdateUserData>(this.Functions.UpdateUserData); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPlayerName ) ), uScore); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetServerType(IntPtr thisobj, UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 unSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetServerType(UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 unSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode) { var call = this.GetFunction<NativeSetServerType>(this.Functions.SetServerType); return call(this.ObjectAddress, unServerFlags, unGameIP, unGamePort, unSpectatorPort, usQueryPort, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchGameDir ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) ), bLANMode); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateServerStatus(IntPtr thisobj, Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName);
		public void UpdateServerStatus(Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName) { var call = this.GetFunction<NativeUpdateServerStatus>(this.Functions.UpdateServerStatus); call(this.ObjectAddress, cPlayers, cPlayersMax, cBotPlayers, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchServerName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pSpectatorServerName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchMapName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateSpectatorPort(IntPtr thisobj, UInt16 unSpectatorPort);
		public void UpdateSpectatorPort(UInt16 unSpectatorPort) { var call = this.GetFunction<NativeUpdateSpectatorPort>(this.Functions.UpdateSpectatorPort); call(this.ObjectAddress, unSpectatorPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetGameType(IntPtr thisobj, string pchGameType);
		public void SetGameType(string pchGameType) { var call = this.GetFunction<NativeSetGameType>(this.Functions.SetGameType); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchGameType ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserAchievementStatus(IntPtr thisobj, UInt64 steamID, string pchAchievementName);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserAchievementStatus(UInt64 steamID, string pchAchievementName) { var call = this.GetFunction<NativeGetUserAchievementStatus>(this.Functions.GetUserAchievementStatus); return call(this.ObjectAddress, steamID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAchievementName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetGameplayStats(IntPtr thisobj);
		public void GetGameplayStats() { var call = this.GetFunction<NativeGetGameplayStats>(this.Functions.GetGameplayStats); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestUserGroupStatus(IntPtr thisobj, UInt64 steamIDUser, UInt64 steamIDGroup);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestUserGroupStatus(UInt64 steamIDUser, UInt64 steamIDGroup) { var call = this.GetFunction<NativeRequestUserGroupStatus>(this.Functions.RequestUserGroupStatus); return call(this.ObjectAddress, steamIDUser, steamIDGroup); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetPublicIP(IntPtr thisobj);
		public UInt32 GetPublicIP() { var call = this.GetFunction<NativeGetPublicIP>(this.Functions.GetPublicIP); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetGameData(IntPtr thisobj, string pchGameData);
		public void SetGameData(string pchGameData) { var call = this.GetFunction<NativeSetGameData>(this.Functions.SetGameData); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchGameData ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EUserHasLicenseForAppResult NativeUserHasLicenseForApp(IntPtr thisobj, UInt64 steamID, UInt32 appID);
		public EUserHasLicenseForAppResult UserHasLicenseForApp(UInt64 steamID, UInt32 appID) { var call = this.GetFunction<NativeUserHasLicenseForApp>(this.Functions.UserHasLicenseForApp); return call(this.ObjectAddress, steamID, appID); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUtils004VTable
	{
		public IntPtr GetSecondsSinceAppActive;
		public IntPtr GetSecondsSinceComputerActive;
		public IntPtr GetConnectedUniverse;
		public IntPtr GetServerRealTime;
		public IntPtr GetIPCountry;
		public IntPtr GetImageSize;
		public IntPtr GetImageRGBA;
		public IntPtr GetCSERIPPort;
		public IntPtr GetCurrentBatteryPower;
		public IntPtr GetAppID;
		public IntPtr SetOverlayNotificationPosition;
		public IntPtr IsAPICallCompleted;
		public IntPtr GetAPICallFailureReason;
		public IntPtr GetAPICallResult;
		public IntPtr RunFrame;
		public IntPtr GetIPCCallCount;
		public IntPtr SetWarningMessageHook;
		public IntPtr IsOverlayEnabled;
	}
	
	public class ISteamUtils004 : NativeWrapper<ISteamUtils004VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetSecondsSinceAppActive(IntPtr thisobj);
		public UInt32 GetSecondsSinceAppActive() { var call = this.GetFunction<NativeGetSecondsSinceAppActive>(this.Functions.GetSecondsSinceAppActive); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetSecondsSinceComputerActive(IntPtr thisobj);
		public UInt32 GetSecondsSinceComputerActive() { var call = this.GetFunction<NativeGetSecondsSinceComputerActive>(this.Functions.GetSecondsSinceComputerActive); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EUniverse NativeGetConnectedUniverse(IntPtr thisobj);
		public EUniverse GetConnectedUniverse() { var call = this.GetFunction<NativeGetConnectedUniverse>(this.Functions.GetConnectedUniverse); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetServerRealTime(IntPtr thisobj);
		public UInt32 GetServerRealTime() { var call = this.GetFunction<NativeGetServerRealTime>(this.Functions.GetServerRealTime); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetIPCountry(IntPtr thisobj);
		public string GetIPCountry() { var call = this.GetFunction<NativeGetIPCountry>(this.Functions.GetIPCountry); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetImageSize(IntPtr thisobj, Int32 iImage, ref UInt32 pnWidth, ref UInt32 pnHeight);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetImageSize(Int32 iImage, ref UInt32 pnWidth, ref UInt32 pnHeight) { var call = this.GetFunction<NativeGetImageSize>(this.Functions.GetImageSize); return call(this.ObjectAddress, iImage, ref pnWidth, ref pnHeight); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetImageRGBA(IntPtr thisobj, Int32 iImage, byte[] pubDest, Int32 nDestBufferSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetImageRGBA(Int32 iImage, byte[] pubDest, Int32 nDestBufferSize) { var call = this.GetFunction<NativeGetImageRGBA>(this.Functions.GetImageRGBA); return call(this.ObjectAddress, iImage, pubDest, nDestBufferSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetCSERIPPort(IntPtr thisobj, ref UInt32 unIP, ref UInt16 usPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetCSERIPPort(ref UInt32 unIP, ref UInt16 usPort) { var call = this.GetFunction<NativeGetCSERIPPort>(this.Functions.GetCSERIPPort); return call(this.ObjectAddress, ref unIP, ref usPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Byte NativeGetCurrentBatteryPower(IntPtr thisobj);
		public Byte GetCurrentBatteryPower() { var call = this.GetFunction<NativeGetCurrentBatteryPower>(this.Functions.GetCurrentBatteryPower); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppID(IntPtr thisobj);
		public UInt32 GetAppID() { var call = this.GetFunction<NativeGetAppID>(this.Functions.GetAppID); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetOverlayNotificationPosition(IntPtr thisobj, ENotificationPosition eNotificationPosition);
		public void SetOverlayNotificationPosition(ENotificationPosition eNotificationPosition) { var call = this.GetFunction<NativeSetOverlayNotificationPosition>(this.Functions.SetOverlayNotificationPosition); call(this.ObjectAddress, eNotificationPosition); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsAPICallCompleted(IntPtr thisobj, UInt64 hSteamAPICall, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsAPICallCompleted(UInt64 hSteamAPICall, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed) { var call = this.GetFunction<NativeIsAPICallCompleted>(this.Functions.IsAPICallCompleted); return call(this.ObjectAddress, hSteamAPICall, ref pbFailed); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ESteamAPICallFailure NativeGetAPICallFailureReason(IntPtr thisobj, UInt64 hSteamAPICall);
		public ESteamAPICallFailure GetAPICallFailureReason(UInt64 hSteamAPICall) { var call = this.GetFunction<NativeGetAPICallFailureReason>(this.Functions.GetAPICallFailureReason); return call(this.ObjectAddress, hSteamAPICall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAPICallResult(IntPtr thisobj, UInt64 hSteamAPICall, IntPtr pCallback, Int32 cubCallback, Int32 iCallbackExpected, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetAPICallResult(UInt64 hSteamAPICall, IntPtr pCallback, Int32 cubCallback, Int32 iCallbackExpected, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed) { var call = this.GetFunction<NativeGetAPICallResult>(this.Functions.GetAPICallResult); return call(this.ObjectAddress, hSteamAPICall, pCallback, cubCallback, iCallbackExpected, ref pbFailed); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRunFrame(IntPtr thisobj);
		public void RunFrame() { var call = this.GetFunction<NativeRunFrame>(this.Functions.RunFrame); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetIPCCallCount(IntPtr thisobj);
		public UInt32 GetIPCCallCount() { var call = this.GetFunction<NativeGetIPCCallCount>(this.Functions.GetIPCCallCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetWarningMessageHook(IntPtr thisobj, ref IntPtr pFunction);
		public void SetWarningMessageHook(ref IntPtr pFunction) { var call = this.GetFunction<NativeSetWarningMessageHook>(this.Functions.SetWarningMessageHook); call(this.ObjectAddress, ref pFunction); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsOverlayEnabled(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsOverlayEnabled() { var call = this.GetFunction<NativeIsOverlayEnabled>(this.Functions.IsOverlayEnabled); return call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientNetworkingVTable
	{
		public IntPtr SendP2PPacket;
		public IntPtr IsP2PPacketAvailable;
		public IntPtr ReadP2PPacket;
		public IntPtr AcceptP2PSessionWithUser;
		public IntPtr CloseP2PSessionWithUser;
		public IntPtr CloseP2PChannelWithUser;
		public IntPtr GetP2PSessionState;
		public IntPtr AllowP2PPacketRelay;
		public IntPtr CreateListenSocket;
		public IntPtr CreateP2PConnectionSocket;
		public IntPtr CreateConnectionSocket;
		public IntPtr DestroySocket;
		public IntPtr DestroyListenSocket;
		public IntPtr SendDataOnSocket;
		public IntPtr IsDataAvailableOnSocket;
		public IntPtr RetrieveDataFromSocket;
		public IntPtr IsDataAvailable;
		public IntPtr RetrieveData;
		public IntPtr GetSocketInfo;
		public IntPtr GetListenSocketInfo;
		public IntPtr GetSocketConnectionType;
		public IntPtr GetMaxPacketSize;
	}
	
	public class IClientNetworking : NativeWrapper<IClientNetworkingVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendP2PPacket(IntPtr thisobj, UInt64 steamIDRemote, byte[] pubData, UInt32 cubData, EP2PSend eP2PSendType, Int32 iVirtualPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendP2PPacket(UInt64 steamIDRemote, byte[] pubData, UInt32 cubData, EP2PSend eP2PSendType, Int32 iVirtualPort) { var call = this.GetFunction<NativeSendP2PPacket>(this.Functions.SendP2PPacket); return call(this.ObjectAddress, steamIDRemote, pubData, cubData, eP2PSendType, iVirtualPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsP2PPacketAvailable(IntPtr thisobj, ref UInt32 pcubMsgSize, Int32 iVirtualPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsP2PPacketAvailable(ref UInt32 pcubMsgSize, Int32 iVirtualPort) { var call = this.GetFunction<NativeIsP2PPacketAvailable>(this.Functions.IsP2PPacketAvailable); return call(this.ObjectAddress, ref pcubMsgSize, iVirtualPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeReadP2PPacket(IntPtr thisobj, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize, ref UInt64 psteamIDRemote, Int32 iVirtualPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool ReadP2PPacket(byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize, ref UInt64 psteamIDRemote, Int32 iVirtualPort) { var call = this.GetFunction<NativeReadP2PPacket>(this.Functions.ReadP2PPacket); return call(this.ObjectAddress, pubDest, cubDest, ref pcubMsgSize, ref psteamIDRemote, iVirtualPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAcceptP2PSessionWithUser(IntPtr thisobj, UInt64 steamIDRemote);
		[return: MarshalAs(UnmanagedType.I1)] public bool AcceptP2PSessionWithUser(UInt64 steamIDRemote) { var call = this.GetFunction<NativeAcceptP2PSessionWithUser>(this.Functions.AcceptP2PSessionWithUser); return call(this.ObjectAddress, steamIDRemote); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeCloseP2PSessionWithUser(IntPtr thisobj, UInt64 steamIDRemote);
		[return: MarshalAs(UnmanagedType.I1)] public bool CloseP2PSessionWithUser(UInt64 steamIDRemote) { var call = this.GetFunction<NativeCloseP2PSessionWithUser>(this.Functions.CloseP2PSessionWithUser); return call(this.ObjectAddress, steamIDRemote); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeCloseP2PChannelWithUser(IntPtr thisobj, UInt64 steamIDRemote, Int32 iVirtualPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool CloseP2PChannelWithUser(UInt64 steamIDRemote, Int32 iVirtualPort) { var call = this.GetFunction<NativeCloseP2PChannelWithUser>(this.Functions.CloseP2PChannelWithUser); return call(this.ObjectAddress, steamIDRemote, iVirtualPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetP2PSessionState(IntPtr thisobj, UInt64 steamIDRemote, ref P2PSessionState_t pConnectionState);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetP2PSessionState(UInt64 steamIDRemote, ref P2PSessionState_t pConnectionState) { var call = this.GetFunction<NativeGetP2PSessionState>(this.Functions.GetP2PSessionState); return call(this.ObjectAddress, steamIDRemote, ref pConnectionState); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAllowP2PPacketRelay(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bAllow);
		[return: MarshalAs(UnmanagedType.I1)] public bool AllowP2PPacketRelay([MarshalAs(UnmanagedType.I1)] bool bAllow) { var call = this.GetFunction<NativeAllowP2PPacketRelay>(this.Functions.AllowP2PPacketRelay); return call(this.ObjectAddress, bAllow); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateListenSocket(IntPtr thisobj, Int32 nVirtualP2PPort, UInt32 nIP, UInt16 nPort, [MarshalAs(UnmanagedType.I1)] bool bAllowUseOfPacketRelay);
		public UInt32 CreateListenSocket(Int32 nVirtualP2PPort, UInt32 nIP, UInt16 nPort, [MarshalAs(UnmanagedType.I1)] bool bAllowUseOfPacketRelay) { var call = this.GetFunction<NativeCreateListenSocket>(this.Functions.CreateListenSocket); return call(this.ObjectAddress, nVirtualP2PPort, nIP, nPort, bAllowUseOfPacketRelay); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateP2PConnectionSocket(IntPtr thisobj, UInt64 steamIDTarget, Int32 nVirtualPort, Int32 nTimeoutSec, [MarshalAs(UnmanagedType.I1)] bool bAllowUseOfPacketRelay);
		public UInt32 CreateP2PConnectionSocket(UInt64 steamIDTarget, Int32 nVirtualPort, Int32 nTimeoutSec, [MarshalAs(UnmanagedType.I1)] bool bAllowUseOfPacketRelay) { var call = this.GetFunction<NativeCreateP2PConnectionSocket>(this.Functions.CreateP2PConnectionSocket); return call(this.ObjectAddress, steamIDTarget, nVirtualPort, nTimeoutSec, bAllowUseOfPacketRelay); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateConnectionSocket(IntPtr thisobj, UInt32 nIP, UInt16 nPort, Int32 nTimeoutSec);
		public UInt32 CreateConnectionSocket(UInt32 nIP, UInt16 nPort, Int32 nTimeoutSec) { var call = this.GetFunction<NativeCreateConnectionSocket>(this.Functions.CreateConnectionSocket); return call(this.ObjectAddress, nIP, nPort, nTimeoutSec); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeDestroySocket(IntPtr thisobj, UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd);
		[return: MarshalAs(UnmanagedType.I1)] public bool DestroySocket(UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd) { var call = this.GetFunction<NativeDestroySocket>(this.Functions.DestroySocket); return call(this.ObjectAddress, hSocket, bNotifyRemoteEnd); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeDestroyListenSocket(IntPtr thisobj, UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd);
		[return: MarshalAs(UnmanagedType.I1)] public bool DestroyListenSocket(UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd) { var call = this.GetFunction<NativeDestroyListenSocket>(this.Functions.DestroyListenSocket); return call(this.ObjectAddress, hSocket, bNotifyRemoteEnd); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendDataOnSocket(IntPtr thisobj, UInt32 hSocket, byte[] pubData, UInt32 cubData, [MarshalAs(UnmanagedType.I1)] bool bReliable);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendDataOnSocket(UInt32 hSocket, byte[] pubData, UInt32 cubData, [MarshalAs(UnmanagedType.I1)] bool bReliable) { var call = this.GetFunction<NativeSendDataOnSocket>(this.Functions.SendDataOnSocket); return call(this.ObjectAddress, hSocket, pubData, cubData, bReliable); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsDataAvailableOnSocket(IntPtr thisobj, UInt32 hSocket, ref UInt32 pcubMsgSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsDataAvailableOnSocket(UInt32 hSocket, ref UInt32 pcubMsgSize) { var call = this.GetFunction<NativeIsDataAvailableOnSocket>(this.Functions.IsDataAvailableOnSocket); return call(this.ObjectAddress, hSocket, ref pcubMsgSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRetrieveDataFromSocket(IntPtr thisobj, UInt32 hSocket, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool RetrieveDataFromSocket(UInt32 hSocket, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize) { var call = this.GetFunction<NativeRetrieveDataFromSocket>(this.Functions.RetrieveDataFromSocket); return call(this.ObjectAddress, hSocket, pubDest, cubDest, ref pcubMsgSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsDataAvailable(IntPtr thisobj, UInt32 hListenSocket, ref UInt32 pcubMsgSize, ref UInt32 phSocket);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsDataAvailable(UInt32 hListenSocket, ref UInt32 pcubMsgSize, ref UInt32 phSocket) { var call = this.GetFunction<NativeIsDataAvailable>(this.Functions.IsDataAvailable); return call(this.ObjectAddress, hListenSocket, ref pcubMsgSize, ref phSocket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRetrieveData(IntPtr thisobj, UInt32 hListenSocket, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize, ref UInt32 phSocket);
		[return: MarshalAs(UnmanagedType.I1)] public bool RetrieveData(UInt32 hListenSocket, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize, ref UInt32 phSocket) { var call = this.GetFunction<NativeRetrieveData>(this.Functions.RetrieveData); return call(this.ObjectAddress, hListenSocket, pubDest, cubDest, ref pcubMsgSize, ref phSocket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetSocketInfo(IntPtr thisobj, UInt32 hSocket, ref UInt64 pSteamIDRemote, ref Int32 peSocketStatus, ref UInt32 punIPRemote, ref UInt16 punPortRemote);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetSocketInfo(UInt32 hSocket, ref UInt64 pSteamIDRemote, ref Int32 peSocketStatus, ref UInt32 punIPRemote, ref UInt16 punPortRemote) { var call = this.GetFunction<NativeGetSocketInfo>(this.Functions.GetSocketInfo); return call(this.ObjectAddress, hSocket, ref pSteamIDRemote, ref peSocketStatus, ref punIPRemote, ref punPortRemote); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetListenSocketInfo(IntPtr thisobj, UInt32 hListenSocket, ref UInt32 pnIP, ref UInt16 pnPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetListenSocketInfo(UInt32 hListenSocket, ref UInt32 pnIP, ref UInt16 pnPort) { var call = this.GetFunction<NativeGetListenSocketInfo>(this.Functions.GetListenSocketInfo); return call(this.ObjectAddress, hListenSocket, ref pnIP, ref pnPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ESNetSocketConnectionType NativeGetSocketConnectionType(IntPtr thisobj, UInt32 hSocket);
		public ESNetSocketConnectionType GetSocketConnectionType(UInt32 hSocket) { var call = this.GetFunction<NativeGetSocketConnectionType>(this.Functions.GetSocketConnectionType); return call(this.ObjectAddress, hSocket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetMaxPacketSize(IntPtr thisobj, UInt32 hSocket);
		public Int32 GetMaxPacketSize(UInt32 hSocket) { var call = this.GetFunction<NativeGetMaxPacketSize>(this.Functions.GetMaxPacketSize); return call(this.ObjectAddress, hSocket); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUserStats002VTable
	{
		public IntPtr GetNumStats;
		public IntPtr GetStatName;
		public IntPtr GetStatType;
		public IntPtr GetNumAchievements;
		public IntPtr GetAchievementName;
		public IntPtr RequestCurrentStats;
		public IntPtr GetStat;
		public IntPtr GetStat1;
		public IntPtr SetStat;
		public IntPtr SetStat1;
		public IntPtr UpdateAvgRateStat;
		public IntPtr GetAchievement;
		public IntPtr SetAchievement;
		public IntPtr ClearAchievement;
		public IntPtr StoreStats;
		public IntPtr GetAchievementIcon;
		public IntPtr GetAchievementDisplayAttribute;
		public IntPtr IndicateAchievementProgress;
	}
	
	public class ISteamUserStats002 : NativeWrapper<ISteamUserStats002VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumStats(IntPtr thisobj, UInt64 nGameID);
		public UInt32 GetNumStats(UInt64 nGameID) { var call = this.GetFunction<NativeGetNumStats>(this.Functions.GetNumStats); return call(this.ObjectAddress, nGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetStatName(IntPtr thisobj, UInt64 nGameID, UInt32 iStat);
		public string GetStatName(UInt64 nGameID, UInt32 iStat) { var call = this.GetFunction<NativeGetStatName>(this.Functions.GetStatName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, nGameID, iStat) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ESteamUserStatType NativeGetStatType(IntPtr thisobj, UInt64 nGameID, string pchName);
		public ESteamUserStatType GetStatType(UInt64 nGameID, string pchName) { var call = this.GetFunction<NativeGetStatType>(this.Functions.GetStatType); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumAchievements(IntPtr thisobj, UInt64 nGameID);
		public UInt32 GetNumAchievements(UInt64 nGameID) { var call = this.GetFunction<NativeGetNumAchievements>(this.Functions.GetNumAchievements); return call(this.ObjectAddress, nGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetAchievementName(IntPtr thisobj, UInt64 nGameID, UInt32 iAchievement);
		public string GetAchievementName(UInt64 nGameID, UInt32 iAchievement) { var call = this.GetFunction<NativeGetAchievementName>(this.Functions.GetAchievementName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, nGameID, iAchievement) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestCurrentStats(IntPtr thisobj, UInt64 nGameID);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestCurrentStats(UInt64 nGameID) { var call = this.GetFunction<NativeRequestCurrentStats>(this.Functions.RequestCurrentStats); return call(this.ObjectAddress, nGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat(IntPtr thisobj, UInt64 nGameID, string pchName, ref Int32 pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(UInt64 nGameID, string pchName, ref Int32 pData) { var call = this.GetFunction<NativeGetStat>(this.Functions.GetStat); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat1(IntPtr thisobj, UInt64 nGameID, string pchName, ref float pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(UInt64 nGameID, string pchName, ref float pData) { var call = this.GetFunction<NativeGetStat1>(this.Functions.GetStat1); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat(IntPtr thisobj, UInt64 nGameID, string pchName, Int32 nData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(UInt64 nGameID, string pchName, Int32 nData) { var call = this.GetFunction<NativeSetStat>(this.Functions.SetStat); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), nData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat1(IntPtr thisobj, UInt64 nGameID, string pchName, float fData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(UInt64 nGameID, string pchName, float fData) { var call = this.GetFunction<NativeSetStat1>(this.Functions.SetStat1); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), fData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateAvgRateStat(IntPtr thisobj, UInt64 nGameID, string pchName, UInt32 nCountThisSession, double dSessionLength);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateAvgRateStat(UInt64 nGameID, string pchName, UInt32 nCountThisSession, double dSessionLength) { var call = this.GetFunction<NativeUpdateAvgRateStat>(this.Functions.UpdateAvgRateStat); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), nCountThisSession, dSessionLength); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAchievement(IntPtr thisobj, UInt64 nGameID, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetAchievement(UInt64 nGameID, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved) { var call = this.GetFunction<NativeGetAchievement>(this.Functions.GetAchievement); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pbAchieved); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetAchievement(IntPtr thisobj, UInt64 nGameID, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetAchievement(UInt64 nGameID, string pchName) { var call = this.GetFunction<NativeSetAchievement>(this.Functions.SetAchievement); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeClearAchievement(IntPtr thisobj, UInt64 nGameID, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool ClearAchievement(UInt64 nGameID, string pchName) { var call = this.GetFunction<NativeClearAchievement>(this.Functions.ClearAchievement); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeStoreStats(IntPtr thisobj, UInt64 nGameID);
		[return: MarshalAs(UnmanagedType.I1)] public bool StoreStats(UInt64 nGameID) { var call = this.GetFunction<NativeStoreStats>(this.Functions.StoreStats); return call(this.ObjectAddress, nGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAchievementIcon(IntPtr thisobj, UInt64 nGameID, string pchName);
		public Int32 GetAchievementIcon(UInt64 nGameID, string pchName) { var call = this.GetFunction<NativeGetAchievementIcon>(this.Functions.GetAchievementIcon); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetAchievementDisplayAttribute(IntPtr thisobj, UInt64 nGameID, string pchName, string pchKey);
		public string GetAchievementDisplayAttribute(UInt64 nGameID, string pchName, string pchKey) { var call = this.GetFunction<NativeGetAchievementDisplayAttribute>(this.Functions.GetAchievementDisplayAttribute); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIndicateAchievementProgress(IntPtr thisobj, UInt64 nGameID, string pchName, UInt32 nCurProgress, UInt32 nMaxProgress);
		[return: MarshalAs(UnmanagedType.I1)] public bool IndicateAchievementProgress(UInt64 nGameID, string pchName, UInt32 nCurProgress, UInt32 nMaxProgress) { var call = this.GetFunction<NativeIndicateAchievementProgress>(this.Functions.IndicateAchievementProgress); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), nCurProgress, nMaxProgress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUserStats003VTable
	{
		public IntPtr RequestCurrentStats;
		public IntPtr GetStat;
		public IntPtr GetStat1;
		public IntPtr SetStat;
		public IntPtr SetStat1;
		public IntPtr UpdateAvgRateStat;
		public IntPtr GetAchievement;
		public IntPtr SetAchievement;
		public IntPtr ClearAchievement;
		public IntPtr StoreStats;
		public IntPtr GetAchievementIcon;
		public IntPtr GetAchievementDisplayAttribute;
		public IntPtr IndicateAchievementProgress;
	}
	
	public class ISteamUserStats003 : NativeWrapper<ISteamUserStats003VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestCurrentStats(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestCurrentStats() { var call = this.GetFunction<NativeRequestCurrentStats>(this.Functions.RequestCurrentStats); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat(IntPtr thisobj, string pchName, ref Int32 pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(string pchName, ref Int32 pData) { var call = this.GetFunction<NativeGetStat>(this.Functions.GetStat); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat1(IntPtr thisobj, string pchName, ref float pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(string pchName, ref float pData) { var call = this.GetFunction<NativeGetStat1>(this.Functions.GetStat1); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat(IntPtr thisobj, string pchName, Int32 nData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(string pchName, Int32 nData) { var call = this.GetFunction<NativeSetStat>(this.Functions.SetStat); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), nData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat1(IntPtr thisobj, string pchName, float fData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(string pchName, float fData) { var call = this.GetFunction<NativeSetStat1>(this.Functions.SetStat1); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), fData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateAvgRateStat(IntPtr thisobj, string pchName, float arg2, double dSessionLength);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateAvgRateStat(string pchName, float arg2, double dSessionLength) { var call = this.GetFunction<NativeUpdateAvgRateStat>(this.Functions.UpdateAvgRateStat); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), arg2, dSessionLength); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAchievement(IntPtr thisobj, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetAchievement(string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved) { var call = this.GetFunction<NativeGetAchievement>(this.Functions.GetAchievement); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pbAchieved); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetAchievement(IntPtr thisobj, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetAchievement(string pchName) { var call = this.GetFunction<NativeSetAchievement>(this.Functions.SetAchievement); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeClearAchievement(IntPtr thisobj, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool ClearAchievement(string pchName) { var call = this.GetFunction<NativeClearAchievement>(this.Functions.ClearAchievement); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeStoreStats(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool StoreStats() { var call = this.GetFunction<NativeStoreStats>(this.Functions.StoreStats); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAchievementIcon(IntPtr thisobj, string pchName);
		public Int32 GetAchievementIcon(string pchName) { var call = this.GetFunction<NativeGetAchievementIcon>(this.Functions.GetAchievementIcon); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetAchievementDisplayAttribute(IntPtr thisobj, string pchName, string pchKey);
		public string GetAchievementDisplayAttribute(string pchName, string pchKey) { var call = this.GetFunction<NativeGetAchievementDisplayAttribute>(this.Functions.GetAchievementDisplayAttribute); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIndicateAchievementProgress(IntPtr thisobj, string pchName, UInt32 nCurProgress, UInt32 nMaxProgress);
		[return: MarshalAs(UnmanagedType.I1)] public bool IndicateAchievementProgress(string pchName, UInt32 nCurProgress, UInt32 nMaxProgress) { var call = this.GetFunction<NativeIndicateAchievementProgress>(this.Functions.IndicateAchievementProgress); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), nCurProgress, nMaxProgress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUserItems001VTable
	{
		public IntPtr LoadItems;
		public IntPtr GetItemCount;
		public IntPtr GetItemIterative;
		public IntPtr GetItemByID;
		public IntPtr GetItemAttribute;
		public IntPtr UpdateInventoryPos;
		public IntPtr DropItem;
	}
	
	public class ISteamUserItems001 : NativeWrapper<ISteamUserItems001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeLoadItems(IntPtr thisobj);
		public UInt64 LoadItems() { var call = this.GetFunction<NativeLoadItems>(this.Functions.LoadItems); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetItemCount(IntPtr thisobj);
		public UInt64 GetItemCount() { var call = this.GetFunction<NativeGetItemCount>(this.Functions.GetItemCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemIterative(IntPtr thisobj, UInt32 index, ref UInt64 UniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemIterative(UInt32 index, ref UInt64 UniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute) { var call = this.GetFunction<NativeGetItemIterative>(this.Functions.GetItemIterative); return call(this.ObjectAddress, index, ref UniqueID, ref ItemType, ref ItemLevel, ref Quality, ref Flags, ref Quantity, ref NbOfAttribute); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemByID(IntPtr thisobj, UInt64 uniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemByID(UInt64 uniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute) { var call = this.GetFunction<NativeGetItemByID>(this.Functions.GetItemByID); return call(this.ObjectAddress, uniqueID, ref ItemType, ref ItemLevel, ref Quality, ref Flags, ref Quantity, ref NbOfAttribute); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetItemAttribute(IntPtr thisobj, UInt64 uniqueID, UInt32 index, ref UInt32 attribId, ref float value);
		public void GetItemAttribute(UInt64 uniqueID, UInt32 index, ref UInt32 attribId, ref float value) { var call = this.GetFunction<NativeGetItemAttribute>(this.Functions.GetItemAttribute); call(this.ObjectAddress, uniqueID, index, ref attribId, ref value); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateInventoryPos(IntPtr thisobj, UInt64 uniqueID, UInt32 pos);
		public void UpdateInventoryPos(UInt64 uniqueID, UInt32 pos) { var call = this.GetFunction<NativeUpdateInventoryPos>(this.Functions.UpdateInventoryPos); call(this.ObjectAddress, uniqueID, pos); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeDropItem(IntPtr thisobj, UInt64 itemId);
		public void DropItem(UInt64 itemId) { var call = this.GetFunction<NativeDropItem>(this.Functions.DropItem); call(this.ObjectAddress, itemId); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUserItems003VTable
	{
		public IntPtr LoadItems;
		public IntPtr GetItemCount;
		public IntPtr GetItemIterative;
		public IntPtr GetItemByID;
		public IntPtr GetItemAttribute;
		public IntPtr UpdateInventoryPos;
		public IntPtr DropItem;
		public IntPtr GetItemBlob;
		public IntPtr SetItemBlob;
	}
	
	public class ISteamUserItems003 : NativeWrapper<ISteamUserItems003VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeLoadItems(IntPtr thisobj);
		public UInt64 LoadItems() { var call = this.GetFunction<NativeLoadItems>(this.Functions.LoadItems); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetItemCount(IntPtr thisobj);
		public UInt64 GetItemCount() { var call = this.GetFunction<NativeGetItemCount>(this.Functions.GetItemCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemIterative(IntPtr thisobj, UInt32 i, ref UInt64 UniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemIterative(UInt32 i, ref UInt64 UniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute) { var call = this.GetFunction<NativeGetItemIterative>(this.Functions.GetItemIterative); return call(this.ObjectAddress, i, ref UniqueID, ref ItemType, ref ItemLevel, ref Quality, ref Flags, ref Quantity, ref NbOfAttribute); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemByID(IntPtr thisobj, UInt64 uniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemByID(UInt64 uniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute) { var call = this.GetFunction<NativeGetItemByID>(this.Functions.GetItemByID); return call(this.ObjectAddress, uniqueID, ref ItemType, ref ItemLevel, ref Quality, ref Flags, ref Quantity, ref NbOfAttribute); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetItemAttribute(IntPtr thisobj, UInt64 uniqueID, UInt32 b, ref UInt32 c, ref float d);
		public void GetItemAttribute(UInt64 uniqueID, UInt32 b, ref UInt32 c, ref float d) { var call = this.GetFunction<NativeGetItemAttribute>(this.Functions.GetItemAttribute); call(this.ObjectAddress, uniqueID, b, ref c, ref d); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateInventoryPos(IntPtr thisobj, UInt64 uniqueID, UInt32 b);
		public void UpdateInventoryPos(UInt64 uniqueID, UInt32 b) { var call = this.GetFunction<NativeUpdateInventoryPos>(this.Functions.UpdateInventoryPos); call(this.ObjectAddress, uniqueID, b); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeDropItem(IntPtr thisobj, UInt64 itemId);
		public void DropItem(UInt64 itemId) { var call = this.GetFunction<NativeDropItem>(this.Functions.DropItem); call(this.ObjectAddress, itemId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetItemBlob(IntPtr thisobj, UInt64 itemId);
		public UInt64 GetItemBlob(UInt64 itemId) { var call = this.GetFunction<NativeGetItemBlob>(this.Functions.GetItemBlob); return call(this.ObjectAddress, itemId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeSetItemBlob(IntPtr thisobj, UInt64 itemID, byte[] blob, UInt32 arg3);
		public UInt64 SetItemBlob(UInt64 itemID, byte[] blob, UInt32 arg3) { var call = this.GetFunction<NativeSetItemBlob>(this.Functions.SetItemBlob); return call(this.ObjectAddress, itemID, blob, arg3); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUtils005VTable
	{
		public IntPtr GetSecondsSinceAppActive;
		public IntPtr GetSecondsSinceComputerActive;
		public IntPtr GetConnectedUniverse;
		public IntPtr GetServerRealTime;
		public IntPtr GetIPCountry;
		public IntPtr GetImageSize;
		public IntPtr GetImageRGBA;
		public IntPtr GetCSERIPPort;
		public IntPtr GetCurrentBatteryPower;
		public IntPtr GetAppID;
		public IntPtr SetOverlayNotificationPosition;
		public IntPtr IsAPICallCompleted;
		public IntPtr GetAPICallFailureReason;
		public IntPtr GetAPICallResult;
		public IntPtr RunFrame;
		public IntPtr GetIPCCallCount;
		public IntPtr SetWarningMessageHook;
		public IntPtr IsOverlayEnabled;
		public IntPtr BOverlayNeedsPresent;
		public IntPtr CheckFileSignature;
	}
	
	public class ISteamUtils005 : NativeWrapper<ISteamUtils005VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetSecondsSinceAppActive(IntPtr thisobj);
		public UInt32 GetSecondsSinceAppActive() { var call = this.GetFunction<NativeGetSecondsSinceAppActive>(this.Functions.GetSecondsSinceAppActive); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetSecondsSinceComputerActive(IntPtr thisobj);
		public UInt32 GetSecondsSinceComputerActive() { var call = this.GetFunction<NativeGetSecondsSinceComputerActive>(this.Functions.GetSecondsSinceComputerActive); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EUniverse NativeGetConnectedUniverse(IntPtr thisobj);
		public EUniverse GetConnectedUniverse() { var call = this.GetFunction<NativeGetConnectedUniverse>(this.Functions.GetConnectedUniverse); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetServerRealTime(IntPtr thisobj);
		public UInt32 GetServerRealTime() { var call = this.GetFunction<NativeGetServerRealTime>(this.Functions.GetServerRealTime); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetIPCountry(IntPtr thisobj);
		public string GetIPCountry() { var call = this.GetFunction<NativeGetIPCountry>(this.Functions.GetIPCountry); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetImageSize(IntPtr thisobj, Int32 iImage, ref UInt32 pnWidth, ref UInt32 pnHeight);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetImageSize(Int32 iImage, ref UInt32 pnWidth, ref UInt32 pnHeight) { var call = this.GetFunction<NativeGetImageSize>(this.Functions.GetImageSize); return call(this.ObjectAddress, iImage, ref pnWidth, ref pnHeight); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetImageRGBA(IntPtr thisobj, Int32 iImage, byte[] pubDest, Int32 nDestBufferSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetImageRGBA(Int32 iImage, byte[] pubDest, Int32 nDestBufferSize) { var call = this.GetFunction<NativeGetImageRGBA>(this.Functions.GetImageRGBA); return call(this.ObjectAddress, iImage, pubDest, nDestBufferSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetCSERIPPort(IntPtr thisobj, ref UInt32 unIP, ref UInt16 usPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetCSERIPPort(ref UInt32 unIP, ref UInt16 usPort) { var call = this.GetFunction<NativeGetCSERIPPort>(this.Functions.GetCSERIPPort); return call(this.ObjectAddress, ref unIP, ref usPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Byte NativeGetCurrentBatteryPower(IntPtr thisobj);
		public Byte GetCurrentBatteryPower() { var call = this.GetFunction<NativeGetCurrentBatteryPower>(this.Functions.GetCurrentBatteryPower); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppID(IntPtr thisobj);
		public UInt32 GetAppID() { var call = this.GetFunction<NativeGetAppID>(this.Functions.GetAppID); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetOverlayNotificationPosition(IntPtr thisobj, ENotificationPosition eNotificationPosition);
		public void SetOverlayNotificationPosition(ENotificationPosition eNotificationPosition) { var call = this.GetFunction<NativeSetOverlayNotificationPosition>(this.Functions.SetOverlayNotificationPosition); call(this.ObjectAddress, eNotificationPosition); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsAPICallCompleted(IntPtr thisobj, UInt64 hSteamAPICall, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsAPICallCompleted(UInt64 hSteamAPICall, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed) { var call = this.GetFunction<NativeIsAPICallCompleted>(this.Functions.IsAPICallCompleted); return call(this.ObjectAddress, hSteamAPICall, ref pbFailed); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ESteamAPICallFailure NativeGetAPICallFailureReason(IntPtr thisobj, UInt64 hSteamAPICall);
		public ESteamAPICallFailure GetAPICallFailureReason(UInt64 hSteamAPICall) { var call = this.GetFunction<NativeGetAPICallFailureReason>(this.Functions.GetAPICallFailureReason); return call(this.ObjectAddress, hSteamAPICall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAPICallResult(IntPtr thisobj, UInt64 hSteamAPICall, IntPtr pCallback, Int32 cubCallback, Int32 iCallbackExpected, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetAPICallResult(UInt64 hSteamAPICall, IntPtr pCallback, Int32 cubCallback, Int32 iCallbackExpected, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed) { var call = this.GetFunction<NativeGetAPICallResult>(this.Functions.GetAPICallResult); return call(this.ObjectAddress, hSteamAPICall, pCallback, cubCallback, iCallbackExpected, ref pbFailed); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRunFrame(IntPtr thisobj);
		public void RunFrame() { var call = this.GetFunction<NativeRunFrame>(this.Functions.RunFrame); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetIPCCallCount(IntPtr thisobj);
		public UInt32 GetIPCCallCount() { var call = this.GetFunction<NativeGetIPCCallCount>(this.Functions.GetIPCCallCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetWarningMessageHook(IntPtr thisobj, ref IntPtr pFunction);
		public void SetWarningMessageHook(ref IntPtr pFunction) { var call = this.GetFunction<NativeSetWarningMessageHook>(this.Functions.SetWarningMessageHook); call(this.ObjectAddress, ref pFunction); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsOverlayEnabled(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsOverlayEnabled() { var call = this.GetFunction<NativeIsOverlayEnabled>(this.Functions.IsOverlayEnabled); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeBOverlayNeedsPresent(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool BOverlayNeedsPresent() { var call = this.GetFunction<NativeBOverlayNeedsPresent>(this.Functions.BOverlayNeedsPresent); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeCheckFileSignature(IntPtr thisobj, string szFileName);
		public UInt64 CheckFileSignature(string szFileName) { var call = this.GetFunction<NativeCheckFileSignature>(this.Functions.CheckFileSignature); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szFileName ) )); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamClient006VTable
	{
		public IntPtr CreateSteamPipe;
		public IntPtr ReleaseSteamPipe;
		public IntPtr CreateGlobalUser;
		public IntPtr ConnectToGlobalUser;
		public IntPtr CreateLocalUser;
		public IntPtr ReleaseUser;
		public IntPtr GetISteamUser;
		public IntPtr GetIVAC;
		public IntPtr GetISteamGameServer;
		public IntPtr SetLocalIPBinding;
		public IntPtr GetUniverseName;
		public IntPtr GetISteamFriends;
		public IntPtr GetISteamUtils;
		public IntPtr GetISteamBilling;
		public IntPtr GetISteamMatchmaking;
		public IntPtr GetISteamContentServer;
		public IntPtr GetISteamApps;
		public IntPtr GetISteamMasterServerUpdater;
		public IntPtr GetISteamMatchmakingServers;
		public IntPtr RunFrame;
		public IntPtr GetIPCCallCount;
	}
	
	public class ISteamClient006 : NativeWrapper<ISteamClient006VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateSteamPipe(IntPtr thisobj);
		public Int32 CreateSteamPipe() { var call = this.GetFunction<NativeCreateSteamPipe>(this.Functions.CreateSteamPipe); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeReleaseSteamPipe(IntPtr thisobj, Int32 hSteamPipe);
		[return: MarshalAs(UnmanagedType.I1)] public bool ReleaseSteamPipe(Int32 hSteamPipe) { var call = this.GetFunction<NativeReleaseSteamPipe>(this.Functions.ReleaseSteamPipe); return call(this.ObjectAddress, hSteamPipe); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateGlobalUser(IntPtr thisobj, ref Int32 phSteamPipe);
		public Int32 CreateGlobalUser(ref Int32 phSteamPipe) { var call = this.GetFunction<NativeCreateGlobalUser>(this.Functions.CreateGlobalUser); return call(this.ObjectAddress, ref phSteamPipe); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeConnectToGlobalUser(IntPtr thisobj, Int32 hSteamPipe);
		public Int32 ConnectToGlobalUser(Int32 hSteamPipe) { var call = this.GetFunction<NativeConnectToGlobalUser>(this.Functions.ConnectToGlobalUser); return call(this.ObjectAddress, hSteamPipe); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateLocalUser(IntPtr thisobj, ref Int32 phSteamPipe);
		public Int32 CreateLocalUser(ref Int32 phSteamPipe) { var call = this.GetFunction<NativeCreateLocalUser>(this.Functions.CreateLocalUser); return call(this.ObjectAddress, ref phSteamPipe); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeReleaseUser(IntPtr thisobj, Int32 hSteamPipe, Int32 hUser);
		public void ReleaseUser(Int32 hSteamPipe, Int32 hUser) { var call = this.GetFunction<NativeReleaseUser>(this.Functions.ReleaseUser); call(this.ObjectAddress, hSteamPipe, hUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamUser(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamUser(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamUser>(this.Functions.GetISteamUser); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetIVAC(IntPtr thisobj, Int32 hSteamUser);
		public IntPtr GetIVAC(Int32 hSteamUser) { var call = this.GetFunction<NativeGetIVAC>(this.Functions.GetIVAC); return call(this.ObjectAddress, hSteamUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamGameServer(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamGameServer(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamGameServer>(this.Functions.GetISteamGameServer); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLocalIPBinding(IntPtr thisobj, UInt32 unIP, UInt16 usPort);
		public void SetLocalIPBinding(UInt32 unIP, UInt16 usPort) { var call = this.GetFunction<NativeSetLocalIPBinding>(this.Functions.SetLocalIPBinding); call(this.ObjectAddress, unIP, usPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetUniverseName(IntPtr thisobj, EUniverse eUniverse);
		public string GetUniverseName(EUniverse eUniverse) { var call = this.GetFunction<NativeGetUniverseName>(this.Functions.GetUniverseName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, eUniverse) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamFriends(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamFriends(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamFriends>(this.Functions.GetISteamFriends); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamUtils(IntPtr thisobj, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamUtils(Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamUtils>(this.Functions.GetISteamUtils); return call(this.ObjectAddress, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamBilling(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamBilling(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamBilling>(this.Functions.GetISteamBilling); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamMatchmaking(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamMatchmaking(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamMatchmaking>(this.Functions.GetISteamMatchmaking); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamContentServer(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamContentServer(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamContentServer>(this.Functions.GetISteamContentServer); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamApps(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamApps(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamApps>(this.Functions.GetISteamApps); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamMasterServerUpdater(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamMasterServerUpdater(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamMasterServerUpdater>(this.Functions.GetISteamMasterServerUpdater); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamMatchmakingServers(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamMatchmakingServers(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamMatchmakingServers>(this.Functions.GetISteamMatchmakingServers); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRunFrame(IntPtr thisobj);
		public void RunFrame() { var call = this.GetFunction<NativeRunFrame>(this.Functions.RunFrame); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetIPCCallCount(IntPtr thisobj);
		public UInt32 GetIPCCallCount() { var call = this.GetFunction<NativeGetIPCCallCount>(this.Functions.GetIPCCallCount); return call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientMasterServerUpdaterVTable
	{
		public IntPtr SetActive;
		public IntPtr SetHeartbeatInterval;
		public IntPtr HandleIncomingPacket;
		public IntPtr GetNextOutgoingPacket;
		public IntPtr SetBasicServerData;
		public IntPtr ClearAllKeyValues;
		public IntPtr SetKeyValue;
		public IntPtr NotifyShutdown;
		public IntPtr WasRestartRequested;
		public IntPtr ForceHeartbeat;
		public IntPtr AddMasterServer;
		public IntPtr RemoveMasterServer;
		public IntPtr GetNumMasterServers;
		public IntPtr GetMasterServerAddress;
	}
	
	public class IClientMasterServerUpdater : NativeWrapper<IClientMasterServerUpdaterVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetActive(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bActive);
		public void SetActive([MarshalAs(UnmanagedType.I1)] bool bActive) { var call = this.GetFunction<NativeSetActive>(this.Functions.SetActive); call(this.ObjectAddress, bActive); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetHeartbeatInterval(IntPtr thisobj, Int32 iHeartbeatInterval);
		public void SetHeartbeatInterval(Int32 iHeartbeatInterval) { var call = this.GetFunction<NativeSetHeartbeatInterval>(this.Functions.SetHeartbeatInterval); call(this.ObjectAddress, iHeartbeatInterval); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeHandleIncomingPacket(IntPtr thisobj, byte[] pData, Int32 cbData, UInt32 srcIP, UInt16 srcPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool HandleIncomingPacket(byte[] pData, Int32 cbData, UInt32 srcIP, UInt16 srcPort) { var call = this.GetFunction<NativeHandleIncomingPacket>(this.Functions.HandleIncomingPacket); return call(this.ObjectAddress, pData, cbData, srcIP, srcPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetNextOutgoingPacket(IntPtr thisobj, byte[] pOut, Int32 cbMaxOut, ref UInt32 pNetAdr, ref UInt16 pPort);
		public Int32 GetNextOutgoingPacket(byte[] pOut, Int32 cbMaxOut, ref UInt32 pNetAdr, ref UInt16 pPort) { var call = this.GetFunction<NativeGetNextOutgoingPacket>(this.Functions.GetNextOutgoingPacket); return call(this.ObjectAddress, pOut, cbMaxOut, ref pNetAdr, ref pPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetBasicServerData(IntPtr thisobj, UInt16 nProtocolVersion, [MarshalAs(UnmanagedType.I1)] bool bDedicatedServer, string pRegionName, string pProductName, UInt16 nMaxReportedClients, [MarshalAs(UnmanagedType.I1)] bool bPasswordProtected, string pGameDescription);
		public void SetBasicServerData(UInt16 nProtocolVersion, [MarshalAs(UnmanagedType.I1)] bool bDedicatedServer, string pRegionName, string pProductName, UInt16 nMaxReportedClients, [MarshalAs(UnmanagedType.I1)] bool bPasswordProtected, string pGameDescription) { var call = this.GetFunction<NativeSetBasicServerData>(this.Functions.SetBasicServerData); call(this.ObjectAddress, nProtocolVersion, bDedicatedServer, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pRegionName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pProductName ) ), nMaxReportedClients, bPasswordProtected, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pGameDescription ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeClearAllKeyValues(IntPtr thisobj);
		public void ClearAllKeyValues() { var call = this.GetFunction<NativeClearAllKeyValues>(this.Functions.ClearAllKeyValues); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetKeyValue(IntPtr thisobj, string pKey, string pValue);
		public void SetKeyValue(string pKey, string pValue) { var call = this.GetFunction<NativeSetKeyValue>(this.Functions.SetKeyValue); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeNotifyShutdown(IntPtr thisobj);
		public void NotifyShutdown() { var call = this.GetFunction<NativeNotifyShutdown>(this.Functions.NotifyShutdown); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeWasRestartRequested(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool WasRestartRequested() { var call = this.GetFunction<NativeWasRestartRequested>(this.Functions.WasRestartRequested); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeForceHeartbeat(IntPtr thisobj);
		public void ForceHeartbeat() { var call = this.GetFunction<NativeForceHeartbeat>(this.Functions.ForceHeartbeat); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAddMasterServer(IntPtr thisobj, string pServerAddress);
		[return: MarshalAs(UnmanagedType.I1)] public bool AddMasterServer(string pServerAddress) { var call = this.GetFunction<NativeAddMasterServer>(this.Functions.AddMasterServer); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pServerAddress ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveMasterServer(IntPtr thisobj, string pServerAddress);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveMasterServer(string pServerAddress) { var call = this.GetFunction<NativeRemoveMasterServer>(this.Functions.RemoveMasterServer); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pServerAddress ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetNumMasterServers(IntPtr thisobj);
		public Int32 GetNumMasterServers() { var call = this.GetFunction<NativeGetNumMasterServers>(this.Functions.GetNumMasterServers); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetMasterServerAddress(IntPtr thisobj, Int32 iServer, string pOut, Int32 outBufferSize);
		public Int32 GetMasterServerAddress(Int32 iServer, string pOut, Int32 outBufferSize) { var call = this.GetFunction<NativeGetMasterServerAddress>(this.Functions.GetMasterServerAddress); return call(this.ObjectAddress, iServer, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pOut ) ), outBufferSize); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamBilling001VTable
	{
		public IntPtr SetBillingAddress;
		public IntPtr GetBillingAddress;
		public IntPtr SetShippingAddress;
		public IntPtr GetShippingAddress;
		public IntPtr GetFinalPrice;
		public IntPtr SetCardInfo;
		public IntPtr GetCardInfo;
		public IntPtr Purchase;
	}
	
	public class ISteamBilling001 : NativeWrapper<ISteamBilling001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetBillingAddress(IntPtr thisobj, string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetBillingAddress(string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone) { var call = this.GetFunction<NativeSetBillingAddress>(this.Functions.SetBillingAddress); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAddress1 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAddress2 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCity ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPostcode ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchState ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCountry ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPhone ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetBillingAddress(IntPtr thisobj, string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetBillingAddress(string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone) { var call = this.GetFunction<NativeGetBillingAddress>(this.Functions.GetBillingAddress); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAddress1 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAddress2 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCity ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPostcode ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchState ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCountry ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPhone ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetShippingAddress(IntPtr thisobj, string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetShippingAddress(string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone) { var call = this.GetFunction<NativeSetShippingAddress>(this.Functions.SetShippingAddress); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAddress1 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAddress2 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCity ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPostcode ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchState ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCountry ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPhone ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetShippingAddress(IntPtr thisobj, string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetShippingAddress(string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone) { var call = this.GetFunction<NativeGetShippingAddress>(this.Functions.GetShippingAddress); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAddress1 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAddress2 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCity ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPostcode ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchState ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCountry ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPhone ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFinalPrice(IntPtr thisobj, Int32 nPackageID);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFinalPrice(Int32 nPackageID) { var call = this.GetFunction<NativeGetFinalPrice>(this.Functions.GetFinalPrice); return call(this.ObjectAddress, nPackageID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetCardInfo(IntPtr thisobj, ECreditCardType eCreditCardType, string pchCardNumber, string pchCardHolderName, string pchCardExpYear, string pchCardExpMonth, string pchCardCVV2);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetCardInfo(ECreditCardType eCreditCardType, string pchCardNumber, string pchCardHolderName, string pchCardExpYear, string pchCardExpMonth, string pchCardCVV2) { var call = this.GetFunction<NativeSetCardInfo>(this.Functions.SetCardInfo); return call(this.ObjectAddress, eCreditCardType, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCardNumber ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCardHolderName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCardExpYear ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCardExpMonth ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCardCVV2 ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetCardInfo(IntPtr thisobj, ref ECreditCardType eCreditCardType, string pchCardNumber, string pchCardHolderName, string pchCardExpYear, string pchCardExpMonth, string pchCardCVV2);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetCardInfo(ref ECreditCardType eCreditCardType, string pchCardNumber, string pchCardHolderName, string pchCardExpYear, string pchCardExpMonth, string pchCardCVV2) { var call = this.GetFunction<NativeGetCardInfo>(this.Functions.GetCardInfo); return call(this.ObjectAddress, ref eCreditCardType, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCardNumber ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCardHolderName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCardExpYear ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCardExpMonth ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCardCVV2 ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativePurchase(IntPtr thisobj, Int32 nPackageID, Int32 nExpectedCostCents, UInt64 gidCardID, [MarshalAs(UnmanagedType.I1)] bool bStoreCardInfo);
		[return: MarshalAs(UnmanagedType.I1)] public bool Purchase(Int32 nPackageID, Int32 nExpectedCostCents, UInt64 gidCardID, [MarshalAs(UnmanagedType.I1)] bool bStoreCardInfo) { var call = this.GetFunction<NativePurchase>(this.Functions.Purchase); return call(this.ObjectAddress, nPackageID, nExpectedCostCents, gidCardID, bStoreCardInfo); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamClient007VTable
	{
		public IntPtr CreateSteamPipe;
		public IntPtr ReleaseSteamPipe;
		public IntPtr ConnectToGlobalUser;
		public IntPtr CreateLocalUser;
		public IntPtr ReleaseUser;
		public IntPtr GetISteamUser;
		public IntPtr GetISteamGameServer;
		public IntPtr SetLocalIPBinding;
		public IntPtr GetISteamFriends;
		public IntPtr GetISteamUtils;
		public IntPtr GetISteamMatchmaking;
		public IntPtr GetISteamContentServer;
		public IntPtr GetISteamMasterServerUpdater;
		public IntPtr GetISteamMatchmakingServers;
		public IntPtr GetISteamGenericInterface;
		public IntPtr RunFrame;
		public IntPtr GetIPCCallCount;
		public IntPtr GetISteamUserStats;
		public IntPtr GetISteamApps;
		public IntPtr GetISteamNetworking;
		public IntPtr SetWarningMessageHook;
		public IntPtr GetISteamRemoteStorage;
	}
	
	public class ISteamClient007 : NativeWrapper<ISteamClient007VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateSteamPipe(IntPtr thisobj);
		public Int32 CreateSteamPipe() { var call = this.GetFunction<NativeCreateSteamPipe>(this.Functions.CreateSteamPipe); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeReleaseSteamPipe(IntPtr thisobj, Int32 hSteamPipe);
		[return: MarshalAs(UnmanagedType.I1)] public bool ReleaseSteamPipe(Int32 hSteamPipe) { var call = this.GetFunction<NativeReleaseSteamPipe>(this.Functions.ReleaseSteamPipe); return call(this.ObjectAddress, hSteamPipe); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeConnectToGlobalUser(IntPtr thisobj, Int32 hSteamPipe);
		public Int32 ConnectToGlobalUser(Int32 hSteamPipe) { var call = this.GetFunction<NativeConnectToGlobalUser>(this.Functions.ConnectToGlobalUser); return call(this.ObjectAddress, hSteamPipe); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateLocalUser(IntPtr thisobj, ref Int32 phSteamPipe);
		public Int32 CreateLocalUser(ref Int32 phSteamPipe) { var call = this.GetFunction<NativeCreateLocalUser>(this.Functions.CreateLocalUser); return call(this.ObjectAddress, ref phSteamPipe); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeReleaseUser(IntPtr thisobj, Int32 hSteamPipe, Int32 hUser);
		public void ReleaseUser(Int32 hSteamPipe, Int32 hUser) { var call = this.GetFunction<NativeReleaseUser>(this.Functions.ReleaseUser); call(this.ObjectAddress, hSteamPipe, hUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamUser(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamUser(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamUser>(this.Functions.GetISteamUser); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamGameServer(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamGameServer(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamGameServer>(this.Functions.GetISteamGameServer); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLocalIPBinding(IntPtr thisobj, UInt32 unIP, UInt16 usPort);
		public void SetLocalIPBinding(UInt32 unIP, UInt16 usPort) { var call = this.GetFunction<NativeSetLocalIPBinding>(this.Functions.SetLocalIPBinding); call(this.ObjectAddress, unIP, usPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamFriends(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamFriends(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamFriends>(this.Functions.GetISteamFriends); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamUtils(IntPtr thisobj, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamUtils(Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamUtils>(this.Functions.GetISteamUtils); return call(this.ObjectAddress, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamMatchmaking(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamMatchmaking(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamMatchmaking>(this.Functions.GetISteamMatchmaking); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamContentServer(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamContentServer(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamContentServer>(this.Functions.GetISteamContentServer); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamMasterServerUpdater(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamMasterServerUpdater(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamMasterServerUpdater>(this.Functions.GetISteamMasterServerUpdater); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamMatchmakingServers(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamMatchmakingServers(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamMatchmakingServers>(this.Functions.GetISteamMatchmakingServers); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamGenericInterface(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamGenericInterface(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamGenericInterface>(this.Functions.GetISteamGenericInterface); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRunFrame(IntPtr thisobj);
		public void RunFrame() { var call = this.GetFunction<NativeRunFrame>(this.Functions.RunFrame); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetIPCCallCount(IntPtr thisobj);
		public UInt32 GetIPCCallCount() { var call = this.GetFunction<NativeGetIPCCallCount>(this.Functions.GetIPCCallCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamUserStats(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamUserStats(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamUserStats>(this.Functions.GetISteamUserStats); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamApps(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamApps(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamApps>(this.Functions.GetISteamApps); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamNetworking(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamNetworking(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamNetworking>(this.Functions.GetISteamNetworking); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetWarningMessageHook(IntPtr thisobj, ref IntPtr pFunction);
		public void SetWarningMessageHook(ref IntPtr pFunction) { var call = this.GetFunction<NativeSetWarningMessageHook>(this.Functions.SetWarningMessageHook); call(this.ObjectAddress, ref pFunction); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamRemoteStorage(IntPtr thisobj, Int32 hSteamuser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamRemoteStorage(Int32 hSteamuser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamRemoteStorage>(this.Functions.GetISteamRemoteStorage); return call(this.ObjectAddress, hSteamuser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamClient008VTable
	{
		public IntPtr CreateSteamPipe;
		public IntPtr ReleaseSteamPipe;
		public IntPtr ConnectToGlobalUser;
		public IntPtr CreateLocalUser;
		public IntPtr ReleaseUser;
		public IntPtr GetISteamUser;
		public IntPtr GetISteamGameServer;
		public IntPtr SetLocalIPBinding;
		public IntPtr GetISteamFriends;
		public IntPtr GetISteamUtils;
		public IntPtr GetISteamMatchmaking;
		public IntPtr GetISteamMasterServerUpdater;
		public IntPtr GetISteamMatchmakingServers;
		public IntPtr GetISteamGenericInterface;
		public IntPtr GetISteamUserStats;
		public IntPtr GetISteamApps;
		public IntPtr GetISteamNetworking;
		public IntPtr GetISteamRemoteStorage;
		public IntPtr RunFrame;
		public IntPtr GetIPCCallCount;
		public IntPtr SetWarningMessageHook;
	}
	
	public class ISteamClient008 : NativeWrapper<ISteamClient008VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateSteamPipe(IntPtr thisobj);
		public Int32 CreateSteamPipe() { var call = this.GetFunction<NativeCreateSteamPipe>(this.Functions.CreateSteamPipe); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeReleaseSteamPipe(IntPtr thisobj, Int32 hSteamPipe);
		[return: MarshalAs(UnmanagedType.I1)] public bool ReleaseSteamPipe(Int32 hSteamPipe) { var call = this.GetFunction<NativeReleaseSteamPipe>(this.Functions.ReleaseSteamPipe); return call(this.ObjectAddress, hSteamPipe); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeConnectToGlobalUser(IntPtr thisobj, Int32 hSteamPipe);
		public Int32 ConnectToGlobalUser(Int32 hSteamPipe) { var call = this.GetFunction<NativeConnectToGlobalUser>(this.Functions.ConnectToGlobalUser); return call(this.ObjectAddress, hSteamPipe); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateLocalUser(IntPtr thisobj, ref Int32 phSteamPipe, EAccountType eAccountType);
		public Int32 CreateLocalUser(ref Int32 phSteamPipe, EAccountType eAccountType) { var call = this.GetFunction<NativeCreateLocalUser>(this.Functions.CreateLocalUser); return call(this.ObjectAddress, ref phSteamPipe, eAccountType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeReleaseUser(IntPtr thisobj, Int32 hSteamPipe, Int32 hUser);
		public void ReleaseUser(Int32 hSteamPipe, Int32 hUser) { var call = this.GetFunction<NativeReleaseUser>(this.Functions.ReleaseUser); call(this.ObjectAddress, hSteamPipe, hUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamUser(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamUser(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamUser>(this.Functions.GetISteamUser); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamGameServer(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamGameServer(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamGameServer>(this.Functions.GetISteamGameServer); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLocalIPBinding(IntPtr thisobj, UInt32 unIP, UInt16 usPort);
		public void SetLocalIPBinding(UInt32 unIP, UInt16 usPort) { var call = this.GetFunction<NativeSetLocalIPBinding>(this.Functions.SetLocalIPBinding); call(this.ObjectAddress, unIP, usPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamFriends(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamFriends(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamFriends>(this.Functions.GetISteamFriends); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamUtils(IntPtr thisobj, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamUtils(Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamUtils>(this.Functions.GetISteamUtils); return call(this.ObjectAddress, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamMatchmaking(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamMatchmaking(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamMatchmaking>(this.Functions.GetISteamMatchmaking); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamMasterServerUpdater(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamMasterServerUpdater(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamMasterServerUpdater>(this.Functions.GetISteamMasterServerUpdater); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamMatchmakingServers(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamMatchmakingServers(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamMatchmakingServers>(this.Functions.GetISteamMatchmakingServers); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamGenericInterface(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamGenericInterface(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamGenericInterface>(this.Functions.GetISteamGenericInterface); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamUserStats(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamUserStats(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamUserStats>(this.Functions.GetISteamUserStats); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamApps(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamApps(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamApps>(this.Functions.GetISteamApps); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamNetworking(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamNetworking(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamNetworking>(this.Functions.GetISteamNetworking); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamRemoteStorage(IntPtr thisobj, Int32 hSteamuser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamRemoteStorage(Int32 hSteamuser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamRemoteStorage>(this.Functions.GetISteamRemoteStorage); return call(this.ObjectAddress, hSteamuser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRunFrame(IntPtr thisobj);
		public void RunFrame() { var call = this.GetFunction<NativeRunFrame>(this.Functions.RunFrame); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetIPCCallCount(IntPtr thisobj);
		public UInt32 GetIPCCallCount() { var call = this.GetFunction<NativeGetIPCCallCount>(this.Functions.GetIPCCallCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetWarningMessageHook(IntPtr thisobj, ref IntPtr pFunction);
		public void SetWarningMessageHook(ref IntPtr pFunction) { var call = this.GetFunction<NativeSetWarningMessageHook>(this.Functions.SetWarningMessageHook); call(this.ObjectAddress, ref pFunction); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamClient009VTable
	{
		public IntPtr CreateSteamPipe;
		public IntPtr ReleaseSteamPipe;
		public IntPtr ConnectToGlobalUser;
		public IntPtr CreateLocalUser;
		public IntPtr ReleaseUser;
		public IntPtr GetISteamUser;
		public IntPtr GetISteamGameServer;
		public IntPtr SetLocalIPBinding;
		public IntPtr GetISteamFriends;
		public IntPtr GetISteamUtils;
		public IntPtr GetISteamMatchmaking;
		public IntPtr GetISteamMasterServerUpdater;
		public IntPtr GetISteamMatchmakingServers;
		public IntPtr GetISteamGenericInterface;
		public IntPtr GetISteamUserStats;
		public IntPtr GetISteamGameServerStats;
		public IntPtr GetISteamApps;
		public IntPtr GetISteamNetworking;
		public IntPtr GetISteamRemoteStorage;
		public IntPtr RunFrame;
		public IntPtr GetIPCCallCount;
		public IntPtr SetWarningMessageHook;
	}
	
	public class ISteamClient009 : NativeWrapper<ISteamClient009VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateSteamPipe(IntPtr thisobj);
		public Int32 CreateSteamPipe() { var call = this.GetFunction<NativeCreateSteamPipe>(this.Functions.CreateSteamPipe); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeReleaseSteamPipe(IntPtr thisobj, Int32 hSteamPipe);
		[return: MarshalAs(UnmanagedType.I1)] public bool ReleaseSteamPipe(Int32 hSteamPipe) { var call = this.GetFunction<NativeReleaseSteamPipe>(this.Functions.ReleaseSteamPipe); return call(this.ObjectAddress, hSteamPipe); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeConnectToGlobalUser(IntPtr thisobj, Int32 hSteamPipe);
		public Int32 ConnectToGlobalUser(Int32 hSteamPipe) { var call = this.GetFunction<NativeConnectToGlobalUser>(this.Functions.ConnectToGlobalUser); return call(this.ObjectAddress, hSteamPipe); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateLocalUser(IntPtr thisobj, ref Int32 phSteamPipe, EAccountType eAccountType);
		public Int32 CreateLocalUser(ref Int32 phSteamPipe, EAccountType eAccountType) { var call = this.GetFunction<NativeCreateLocalUser>(this.Functions.CreateLocalUser); return call(this.ObjectAddress, ref phSteamPipe, eAccountType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeReleaseUser(IntPtr thisobj, Int32 hSteamPipe, Int32 hUser);
		public void ReleaseUser(Int32 hSteamPipe, Int32 hUser) { var call = this.GetFunction<NativeReleaseUser>(this.Functions.ReleaseUser); call(this.ObjectAddress, hSteamPipe, hUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamUser(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamUser(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamUser>(this.Functions.GetISteamUser); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamGameServer(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamGameServer(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamGameServer>(this.Functions.GetISteamGameServer); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLocalIPBinding(IntPtr thisobj, UInt32 unIP, UInt16 usPort);
		public void SetLocalIPBinding(UInt32 unIP, UInt16 usPort) { var call = this.GetFunction<NativeSetLocalIPBinding>(this.Functions.SetLocalIPBinding); call(this.ObjectAddress, unIP, usPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamFriends(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamFriends(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamFriends>(this.Functions.GetISteamFriends); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamUtils(IntPtr thisobj, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamUtils(Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamUtils>(this.Functions.GetISteamUtils); return call(this.ObjectAddress, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamMatchmaking(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamMatchmaking(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamMatchmaking>(this.Functions.GetISteamMatchmaking); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamMasterServerUpdater(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamMasterServerUpdater(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamMasterServerUpdater>(this.Functions.GetISteamMasterServerUpdater); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamMatchmakingServers(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamMatchmakingServers(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamMatchmakingServers>(this.Functions.GetISteamMatchmakingServers); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamGenericInterface(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamGenericInterface(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamGenericInterface>(this.Functions.GetISteamGenericInterface); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamUserStats(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamUserStats(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamUserStats>(this.Functions.GetISteamUserStats); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamGameServerStats(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamGameServerStats(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamGameServerStats>(this.Functions.GetISteamGameServerStats); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamApps(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamApps(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamApps>(this.Functions.GetISteamApps); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamNetworking(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamNetworking(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamNetworking>(this.Functions.GetISteamNetworking); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamRemoteStorage(IntPtr thisobj, Int32 hSteamuser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamRemoteStorage(Int32 hSteamuser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamRemoteStorage>(this.Functions.GetISteamRemoteStorage); return call(this.ObjectAddress, hSteamuser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRunFrame(IntPtr thisobj);
		public void RunFrame() { var call = this.GetFunction<NativeRunFrame>(this.Functions.RunFrame); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetIPCCallCount(IntPtr thisobj);
		public UInt32 GetIPCCallCount() { var call = this.GetFunction<NativeGetIPCCallCount>(this.Functions.GetIPCCallCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetWarningMessageHook(IntPtr thisobj, ref IntPtr pFunction);
		public void SetWarningMessageHook(ref IntPtr pFunction) { var call = this.GetFunction<NativeSetWarningMessageHook>(this.Functions.SetWarningMessageHook); call(this.ObjectAddress, ref pFunction); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamClient010VTable
	{
		public IntPtr CreateSteamPipe;
		public IntPtr ReleaseSteamPipe;
		public IntPtr ConnectToGlobalUser;
		public IntPtr CreateLocalUser;
		public IntPtr ReleaseUser;
		public IntPtr GetISteamUser;
		public IntPtr GetISteamGameServer;
		public IntPtr SetLocalIPBinding;
		public IntPtr GetISteamFriends;
		public IntPtr GetISteamUtils;
		public IntPtr GetISteamMatchmaking;
		public IntPtr GetISteamMasterServerUpdater;
		public IntPtr GetISteamMatchmakingServers;
		public IntPtr GetISteamGenericInterface;
		public IntPtr GetISteamUserStats;
		public IntPtr GetISteamGameServerStats;
		public IntPtr GetISteamApps;
		public IntPtr GetISteamNetworking;
		public IntPtr GetISteamRemoteStorage;
		public IntPtr RunFrame;
		public IntPtr GetIPCCallCount;
		public IntPtr SetWarningMessageHook;
		public IntPtr ShutdownIfAllPipesClosed;
	}
	
	public class ISteamClient010 : NativeWrapper<ISteamClient010VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateSteamPipe(IntPtr thisobj);
		public Int32 CreateSteamPipe() { var call = this.GetFunction<NativeCreateSteamPipe>(this.Functions.CreateSteamPipe); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeReleaseSteamPipe(IntPtr thisobj, Int32 hSteamPipe);
		[return: MarshalAs(UnmanagedType.I1)] public bool ReleaseSteamPipe(Int32 hSteamPipe) { var call = this.GetFunction<NativeReleaseSteamPipe>(this.Functions.ReleaseSteamPipe); return call(this.ObjectAddress, hSteamPipe); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeConnectToGlobalUser(IntPtr thisobj, Int32 hSteamPipe);
		public Int32 ConnectToGlobalUser(Int32 hSteamPipe) { var call = this.GetFunction<NativeConnectToGlobalUser>(this.Functions.ConnectToGlobalUser); return call(this.ObjectAddress, hSteamPipe); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateLocalUser(IntPtr thisobj, ref Int32 phSteamPipe, EAccountType eAccountType);
		public Int32 CreateLocalUser(ref Int32 phSteamPipe, EAccountType eAccountType) { var call = this.GetFunction<NativeCreateLocalUser>(this.Functions.CreateLocalUser); return call(this.ObjectAddress, ref phSteamPipe, eAccountType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeReleaseUser(IntPtr thisobj, Int32 hSteamPipe, Int32 hUser);
		public void ReleaseUser(Int32 hSteamPipe, Int32 hUser) { var call = this.GetFunction<NativeReleaseUser>(this.Functions.ReleaseUser); call(this.ObjectAddress, hSteamPipe, hUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamUser(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamUser(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamUser>(this.Functions.GetISteamUser); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamGameServer(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamGameServer(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamGameServer>(this.Functions.GetISteamGameServer); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLocalIPBinding(IntPtr thisobj, UInt32 unIP, UInt16 usPort);
		public void SetLocalIPBinding(UInt32 unIP, UInt16 usPort) { var call = this.GetFunction<NativeSetLocalIPBinding>(this.Functions.SetLocalIPBinding); call(this.ObjectAddress, unIP, usPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamFriends(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamFriends(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamFriends>(this.Functions.GetISteamFriends); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamUtils(IntPtr thisobj, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamUtils(Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamUtils>(this.Functions.GetISteamUtils); return call(this.ObjectAddress, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamMatchmaking(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamMatchmaking(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamMatchmaking>(this.Functions.GetISteamMatchmaking); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamMasterServerUpdater(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamMasterServerUpdater(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamMasterServerUpdater>(this.Functions.GetISteamMasterServerUpdater); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamMatchmakingServers(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamMatchmakingServers(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamMatchmakingServers>(this.Functions.GetISteamMatchmakingServers); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamGenericInterface(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamGenericInterface(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamGenericInterface>(this.Functions.GetISteamGenericInterface); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamUserStats(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamUserStats(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamUserStats>(this.Functions.GetISteamUserStats); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamGameServerStats(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamGameServerStats(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamGameServerStats>(this.Functions.GetISteamGameServerStats); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamApps(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamApps(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamApps>(this.Functions.GetISteamApps); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamNetworking(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamNetworking(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamNetworking>(this.Functions.GetISteamNetworking); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetISteamRemoteStorage(IntPtr thisobj, Int32 hSteamuser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetISteamRemoteStorage(Int32 hSteamuser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetISteamRemoteStorage>(this.Functions.GetISteamRemoteStorage); return call(this.ObjectAddress, hSteamuser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRunFrame(IntPtr thisobj);
		public void RunFrame() { var call = this.GetFunction<NativeRunFrame>(this.Functions.RunFrame); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetIPCCallCount(IntPtr thisobj);
		public UInt32 GetIPCCallCount() { var call = this.GetFunction<NativeGetIPCCallCount>(this.Functions.GetIPCCallCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetWarningMessageHook(IntPtr thisobj, ref IntPtr pFunction);
		public void SetWarningMessageHook(ref IntPtr pFunction) { var call = this.GetFunction<NativeSetWarningMessageHook>(this.Functions.SetWarningMessageHook); call(this.ObjectAddress, ref pFunction); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeShutdownIfAllPipesClosed(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool ShutdownIfAllPipesClosed() { var call = this.GetFunction<NativeShutdownIfAllPipesClosed>(this.Functions.ShutdownIfAllPipesClosed); return call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamGameServerStats001VTable
	{
		public IntPtr RequestUserStats;
		public IntPtr GetUserStat;
		public IntPtr GetUserStat1;
		public IntPtr GetUserAchievement;
		public IntPtr SetUserStat;
		public IntPtr SetUserStat1;
		public IntPtr UpdateUserAvgRateStat;
		public IntPtr SetUserAchievement;
		public IntPtr ClearUserAchievement;
		public IntPtr StoreUserStats;
	}
	
	public class ISteamGameServerStats001 : NativeWrapper<ISteamGameServerStats001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestUserStats(IntPtr thisobj, UInt64 steamIDUser);
		public UInt64 RequestUserStats(UInt64 steamIDUser) { var call = this.GetFunction<NativeRequestUserStats>(this.Functions.RequestUserStats); return call(this.ObjectAddress, steamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserStat(IntPtr thisobj, UInt64 steamIDUser, string pchName, ref Int32 pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserStat(UInt64 steamIDUser, string pchName, ref Int32 pData) { var call = this.GetFunction<NativeGetUserStat>(this.Functions.GetUserStat); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserStat1(IntPtr thisobj, UInt64 steamIDUser, string pchName, ref float pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserStat(UInt64 steamIDUser, string pchName, ref float pData) { var call = this.GetFunction<NativeGetUserStat1>(this.Functions.GetUserStat1); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserAchievement(IntPtr thisobj, UInt64 steamIDUser, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserAchievement(UInt64 steamIDUser, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved) { var call = this.GetFunction<NativeGetUserAchievement>(this.Functions.GetUserAchievement); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pbAchieved); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetUserStat(IntPtr thisobj, UInt64 steamIDUser, string pchName, Int32 nData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetUserStat(UInt64 steamIDUser, string pchName, Int32 nData) { var call = this.GetFunction<NativeSetUserStat>(this.Functions.SetUserStat); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), nData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetUserStat1(IntPtr thisobj, UInt64 steamIDUser, string pchName, float fData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetUserStat(UInt64 steamIDUser, string pchName, float fData) { var call = this.GetFunction<NativeSetUserStat1>(this.Functions.SetUserStat1); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), fData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateUserAvgRateStat(IntPtr thisobj, UInt64 steamIDUser, string pchName, float flCountThisSession, double dSessionLength);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateUserAvgRateStat(UInt64 steamIDUser, string pchName, float flCountThisSession, double dSessionLength) { var call = this.GetFunction<NativeUpdateUserAvgRateStat>(this.Functions.UpdateUserAvgRateStat); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), flCountThisSession, dSessionLength); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetUserAchievement(IntPtr thisobj, UInt64 steamIDUser, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetUserAchievement(UInt64 steamIDUser, string pchName) { var call = this.GetFunction<NativeSetUserAchievement>(this.Functions.SetUserAchievement); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeClearUserAchievement(IntPtr thisobj, UInt64 steamIDUser, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool ClearUserAchievement(UInt64 steamIDUser, string pchName) { var call = this.GetFunction<NativeClearUserAchievement>(this.Functions.ClearUserAchievement); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeStoreUserStats(IntPtr thisobj, UInt64 steamIDUser);
		public UInt64 StoreUserStats(UInt64 steamIDUser) { var call = this.GetFunction<NativeStoreUserStats>(this.Functions.StoreUserStats); return call(this.ObjectAddress, steamIDUser); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientAppsVTable
	{
		public IntPtr GetAppData;
		public IntPtr GetInternalAppIDFromGameID;
		public IntPtr RequestAppCallbacks;
		public IntPtr SendUserSpecificAppData;
		public IntPtr GetAppDataSection;
		public IntPtr RequestAppInfoUpdate;
		public IntPtr NotifyAppEventTriggered;
		public IntPtr NotifyDlcInstalled;
	}
	
	public class IClientApps : NativeWrapper<IClientAppsVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppData(IntPtr thisobj, UInt32 unAppID, string pchKey, string pchValue, Int32 cchValueMax);
		public Int32 GetAppData(UInt32 unAppID, string pchKey, string pchValue, Int32 cchValueMax) { var call = this.GetFunction<NativeGetAppData>(this.Functions.GetAppData); return call(this.ObjectAddress, unAppID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) ), cchValueMax); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetInternalAppIDFromGameID(IntPtr thisobj, UInt64 gameID);
		public UInt32 GetInternalAppIDFromGameID(UInt64 gameID) { var call = this.GetFunction<NativeGetInternalAppIDFromGameID>(this.Functions.GetInternalAppIDFromGameID); return call(this.ObjectAddress, gameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRequestAppCallbacks(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bOnlyMultiplayerApps);
		public void RequestAppCallbacks([MarshalAs(UnmanagedType.I1)] bool bOnlyMultiplayerApps) { var call = this.GetFunction<NativeRequestAppCallbacks>(this.Functions.RequestAppCallbacks); call(this.ObjectAddress, bOnlyMultiplayerApps); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSendUserSpecificAppData(IntPtr thisobj, UInt32 unAppID, byte[] pvData, Int32 cbData);
		public void SendUserSpecificAppData(UInt32 unAppID, byte[] pvData, Int32 cbData) { var call = this.GetFunction<NativeSendUserSpecificAppData>(this.Functions.SendUserSpecificAppData); call(this.ObjectAddress, unAppID, pvData, cbData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppDataSection(IntPtr thisobj, UInt32 unAppID, Int32 eSection, byte[] pchBuffer, Int32 cbBufferMax);
		public Int32 GetAppDataSection(UInt32 unAppID, Int32 eSection, byte[] pchBuffer, Int32 cbBufferMax) { var call = this.GetFunction<NativeGetAppDataSection>(this.Functions.GetAppDataSection); return call(this.ObjectAddress, unAppID, eSection, pchBuffer, cbBufferMax); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestAppInfoUpdate(IntPtr thisobj, ref UInt32 pAppIDs, Int32 nNumAppIDs, [MarshalAs(UnmanagedType.I1)] bool bForceUpdate);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestAppInfoUpdate(ref UInt32 pAppIDs, Int32 nNumAppIDs, [MarshalAs(UnmanagedType.I1)] bool bForceUpdate) { var call = this.GetFunction<NativeRequestAppInfoUpdate>(this.Functions.RequestAppInfoUpdate); return call(this.ObjectAddress, ref pAppIDs, nNumAppIDs, bForceUpdate); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeNotifyAppEventTriggered(IntPtr thisobj, UInt32 unAppID, EAppEvent eAppEvent);
		public void NotifyAppEventTriggered(UInt32 unAppID, EAppEvent eAppEvent) { var call = this.GetFunction<NativeNotifyAppEventTriggered>(this.Functions.NotifyAppEventTriggered); call(this.ObjectAddress, unAppID, eAppEvent); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeNotifyDlcInstalled(IntPtr thisobj, UInt32 unAppID);
		public void NotifyDlcInstalled(UInt32 unAppID) { var call = this.GetFunction<NativeNotifyDlcInstalled>(this.Functions.NotifyDlcInstalled); call(this.ObjectAddress, unAppID); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUserStats006VTable
	{
		public IntPtr RequestCurrentStats;
		public IntPtr GetStat;
		public IntPtr GetStat1;
		public IntPtr SetStat;
		public IntPtr SetStat1;
		public IntPtr UpdateAvgRateStat;
		public IntPtr GetAchievement;
		public IntPtr SetAchievement;
		public IntPtr ClearAchievement;
		public IntPtr StoreStats;
		public IntPtr GetAchievementIcon;
		public IntPtr GetAchievementDisplayAttribute;
		public IntPtr IndicateAchievementProgress;
		public IntPtr RequestUserStats;
		public IntPtr GetUserStat;
		public IntPtr GetUserStat1;
		public IntPtr GetUserAchievement;
		public IntPtr ResetAllStats;
		public IntPtr FindOrCreateLeaderboard;
		public IntPtr FindLeaderboard;
		public IntPtr GetLeaderboardName;
		public IntPtr GetLeaderboardEntryCount;
		public IntPtr GetLeaderboardSortMethod;
		public IntPtr GetLeaderboardDisplayType;
		public IntPtr DownloadLeaderboardEntries;
		public IntPtr GetDownloadedLeaderboardEntry;
		public IntPtr UploadLeaderboardScore;
		public IntPtr GetNumberOfCurrentPlayers;
	}
	
	public class ISteamUserStats006 : NativeWrapper<ISteamUserStats006VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestCurrentStats(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestCurrentStats() { var call = this.GetFunction<NativeRequestCurrentStats>(this.Functions.RequestCurrentStats); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat(IntPtr thisobj, string pchName, ref Int32 pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(string pchName, ref Int32 pData) { var call = this.GetFunction<NativeGetStat>(this.Functions.GetStat); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat1(IntPtr thisobj, string pchName, ref float pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(string pchName, ref float pData) { var call = this.GetFunction<NativeGetStat1>(this.Functions.GetStat1); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat(IntPtr thisobj, string pchName, Int32 nData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(string pchName, Int32 nData) { var call = this.GetFunction<NativeSetStat>(this.Functions.SetStat); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), nData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat1(IntPtr thisobj, string pchName, float fData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(string pchName, float fData) { var call = this.GetFunction<NativeSetStat1>(this.Functions.SetStat1); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), fData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateAvgRateStat(IntPtr thisobj, string pchName, float flCountThisSession, double dSessionLength);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateAvgRateStat(string pchName, float flCountThisSession, double dSessionLength) { var call = this.GetFunction<NativeUpdateAvgRateStat>(this.Functions.UpdateAvgRateStat); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), flCountThisSession, dSessionLength); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAchievement(IntPtr thisobj, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetAchievement(string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved) { var call = this.GetFunction<NativeGetAchievement>(this.Functions.GetAchievement); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pbAchieved); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetAchievement(IntPtr thisobj, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetAchievement(string pchName) { var call = this.GetFunction<NativeSetAchievement>(this.Functions.SetAchievement); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeClearAchievement(IntPtr thisobj, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool ClearAchievement(string pchName) { var call = this.GetFunction<NativeClearAchievement>(this.Functions.ClearAchievement); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeStoreStats(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool StoreStats() { var call = this.GetFunction<NativeStoreStats>(this.Functions.StoreStats); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAchievementIcon(IntPtr thisobj, string pchName);
		public Int32 GetAchievementIcon(string pchName) { var call = this.GetFunction<NativeGetAchievementIcon>(this.Functions.GetAchievementIcon); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetAchievementDisplayAttribute(IntPtr thisobj, string pchName, string pchKey);
		public string GetAchievementDisplayAttribute(string pchName, string pchKey) { var call = this.GetFunction<NativeGetAchievementDisplayAttribute>(this.Functions.GetAchievementDisplayAttribute); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIndicateAchievementProgress(IntPtr thisobj, string pchName, UInt32 nCurProgress, UInt32 nMaxProgress);
		[return: MarshalAs(UnmanagedType.I1)] public bool IndicateAchievementProgress(string pchName, UInt32 nCurProgress, UInt32 nMaxProgress) { var call = this.GetFunction<NativeIndicateAchievementProgress>(this.Functions.IndicateAchievementProgress); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), nCurProgress, nMaxProgress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestUserStats(IntPtr thisobj, UInt64 steamIDUser);
		public UInt64 RequestUserStats(UInt64 steamIDUser) { var call = this.GetFunction<NativeRequestUserStats>(this.Functions.RequestUserStats); return call(this.ObjectAddress, steamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserStat(IntPtr thisobj, UInt64 steamIDUser, string pchName, ref Int32 pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserStat(UInt64 steamIDUser, string pchName, ref Int32 pData) { var call = this.GetFunction<NativeGetUserStat>(this.Functions.GetUserStat); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserStat1(IntPtr thisobj, UInt64 steamIDUser, string pchName, ref float pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserStat(UInt64 steamIDUser, string pchName, ref float pData) { var call = this.GetFunction<NativeGetUserStat1>(this.Functions.GetUserStat1); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserAchievement(IntPtr thisobj, UInt64 steamIDUser, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserAchievement(UInt64 steamIDUser, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved) { var call = this.GetFunction<NativeGetUserAchievement>(this.Functions.GetUserAchievement); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pbAchieved); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeResetAllStats(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bAchievementsToo);
		[return: MarshalAs(UnmanagedType.I1)] public bool ResetAllStats([MarshalAs(UnmanagedType.I1)] bool bAchievementsToo) { var call = this.GetFunction<NativeResetAllStats>(this.Functions.ResetAllStats); return call(this.ObjectAddress, bAchievementsToo); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeFindOrCreateLeaderboard(IntPtr thisobj, string pchLeaderboardName, ELeaderboardSortMethod eLeaderboardSortMethod, ELeaderboardDisplayType eLeaderboardDisplayType);
		public UInt64 FindOrCreateLeaderboard(string pchLeaderboardName, ELeaderboardSortMethod eLeaderboardSortMethod, ELeaderboardDisplayType eLeaderboardDisplayType) { var call = this.GetFunction<NativeFindOrCreateLeaderboard>(this.Functions.FindOrCreateLeaderboard); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchLeaderboardName ) ), eLeaderboardSortMethod, eLeaderboardDisplayType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeFindLeaderboard(IntPtr thisobj, string pchLeaderboardName);
		public UInt64 FindLeaderboard(string pchLeaderboardName) { var call = this.GetFunction<NativeFindLeaderboard>(this.Functions.FindLeaderboard); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchLeaderboardName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLeaderboardName(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public string GetLeaderboardName(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardName>(this.Functions.GetLeaderboardName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, hSteamLeaderboard) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLeaderboardEntryCount(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public Int32 GetLeaderboardEntryCount(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardEntryCount>(this.Functions.GetLeaderboardEntryCount); return call(this.ObjectAddress, hSteamLeaderboard); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELeaderboardSortMethod NativeGetLeaderboardSortMethod(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public ELeaderboardSortMethod GetLeaderboardSortMethod(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardSortMethod>(this.Functions.GetLeaderboardSortMethod); return call(this.ObjectAddress, hSteamLeaderboard); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELeaderboardDisplayType NativeGetLeaderboardDisplayType(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public ELeaderboardDisplayType GetLeaderboardDisplayType(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardDisplayType>(this.Functions.GetLeaderboardDisplayType); return call(this.ObjectAddress, hSteamLeaderboard); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeDownloadLeaderboardEntries(IntPtr thisobj, UInt64 hSteamLeaderboard, ELeaderboardDataRequest eLeaderboardDataRequest, Int32 nRangeStart, Int32 nRangeEnd);
		public UInt64 DownloadLeaderboardEntries(UInt64 hSteamLeaderboard, ELeaderboardDataRequest eLeaderboardDataRequest, Int32 nRangeStart, Int32 nRangeEnd) { var call = this.GetFunction<NativeDownloadLeaderboardEntries>(this.Functions.DownloadLeaderboardEntries); return call(this.ObjectAddress, hSteamLeaderboard, eLeaderboardDataRequest, nRangeStart, nRangeEnd); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetDownloadedLeaderboardEntry(IntPtr thisobj, UInt64 hSteamLeaderboardEntries, Int32 index, ref LeaderboardEntry001_t pLeaderboardEntry, ref Int32 pDetails, Int32 cDetailsMax);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetDownloadedLeaderboardEntry(UInt64 hSteamLeaderboardEntries, Int32 index, ref LeaderboardEntry001_t pLeaderboardEntry, ref Int32 pDetails, Int32 cDetailsMax) { var call = this.GetFunction<NativeGetDownloadedLeaderboardEntry>(this.Functions.GetDownloadedLeaderboardEntry); return call(this.ObjectAddress, hSteamLeaderboardEntries, index, ref pLeaderboardEntry, ref pDetails, cDetailsMax); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeUploadLeaderboardScore(IntPtr thisobj, UInt64 hSteamLeaderboard, ELeaderboardUploadScoreMethod eLeaderboardUploadScoreMethod, Int32 nScore, ref Int32 pScoreDetails, Int32 cScoreDetailsCount);
		public UInt64 UploadLeaderboardScore(UInt64 hSteamLeaderboard, ELeaderboardUploadScoreMethod eLeaderboardUploadScoreMethod, Int32 nScore, ref Int32 pScoreDetails, Int32 cScoreDetailsCount) { var call = this.GetFunction<NativeUploadLeaderboardScore>(this.Functions.UploadLeaderboardScore); return call(this.ObjectAddress, hSteamLeaderboard, eLeaderboardUploadScoreMethod, nScore, ref pScoreDetails, cScoreDetailsCount); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetNumberOfCurrentPlayers(IntPtr thisobj);
		public UInt64 GetNumberOfCurrentPlayers() { var call = this.GetFunction<NativeGetNumberOfCurrentPlayers>(this.Functions.GetNumberOfCurrentPlayers); return call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=64)]
	public struct servernetadr_t
	{
		public UInt16 m_usConnectionPort;
		public UInt16 m_usQueryPort;
		public UInt32 m_unIP;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamMatchmaking001VTable
	{
		public IntPtr GetFavoriteGameCount;
		public IntPtr GetFavoriteGame;
		public IntPtr AddFavoriteGame;
		public IntPtr RemoveFavoriteGame;
		public IntPtr GetFavoriteGame2;
		public IntPtr AddFavoriteGame2;
		public IntPtr RemoveFavoriteGame2;
		public IntPtr RequestLobbyList;
		public IntPtr GetLobbyByIndex;
		public IntPtr CreateLobby;
		public IntPtr JoinLobby;
		public IntPtr LeaveLobby;
		public IntPtr InviteUserToLobby;
		public IntPtr GetNumLobbyMembers;
		public IntPtr GetLobbyMemberByIndex;
		public IntPtr GetLobbyData;
		public IntPtr SetLobbyData;
		public IntPtr GetLobbyMemberData;
		public IntPtr SetLobbyMemberData;
		public IntPtr ChangeLobbyAdmin;
		public IntPtr SendLobbyChatMsg;
		public IntPtr GetLobbyChatEntry;
		public IntPtr RequestLobbyData;
	}
	
	public class ISteamMatchmaking001 : NativeWrapper<ISteamMatchmaking001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFavoriteGameCount(IntPtr thisobj);
		public Int32 GetFavoriteGameCount() { var call = this.GetFunction<NativeGetFavoriteGameCount>(this.Functions.GetFavoriteGameCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFavoriteGame(IntPtr thisobj, Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFavoriteGame(Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer) { var call = this.GetFunction<NativeGetFavoriteGame>(this.Functions.GetFavoriteGame); return call(this.ObjectAddress, iGame, ref pnAppID, ref pnIP, ref pnConnPort, ref punFlags, ref pRTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer);
		public Int32 AddFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer) { var call = this.GetFunction<NativeAddFavoriteGame>(this.Functions.AddFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, unFlags, rTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt32 unFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt32 unFlags) { var call = this.GetFunction<NativeRemoveFavoriteGame>(this.Functions.RemoveFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, unFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFavoriteGame2(IntPtr thisobj, Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFavoriteGame2(Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer) { var call = this.GetFunction<NativeGetFavoriteGame2>(this.Functions.GetFavoriteGame2); return call(this.ObjectAddress, iGame, ref pnAppID, ref pnIP, ref pnConnPort, ref pnQueryPort, ref punFlags, ref pRTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddFavoriteGame2(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer);
		public Int32 AddFavoriteGame2(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer) { var call = this.GetFunction<NativeAddFavoriteGame2>(this.Functions.AddFavoriteGame2); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags, rTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveFavoriteGame2(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveFavoriteGame2(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags) { var call = this.GetFunction<NativeRemoveFavoriteGame2>(this.Functions.RemoveFavoriteGame2); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRequestLobbyList(IntPtr thisobj, UInt64 ulGameID, ref MatchMakingKeyValuePair_t pFilters, UInt32 nFilters);
		public void RequestLobbyList(UInt64 ulGameID, ref MatchMakingKeyValuePair_t pFilters, UInt32 nFilters) { var call = this.GetFunction<NativeRequestLobbyList>(this.Functions.RequestLobbyList); call(this.ObjectAddress, ulGameID, ref pFilters, nFilters); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetLobbyByIndex(IntPtr thisobj, ref UInt64 ret, Int32 iLobby);
		public UInt64 GetLobbyByIndex(Int32 iLobby) { UInt64 ret = 0; var call = this.GetFunction<NativeGetLobbyByIndex>(this.Functions.GetLobbyByIndex); call(this.ObjectAddress, ref ret, iLobby); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCreateLobby(IntPtr thisobj, UInt64 ulGameID, [MarshalAs(UnmanagedType.I1)] bool bPrivate);
		public void CreateLobby(UInt64 ulGameID, [MarshalAs(UnmanagedType.I1)] bool bPrivate) { var call = this.GetFunction<NativeCreateLobby>(this.Functions.CreateLobby); call(this.ObjectAddress, ulGameID, bPrivate); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeJoinLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public void JoinLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeJoinLobby>(this.Functions.JoinLobby); call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLeaveLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public void LeaveLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeLeaveLobby>(this.Functions.LeaveLobby); call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeInviteUserToLobby(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDInvitee);
		[return: MarshalAs(UnmanagedType.I1)] public bool InviteUserToLobby(UInt64 steamIDLobby, UInt64 steamIDInvitee) { var call = this.GetFunction<NativeInviteUserToLobby>(this.Functions.InviteUserToLobby); return call(this.ObjectAddress, steamIDLobby, steamIDInvitee); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetNumLobbyMembers(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetNumLobbyMembers(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetNumLobbyMembers>(this.Functions.GetNumLobbyMembers); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetLobbyMemberByIndex(IntPtr thisobj, ref UInt64 ret, UInt64 steamIDLobby, Int32 iMember);
		public UInt64 GetLobbyMemberByIndex(UInt64 steamIDLobby, Int32 iMember) { UInt64 ret = 0; var call = this.GetFunction<NativeGetLobbyMemberByIndex>(this.Functions.GetLobbyMemberByIndex); call(this.ObjectAddress, ref ret, steamIDLobby, iMember); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyData(IntPtr thisobj, UInt64 SteamIDLobby, string pchKey);
		public string GetLobbyData(UInt64 SteamIDLobby, string pchKey) { var call = this.GetFunction<NativeGetLobbyData>(this.Functions.GetLobbyData); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, SteamIDLobby, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		public void SetLobbyData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyData>(this.Functions.SetLobbyData); call(this.ObjectAddress, steamIDLobby, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey);
		public string GetLobbyMemberData(UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey) { var call = this.GetFunction<NativeGetLobbyMemberData>(this.Functions.GetLobbyMemberData); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDLobby, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		public void SetLobbyMemberData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyMemberData>(this.Functions.SetLobbyMemberData); call(this.ObjectAddress, steamIDLobby, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeChangeLobbyAdmin(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDNewAdmin);
		public void ChangeLobbyAdmin(UInt64 steamIDLobby, UInt64 steamIDNewAdmin) { var call = this.GetFunction<NativeChangeLobbyAdmin>(this.Functions.ChangeLobbyAdmin); call(this.ObjectAddress, steamIDLobby, steamIDNewAdmin); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendLobbyChatMsg(IntPtr thisobj, UInt64 steamIDLobby, byte[] pvMsgBody, Int32 cubMsgBody);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendLobbyChatMsg(UInt64 steamIDLobby, byte[] pvMsgBody, Int32 cubMsgBody) { var call = this.GetFunction<NativeSendLobbyChatMsg>(this.Functions.SendLobbyChatMsg); return call(this.ObjectAddress, steamIDLobby, pvMsgBody, cubMsgBody); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyChatEntry(IntPtr thisobj, UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, byte[] pvData, Int32 cubData, ref EChatEntryType peChatEntryType);
		public Int32 GetLobbyChatEntry(UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, byte[] pvData, Int32 cubData, ref EChatEntryType peChatEntryType) { var call = this.GetFunction<NativeGetLobbyChatEntry>(this.Functions.GetLobbyChatEntry); return call(this.ObjectAddress, steamIDLobby, iChatID, ref pSteamIDUser, pvData, cubData, ref peChatEntryType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestLobbyData(IntPtr thisobj, UInt64 steamIDLobby);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestLobbyData(UInt64 steamIDLobby) { var call = this.GetFunction<NativeRequestLobbyData>(this.Functions.RequestLobbyData); return call(this.ObjectAddress, steamIDLobby); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamMatchmaking002VTable
	{
		public IntPtr GetFavoriteGameCount;
		public IntPtr GetFavoriteGame;
		public IntPtr AddFavoriteGame;
		public IntPtr RemoveFavoriteGame;
		public IntPtr RequestLobbyList;
		public IntPtr GetLobbyByIndex;
		public IntPtr CreateLobby;
		public IntPtr JoinLobby;
		public IntPtr LeaveLobby;
		public IntPtr InviteUserToLobby;
		public IntPtr GetNumLobbyMembers;
		public IntPtr GetLobbyMemberByIndex;
		public IntPtr GetLobbyData;
		public IntPtr SetLobbyData;
		public IntPtr GetLobbyMemberData;
		public IntPtr SetLobbyMemberData;
		public IntPtr SendLobbyChatMsg;
		public IntPtr GetLobbyChatEntry;
		public IntPtr RequestLobbyData;
		public IntPtr SetLobbyGameServer;
	}
	
	public class ISteamMatchmaking002 : NativeWrapper<ISteamMatchmaking002VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFavoriteGameCount(IntPtr thisobj);
		public Int32 GetFavoriteGameCount() { var call = this.GetFunction<NativeGetFavoriteGameCount>(this.Functions.GetFavoriteGameCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFavoriteGame(IntPtr thisobj, Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFavoriteGame(Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer) { var call = this.GetFunction<NativeGetFavoriteGame>(this.Functions.GetFavoriteGame); return call(this.ObjectAddress, iGame, ref pnAppID, ref pnIP, ref pnConnPort, ref pnQueryPort, ref punFlags, ref pRTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer);
		public Int32 AddFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer) { var call = this.GetFunction<NativeAddFavoriteGame>(this.Functions.AddFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags, rTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags) { var call = this.GetFunction<NativeRemoveFavoriteGame>(this.Functions.RemoveFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRequestLobbyList(IntPtr thisobj);
		public void RequestLobbyList() { var call = this.GetFunction<NativeRequestLobbyList>(this.Functions.RequestLobbyList); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetLobbyByIndex(IntPtr thisobj, ref UInt64 ret, Int32 iLobby);
		public UInt64 GetLobbyByIndex(Int32 iLobby) { UInt64 ret = 0; var call = this.GetFunction<NativeGetLobbyByIndex>(this.Functions.GetLobbyByIndex); call(this.ObjectAddress, ref ret, iLobby); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCreateLobby(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bPrivate);
		public void CreateLobby([MarshalAs(UnmanagedType.I1)] bool bPrivate) { var call = this.GetFunction<NativeCreateLobby>(this.Functions.CreateLobby); call(this.ObjectAddress, bPrivate); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeJoinLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public void JoinLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeJoinLobby>(this.Functions.JoinLobby); call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLeaveLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public void LeaveLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeLeaveLobby>(this.Functions.LeaveLobby); call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeInviteUserToLobby(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDInvitee);
		[return: MarshalAs(UnmanagedType.I1)] public bool InviteUserToLobby(UInt64 steamIDLobby, UInt64 steamIDInvitee) { var call = this.GetFunction<NativeInviteUserToLobby>(this.Functions.InviteUserToLobby); return call(this.ObjectAddress, steamIDLobby, steamIDInvitee); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetNumLobbyMembers(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetNumLobbyMembers(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetNumLobbyMembers>(this.Functions.GetNumLobbyMembers); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetLobbyMemberByIndex(IntPtr thisobj, ref UInt64 ret, UInt64 steamIDLobby, Int32 iMember);
		public UInt64 GetLobbyMemberByIndex(UInt64 steamIDLobby, Int32 iMember) { UInt64 ret = 0; var call = this.GetFunction<NativeGetLobbyMemberByIndex>(this.Functions.GetLobbyMemberByIndex); call(this.ObjectAddress, ref ret, steamIDLobby, iMember); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyData(IntPtr thisobj, UInt64 SteamIDLobby, string pchKey);
		public string GetLobbyData(UInt64 SteamIDLobby, string pchKey) { var call = this.GetFunction<NativeGetLobbyData>(this.Functions.GetLobbyData); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, SteamIDLobby, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		public void SetLobbyData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyData>(this.Functions.SetLobbyData); call(this.ObjectAddress, steamIDLobby, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey);
		public string GetLobbyMemberData(UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey) { var call = this.GetFunction<NativeGetLobbyMemberData>(this.Functions.GetLobbyMemberData); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDLobby, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		public void SetLobbyMemberData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyMemberData>(this.Functions.SetLobbyMemberData); call(this.ObjectAddress, steamIDLobby, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendLobbyChatMsg(IntPtr thisobj, UInt64 steamIDLobby, byte[] pvMsgBody, Int32 cubMsgBody);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendLobbyChatMsg(UInt64 steamIDLobby, byte[] pvMsgBody, Int32 cubMsgBody) { var call = this.GetFunction<NativeSendLobbyChatMsg>(this.Functions.SendLobbyChatMsg); return call(this.ObjectAddress, steamIDLobby, pvMsgBody, cubMsgBody); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyChatEntry(IntPtr thisobj, UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, byte[] pvData, Int32 cubData, ref EChatEntryType peChatEntryType);
		public Int32 GetLobbyChatEntry(UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, byte[] pvData, Int32 cubData, ref EChatEntryType peChatEntryType) { var call = this.GetFunction<NativeGetLobbyChatEntry>(this.Functions.GetLobbyChatEntry); return call(this.ObjectAddress, steamIDLobby, iChatID, ref pSteamIDUser, pvData, cubData, ref peChatEntryType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestLobbyData(IntPtr thisobj, UInt64 steamIDLobby);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestLobbyData(UInt64 steamIDLobby) { var call = this.GetFunction<NativeRequestLobbyData>(this.Functions.RequestLobbyData); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyGameServer(IntPtr thisobj, UInt64 steamIDLobby, UInt32 unGameServerIP, UInt16 unGameServerPort, UInt64 steamIDGameServer);
		public void SetLobbyGameServer(UInt64 steamIDLobby, UInt32 unGameServerIP, UInt16 unGameServerPort, UInt64 steamIDGameServer) { var call = this.GetFunction<NativeSetLobbyGameServer>(this.Functions.SetLobbyGameServer); call(this.ObjectAddress, steamIDLobby, unGameServerIP, unGameServerPort, steamIDGameServer); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamMatchmaking004VTable
	{
		public IntPtr GetFavoriteGameCount;
		public IntPtr GetFavoriteGame;
		public IntPtr AddFavoriteGame;
		public IntPtr RemoveFavoriteGame;
		public IntPtr RequestLobbyList;
		public IntPtr AddRequestLobbyListFilter;
		public IntPtr AddRequestLobbyListNumericalFilter;
		public IntPtr AddRequestLobbyListSlotsAvailableFilter;
		public IntPtr GetLobbyByIndex;
		public IntPtr CreateLobby;
		public IntPtr JoinLobby;
		public IntPtr LeaveLobby;
		public IntPtr InviteUserToLobby;
		public IntPtr GetNumLobbyMembers;
		public IntPtr GetLobbyMemberByIndex;
		public IntPtr GetLobbyData;
		public IntPtr SetLobbyData;
		public IntPtr GetLobbyMemberData;
		public IntPtr SetLobbyMemberData;
		public IntPtr SendLobbyChatMsg;
		public IntPtr GetLobbyChatEntry;
		public IntPtr RequestLobbyData;
		public IntPtr SetLobbyGameServer;
		public IntPtr GetLobbyGameServer;
		public IntPtr SetLobbyMemberLimit;
		public IntPtr GetLobbyMemberLimit;
		public IntPtr RequestFriendsLobbies;
	}
	
	public class ISteamMatchmaking004 : NativeWrapper<ISteamMatchmaking004VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFavoriteGameCount(IntPtr thisobj);
		public Int32 GetFavoriteGameCount() { var call = this.GetFunction<NativeGetFavoriteGameCount>(this.Functions.GetFavoriteGameCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFavoriteGame(IntPtr thisobj, Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFavoriteGame(Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer) { var call = this.GetFunction<NativeGetFavoriteGame>(this.Functions.GetFavoriteGame); return call(this.ObjectAddress, iGame, ref pnAppID, ref pnIP, ref pnConnPort, ref pnQueryPort, ref punFlags, ref pRTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer);
		public Int32 AddFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer) { var call = this.GetFunction<NativeAddFavoriteGame>(this.Functions.AddFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags, rTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags) { var call = this.GetFunction<NativeRemoveFavoriteGame>(this.Functions.RemoveFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestLobbyList(IntPtr thisobj);
		public UInt64 RequestLobbyList() { var call = this.GetFunction<NativeRequestLobbyList>(this.Functions.RequestLobbyList); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListFilter(IntPtr thisobj, string pchKeyToMatch, string pchValueToMatch);
		public void AddRequestLobbyListFilter(string pchKeyToMatch, string pchValueToMatch) { var call = this.GetFunction<NativeAddRequestLobbyListFilter>(this.Functions.AddRequestLobbyListFilter); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKeyToMatch ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValueToMatch ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListNumericalFilter(IntPtr thisobj, string pchKeyToMatch, Int32 nValueToMatch, Int32 nComparisonType);
		public void AddRequestLobbyListNumericalFilter(string pchKeyToMatch, Int32 nValueToMatch, Int32 nComparisonType) { var call = this.GetFunction<NativeAddRequestLobbyListNumericalFilter>(this.Functions.AddRequestLobbyListNumericalFilter); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKeyToMatch ) ), nValueToMatch, nComparisonType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListSlotsAvailableFilter(IntPtr thisobj);
		public void AddRequestLobbyListSlotsAvailableFilter() { var call = this.GetFunction<NativeAddRequestLobbyListSlotsAvailableFilter>(this.Functions.AddRequestLobbyListSlotsAvailableFilter); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetLobbyByIndex(IntPtr thisobj, ref UInt64 ret, Int32 iLobby);
		public UInt64 GetLobbyByIndex(Int32 iLobby) { UInt64 ret = 0; var call = this.GetFunction<NativeGetLobbyByIndex>(this.Functions.GetLobbyByIndex); call(this.ObjectAddress, ref ret, iLobby); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCreateLobby(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bPrivate);
		public void CreateLobby([MarshalAs(UnmanagedType.I1)] bool bPrivate) { var call = this.GetFunction<NativeCreateLobby>(this.Functions.CreateLobby); call(this.ObjectAddress, bPrivate); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeJoinLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public void JoinLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeJoinLobby>(this.Functions.JoinLobby); call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLeaveLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public void LeaveLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeLeaveLobby>(this.Functions.LeaveLobby); call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeInviteUserToLobby(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDInvitee);
		[return: MarshalAs(UnmanagedType.I1)] public bool InviteUserToLobby(UInt64 steamIDLobby, UInt64 steamIDInvitee) { var call = this.GetFunction<NativeInviteUserToLobby>(this.Functions.InviteUserToLobby); return call(this.ObjectAddress, steamIDLobby, steamIDInvitee); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetNumLobbyMembers(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetNumLobbyMembers(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetNumLobbyMembers>(this.Functions.GetNumLobbyMembers); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetLobbyMemberByIndex(IntPtr thisobj, ref UInt64 ret, UInt64 steamIDLobby, Int32 iMember);
		public UInt64 GetLobbyMemberByIndex(UInt64 steamIDLobby, Int32 iMember) { UInt64 ret = 0; var call = this.GetFunction<NativeGetLobbyMemberByIndex>(this.Functions.GetLobbyMemberByIndex); call(this.ObjectAddress, ref ret, steamIDLobby, iMember); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey);
		public string GetLobbyData(UInt64 steamIDLobby, string pchKey) { var call = this.GetFunction<NativeGetLobbyData>(this.Functions.GetLobbyData); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDLobby, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyData>(this.Functions.SetLobbyData); return call(this.ObjectAddress, steamIDLobby, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey);
		public string GetLobbyMemberData(UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey) { var call = this.GetFunction<NativeGetLobbyMemberData>(this.Functions.GetLobbyMemberData); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDLobby, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		public void SetLobbyMemberData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyMemberData>(this.Functions.SetLobbyMemberData); call(this.ObjectAddress, steamIDLobby, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendLobbyChatMsg(IntPtr thisobj, UInt64 steamIDLobby, byte[] pvMsgBody, Int32 cubMsgBody);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendLobbyChatMsg(UInt64 steamIDLobby, byte[] pvMsgBody, Int32 cubMsgBody) { var call = this.GetFunction<NativeSendLobbyChatMsg>(this.Functions.SendLobbyChatMsg); return call(this.ObjectAddress, steamIDLobby, pvMsgBody, cubMsgBody); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyChatEntry(IntPtr thisobj, UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, byte[] pvData, Int32 cubData, ref EChatEntryType peChatEntryType);
		public Int32 GetLobbyChatEntry(UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, byte[] pvData, Int32 cubData, ref EChatEntryType peChatEntryType) { var call = this.GetFunction<NativeGetLobbyChatEntry>(this.Functions.GetLobbyChatEntry); return call(this.ObjectAddress, steamIDLobby, iChatID, ref pSteamIDUser, pvData, cubData, ref peChatEntryType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestLobbyData(IntPtr thisobj, UInt64 steamIDLobby);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestLobbyData(UInt64 steamIDLobby) { var call = this.GetFunction<NativeRequestLobbyData>(this.Functions.RequestLobbyData); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyGameServer(IntPtr thisobj, UInt64 steamIDLobby, UInt32 unGameServerIP, UInt16 unGameServerPort, UInt64 steamIDGameServer);
		public void SetLobbyGameServer(UInt64 steamIDLobby, UInt32 unGameServerIP, UInt16 unGameServerPort, UInt64 steamIDGameServer) { var call = this.GetFunction<NativeSetLobbyGameServer>(this.Functions.SetLobbyGameServer); call(this.ObjectAddress, steamIDLobby, unGameServerIP, unGameServerPort, steamIDGameServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetLobbyGameServer(IntPtr thisobj, UInt64 steamIDLobby, ref UInt32 punGameServerIP, ref UInt16 punGameServerPort, ref UInt64 psteamIDGameServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetLobbyGameServer(UInt64 steamIDLobby, ref UInt32 punGameServerIP, ref UInt16 punGameServerPort, ref UInt64 psteamIDGameServer) { var call = this.GetFunction<NativeGetLobbyGameServer>(this.Functions.GetLobbyGameServer); return call(this.ObjectAddress, steamIDLobby, ref punGameServerIP, ref punGameServerPort, ref psteamIDGameServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyMemberLimit(IntPtr thisobj, UInt64 steamIDLobby, Int32 cMaxMembers);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyMemberLimit(UInt64 steamIDLobby, Int32 cMaxMembers) { var call = this.GetFunction<NativeSetLobbyMemberLimit>(this.Functions.SetLobbyMemberLimit); return call(this.ObjectAddress, steamIDLobby, cMaxMembers); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyMemberLimit(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetLobbyMemberLimit(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetLobbyMemberLimit>(this.Functions.GetLobbyMemberLimit); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRequestFriendsLobbies(IntPtr thisobj);
		public Int32 RequestFriendsLobbies() { var call = this.GetFunction<NativeRequestFriendsLobbies>(this.Functions.RequestFriendsLobbies); return call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamMatchmaking005VTable
	{
		public IntPtr GetFavoriteGameCount;
		public IntPtr GetFavoriteGame;
		public IntPtr AddFavoriteGame;
		public IntPtr RemoveFavoriteGame;
		public IntPtr RequestLobbyList;
		public IntPtr AddRequestLobbyListFilter;
		public IntPtr AddRequestLobbyListNumericalFilter;
		public IntPtr AddRequestLobbyListSlotsAvailableFilter;
		public IntPtr AddRequestLobbyListNearValueFilter;
		public IntPtr GetLobbyByIndex;
		public IntPtr CreateLobby;
		public IntPtr JoinLobby;
		public IntPtr LeaveLobby;
		public IntPtr InviteUserToLobby;
		public IntPtr GetNumLobbyMembers;
		public IntPtr GetLobbyMemberByIndex;
		public IntPtr GetLobbyData;
		public IntPtr SetLobbyData;
		public IntPtr GetLobbyMemberData;
		public IntPtr SetLobbyMemberData;
		public IntPtr SendLobbyChatMsg;
		public IntPtr GetLobbyChatEntry;
		public IntPtr RequestLobbyData;
		public IntPtr SetLobbyGameServer;
		public IntPtr GetLobbyGameServer;
		public IntPtr SetLobbyMemberLimit;
		public IntPtr GetLobbyMemberLimit;
		public IntPtr RequestFriendsLobbies;
		public IntPtr SetLobbyType;
		public IntPtr GetLobbyOwner;
		public IntPtr GetLobbyDistance;
	}
	
	public class ISteamMatchmaking005 : NativeWrapper<ISteamMatchmaking005VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFavoriteGameCount(IntPtr thisobj);
		public Int32 GetFavoriteGameCount() { var call = this.GetFunction<NativeGetFavoriteGameCount>(this.Functions.GetFavoriteGameCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFavoriteGame(IntPtr thisobj, Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFavoriteGame(Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer) { var call = this.GetFunction<NativeGetFavoriteGame>(this.Functions.GetFavoriteGame); return call(this.ObjectAddress, iGame, ref pnAppID, ref pnIP, ref pnConnPort, ref pnQueryPort, ref punFlags, ref pRTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer);
		public Int32 AddFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer) { var call = this.GetFunction<NativeAddFavoriteGame>(this.Functions.AddFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags, rTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags) { var call = this.GetFunction<NativeRemoveFavoriteGame>(this.Functions.RemoveFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestLobbyList(IntPtr thisobj);
		public UInt64 RequestLobbyList() { var call = this.GetFunction<NativeRequestLobbyList>(this.Functions.RequestLobbyList); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListFilter(IntPtr thisobj, string pchKeyToMatch, string pchValueToMatch);
		public void AddRequestLobbyListFilter(string pchKeyToMatch, string pchValueToMatch) { var call = this.GetFunction<NativeAddRequestLobbyListFilter>(this.Functions.AddRequestLobbyListFilter); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKeyToMatch ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValueToMatch ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListNumericalFilter(IntPtr thisobj, string pchKeyToMatch, Int32 nValueToMatch, Int32 nComparisonType);
		public void AddRequestLobbyListNumericalFilter(string pchKeyToMatch, Int32 nValueToMatch, Int32 nComparisonType) { var call = this.GetFunction<NativeAddRequestLobbyListNumericalFilter>(this.Functions.AddRequestLobbyListNumericalFilter); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKeyToMatch ) ), nValueToMatch, nComparisonType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListSlotsAvailableFilter(IntPtr thisobj);
		public void AddRequestLobbyListSlotsAvailableFilter() { var call = this.GetFunction<NativeAddRequestLobbyListSlotsAvailableFilter>(this.Functions.AddRequestLobbyListSlotsAvailableFilter); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListNearValueFilter(IntPtr thisobj, string pchKeyToMatch, Int32 nValueToBeCloseTo);
		public void AddRequestLobbyListNearValueFilter(string pchKeyToMatch, Int32 nValueToBeCloseTo) { var call = this.GetFunction<NativeAddRequestLobbyListNearValueFilter>(this.Functions.AddRequestLobbyListNearValueFilter); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKeyToMatch ) ), nValueToBeCloseTo); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetLobbyByIndex(IntPtr thisobj, ref UInt64 ret, Int32 iLobby);
		public UInt64 GetLobbyByIndex(Int32 iLobby) { UInt64 ret = 0; var call = this.GetFunction<NativeGetLobbyByIndex>(this.Functions.GetLobbyByIndex); call(this.ObjectAddress, ref ret, iLobby); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeCreateLobby(IntPtr thisobj, ELobbyType eLobbyType);
		public UInt64 CreateLobby(ELobbyType eLobbyType) { var call = this.GetFunction<NativeCreateLobby>(this.Functions.CreateLobby); return call(this.ObjectAddress, eLobbyType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeJoinLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public UInt64 JoinLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeJoinLobby>(this.Functions.JoinLobby); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLeaveLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public void LeaveLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeLeaveLobby>(this.Functions.LeaveLobby); call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeInviteUserToLobby(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDInvitee);
		[return: MarshalAs(UnmanagedType.I1)] public bool InviteUserToLobby(UInt64 steamIDLobby, UInt64 steamIDInvitee) { var call = this.GetFunction<NativeInviteUserToLobby>(this.Functions.InviteUserToLobby); return call(this.ObjectAddress, steamIDLobby, steamIDInvitee); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetNumLobbyMembers(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetNumLobbyMembers(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetNumLobbyMembers>(this.Functions.GetNumLobbyMembers); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetLobbyMemberByIndex(IntPtr thisobj, ref UInt64 ret, UInt64 steamIDLobby, Int32 iMember);
		public UInt64 GetLobbyMemberByIndex(UInt64 steamIDLobby, Int32 iMember) { UInt64 ret = 0; var call = this.GetFunction<NativeGetLobbyMemberByIndex>(this.Functions.GetLobbyMemberByIndex); call(this.ObjectAddress, ref ret, steamIDLobby, iMember); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey);
		public string GetLobbyData(UInt64 steamIDLobby, string pchKey) { var call = this.GetFunction<NativeGetLobbyData>(this.Functions.GetLobbyData); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDLobby, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyData>(this.Functions.SetLobbyData); return call(this.ObjectAddress, steamIDLobby, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey);
		public string GetLobbyMemberData(UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey) { var call = this.GetFunction<NativeGetLobbyMemberData>(this.Functions.GetLobbyMemberData); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDLobby, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		public void SetLobbyMemberData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyMemberData>(this.Functions.SetLobbyMemberData); call(this.ObjectAddress, steamIDLobby, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendLobbyChatMsg(IntPtr thisobj, UInt64 steamIDLobby, byte[] pvMsgBody, Int32 cubMsgBody);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendLobbyChatMsg(UInt64 steamIDLobby, byte[] pvMsgBody, Int32 cubMsgBody) { var call = this.GetFunction<NativeSendLobbyChatMsg>(this.Functions.SendLobbyChatMsg); return call(this.ObjectAddress, steamIDLobby, pvMsgBody, cubMsgBody); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyChatEntry(IntPtr thisobj, UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, byte[] pvData, Int32 cubData, ref EChatEntryType peChatEntryType);
		public Int32 GetLobbyChatEntry(UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, byte[] pvData, Int32 cubData, ref EChatEntryType peChatEntryType) { var call = this.GetFunction<NativeGetLobbyChatEntry>(this.Functions.GetLobbyChatEntry); return call(this.ObjectAddress, steamIDLobby, iChatID, ref pSteamIDUser, pvData, cubData, ref peChatEntryType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestLobbyData(IntPtr thisobj, UInt64 steamIDLobby);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestLobbyData(UInt64 steamIDLobby) { var call = this.GetFunction<NativeRequestLobbyData>(this.Functions.RequestLobbyData); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyGameServer(IntPtr thisobj, UInt64 steamIDLobby, UInt32 unGameServerIP, UInt16 unGameServerPort, UInt64 steamIDGameServer);
		public void SetLobbyGameServer(UInt64 steamIDLobby, UInt32 unGameServerIP, UInt16 unGameServerPort, UInt64 steamIDGameServer) { var call = this.GetFunction<NativeSetLobbyGameServer>(this.Functions.SetLobbyGameServer); call(this.ObjectAddress, steamIDLobby, unGameServerIP, unGameServerPort, steamIDGameServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetLobbyGameServer(IntPtr thisobj, UInt64 steamIDLobby, ref UInt32 punGameServerIP, ref UInt16 punGameServerPort, ref UInt64 psteamIDGameServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetLobbyGameServer(UInt64 steamIDLobby, ref UInt32 punGameServerIP, ref UInt16 punGameServerPort, ref UInt64 psteamIDGameServer) { var call = this.GetFunction<NativeGetLobbyGameServer>(this.Functions.GetLobbyGameServer); return call(this.ObjectAddress, steamIDLobby, ref punGameServerIP, ref punGameServerPort, ref psteamIDGameServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyMemberLimit(IntPtr thisobj, UInt64 steamIDLobby, Int32 cMaxMembers);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyMemberLimit(UInt64 steamIDLobby, Int32 cMaxMembers) { var call = this.GetFunction<NativeSetLobbyMemberLimit>(this.Functions.SetLobbyMemberLimit); return call(this.ObjectAddress, steamIDLobby, cMaxMembers); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyMemberLimit(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetLobbyMemberLimit(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetLobbyMemberLimit>(this.Functions.GetLobbyMemberLimit); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRequestFriendsLobbies(IntPtr thisobj);
		public Int32 RequestFriendsLobbies() { var call = this.GetFunction<NativeRequestFriendsLobbies>(this.Functions.RequestFriendsLobbies); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyType(IntPtr thisobj, UInt64 steamIDLobby, ELobbyType eLobbyType);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyType(UInt64 steamIDLobby, ELobbyType eLobbyType) { var call = this.GetFunction<NativeSetLobbyType>(this.Functions.SetLobbyType); return call(this.ObjectAddress, steamIDLobby, eLobbyType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetLobbyOwner(IntPtr thisobj, ref UInt64 ret, UInt64 steamIDLobby);
		public UInt64 GetLobbyOwner(UInt64 steamIDLobby) { UInt64 ret = 0; var call = this.GetFunction<NativeGetLobbyOwner>(this.Functions.GetLobbyOwner); call(this.ObjectAddress, ref ret, steamIDLobby); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyDistance(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetLobbyDistance(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetLobbyDistance>(this.Functions.GetLobbyDistance); return call(this.ObjectAddress, steamIDLobby); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamMatchmaking007VTable
	{
		public IntPtr GetFavoriteGameCount;
		public IntPtr GetFavoriteGame;
		public IntPtr AddFavoriteGame;
		public IntPtr RemoveFavoriteGame;
		public IntPtr RequestLobbyList;
		public IntPtr AddRequestLobbyListStringFilter;
		public IntPtr AddRequestLobbyListNumericalFilter;
		public IntPtr AddRequestLobbyListNearValueFilter;
		public IntPtr AddRequestLobbyListFilterSlotsAvailable;
		public IntPtr GetLobbyByIndex;
		public IntPtr CreateLobby;
		public IntPtr JoinLobby;
		public IntPtr LeaveLobby;
		public IntPtr InviteUserToLobby;
		public IntPtr GetNumLobbyMembers;
		public IntPtr GetLobbyMemberByIndex;
		public IntPtr GetLobbyData;
		public IntPtr SetLobbyData;
		public IntPtr GetLobbyDataCount;
		public IntPtr GetLobbyDataByIndex;
		public IntPtr DeleteLobbyData;
		public IntPtr GetLobbyMemberData;
		public IntPtr SetLobbyMemberData;
		public IntPtr SendLobbyChatMsg;
		public IntPtr GetLobbyChatEntry;
		public IntPtr RequestLobbyData;
		public IntPtr SetLobbyGameServer;
		public IntPtr GetLobbyGameServer;
		public IntPtr SetLobbyMemberLimit;
		public IntPtr GetLobbyMemberLimit;
		public IntPtr SetLobbyType;
		public IntPtr SetLobbyJoinable;
		public IntPtr GetLobbyOwner;
		public IntPtr SetLobbyOwner;
	}
	
	public class ISteamMatchmaking007 : NativeWrapper<ISteamMatchmaking007VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFavoriteGameCount(IntPtr thisobj);
		public Int32 GetFavoriteGameCount() { var call = this.GetFunction<NativeGetFavoriteGameCount>(this.Functions.GetFavoriteGameCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFavoriteGame(IntPtr thisobj, Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFavoriteGame(Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer) { var call = this.GetFunction<NativeGetFavoriteGame>(this.Functions.GetFavoriteGame); return call(this.ObjectAddress, iGame, ref pnAppID, ref pnIP, ref pnConnPort, ref pnQueryPort, ref punFlags, ref pRTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer);
		public Int32 AddFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer) { var call = this.GetFunction<NativeAddFavoriteGame>(this.Functions.AddFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags, rTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags) { var call = this.GetFunction<NativeRemoveFavoriteGame>(this.Functions.RemoveFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestLobbyList(IntPtr thisobj);
		public UInt64 RequestLobbyList() { var call = this.GetFunction<NativeRequestLobbyList>(this.Functions.RequestLobbyList); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListStringFilter(IntPtr thisobj, string pchKeyToMatch, string pchValueToMatch, ELobbyComparison eComparisonType);
		public void AddRequestLobbyListStringFilter(string pchKeyToMatch, string pchValueToMatch, ELobbyComparison eComparisonType) { var call = this.GetFunction<NativeAddRequestLobbyListStringFilter>(this.Functions.AddRequestLobbyListStringFilter); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKeyToMatch ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValueToMatch ) ), eComparisonType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListNumericalFilter(IntPtr thisobj, string pchKeyToMatch, Int32 nValueToMatch, ELobbyComparison eComparisonType);
		public void AddRequestLobbyListNumericalFilter(string pchKeyToMatch, Int32 nValueToMatch, ELobbyComparison eComparisonType) { var call = this.GetFunction<NativeAddRequestLobbyListNumericalFilter>(this.Functions.AddRequestLobbyListNumericalFilter); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKeyToMatch ) ), nValueToMatch, eComparisonType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListNearValueFilter(IntPtr thisobj, string pchKeyToMatch, Int32 nValueToBeCloseTo);
		public void AddRequestLobbyListNearValueFilter(string pchKeyToMatch, Int32 nValueToBeCloseTo) { var call = this.GetFunction<NativeAddRequestLobbyListNearValueFilter>(this.Functions.AddRequestLobbyListNearValueFilter); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKeyToMatch ) ), nValueToBeCloseTo); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListFilterSlotsAvailable(IntPtr thisobj, Int32 nSlotsAvailable);
		public void AddRequestLobbyListFilterSlotsAvailable(Int32 nSlotsAvailable) { var call = this.GetFunction<NativeAddRequestLobbyListFilterSlotsAvailable>(this.Functions.AddRequestLobbyListFilterSlotsAvailable); call(this.ObjectAddress, nSlotsAvailable); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetLobbyByIndex(IntPtr thisobj, ref UInt64 ret, Int32 iLobby);
		public UInt64 GetLobbyByIndex(Int32 iLobby) { UInt64 ret = 0; var call = this.GetFunction<NativeGetLobbyByIndex>(this.Functions.GetLobbyByIndex); call(this.ObjectAddress, ref ret, iLobby); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeCreateLobby(IntPtr thisobj, ELobbyType eLobbyType, Int32 cMaxMembers);
		public UInt64 CreateLobby(ELobbyType eLobbyType, Int32 cMaxMembers) { var call = this.GetFunction<NativeCreateLobby>(this.Functions.CreateLobby); return call(this.ObjectAddress, eLobbyType, cMaxMembers); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeJoinLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public UInt64 JoinLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeJoinLobby>(this.Functions.JoinLobby); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLeaveLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public void LeaveLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeLeaveLobby>(this.Functions.LeaveLobby); call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeInviteUserToLobby(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDInvitee);
		[return: MarshalAs(UnmanagedType.I1)] public bool InviteUserToLobby(UInt64 steamIDLobby, UInt64 steamIDInvitee) { var call = this.GetFunction<NativeInviteUserToLobby>(this.Functions.InviteUserToLobby); return call(this.ObjectAddress, steamIDLobby, steamIDInvitee); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetNumLobbyMembers(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetNumLobbyMembers(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetNumLobbyMembers>(this.Functions.GetNumLobbyMembers); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetLobbyMemberByIndex(IntPtr thisobj, ref UInt64 ret, UInt64 steamIDLobby, Int32 iMember);
		public UInt64 GetLobbyMemberByIndex(UInt64 steamIDLobby, Int32 iMember) { UInt64 ret = 0; var call = this.GetFunction<NativeGetLobbyMemberByIndex>(this.Functions.GetLobbyMemberByIndex); call(this.ObjectAddress, ref ret, steamIDLobby, iMember); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey);
		public string GetLobbyData(UInt64 steamIDLobby, string pchKey) { var call = this.GetFunction<NativeGetLobbyData>(this.Functions.GetLobbyData); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDLobby, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyData>(this.Functions.SetLobbyData); return call(this.ObjectAddress, steamIDLobby, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyDataCount(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetLobbyDataCount(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetLobbyDataCount>(this.Functions.GetLobbyDataCount); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetLobbyDataByIndex(IntPtr thisobj, UInt64 steamIDLobby, Int32 iLobbyData, string pchKey, Int32 cchKeyBufferSize, string pchValue, Int32 cchValueBufferSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetLobbyDataByIndex(UInt64 steamIDLobby, Int32 iLobbyData, string pchKey, Int32 cchKeyBufferSize, string pchValue, Int32 cchValueBufferSize) { var call = this.GetFunction<NativeGetLobbyDataByIndex>(this.Functions.GetLobbyDataByIndex); return call(this.ObjectAddress, steamIDLobby, iLobbyData, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), cchKeyBufferSize, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) ), cchValueBufferSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeDeleteLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey);
		[return: MarshalAs(UnmanagedType.I1)] public bool DeleteLobbyData(UInt64 steamIDLobby, string pchKey) { var call = this.GetFunction<NativeDeleteLobbyData>(this.Functions.DeleteLobbyData); return call(this.ObjectAddress, steamIDLobby, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey);
		public string GetLobbyMemberData(UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey) { var call = this.GetFunction<NativeGetLobbyMemberData>(this.Functions.GetLobbyMemberData); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDLobby, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		public void SetLobbyMemberData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyMemberData>(this.Functions.SetLobbyMemberData); call(this.ObjectAddress, steamIDLobby, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendLobbyChatMsg(IntPtr thisobj, UInt64 steamIDLobby, byte[] pvMsgBody, Int32 cubMsgBody);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendLobbyChatMsg(UInt64 steamIDLobby, byte[] pvMsgBody, Int32 cubMsgBody) { var call = this.GetFunction<NativeSendLobbyChatMsg>(this.Functions.SendLobbyChatMsg); return call(this.ObjectAddress, steamIDLobby, pvMsgBody, cubMsgBody); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyChatEntry(IntPtr thisobj, UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, byte[] pvData, Int32 cubData, ref EChatEntryType peChatEntryType);
		public Int32 GetLobbyChatEntry(UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, byte[] pvData, Int32 cubData, ref EChatEntryType peChatEntryType) { var call = this.GetFunction<NativeGetLobbyChatEntry>(this.Functions.GetLobbyChatEntry); return call(this.ObjectAddress, steamIDLobby, iChatID, ref pSteamIDUser, pvData, cubData, ref peChatEntryType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestLobbyData(IntPtr thisobj, UInt64 steamIDLobby);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestLobbyData(UInt64 steamIDLobby) { var call = this.GetFunction<NativeRequestLobbyData>(this.Functions.RequestLobbyData); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyGameServer(IntPtr thisobj, UInt64 steamIDLobby, UInt32 unGameServerIP, UInt16 unGameServerPort, UInt64 steamIDGameServer);
		public void SetLobbyGameServer(UInt64 steamIDLobby, UInt32 unGameServerIP, UInt16 unGameServerPort, UInt64 steamIDGameServer) { var call = this.GetFunction<NativeSetLobbyGameServer>(this.Functions.SetLobbyGameServer); call(this.ObjectAddress, steamIDLobby, unGameServerIP, unGameServerPort, steamIDGameServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetLobbyGameServer(IntPtr thisobj, UInt64 steamIDLobby, ref UInt32 punGameServerIP, ref UInt16 punGameServerPort, ref UInt64 psteamIDGameServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetLobbyGameServer(UInt64 steamIDLobby, ref UInt32 punGameServerIP, ref UInt16 punGameServerPort, ref UInt64 psteamIDGameServer) { var call = this.GetFunction<NativeGetLobbyGameServer>(this.Functions.GetLobbyGameServer); return call(this.ObjectAddress, steamIDLobby, ref punGameServerIP, ref punGameServerPort, ref psteamIDGameServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyMemberLimit(IntPtr thisobj, UInt64 steamIDLobby, Int32 cMaxMembers);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyMemberLimit(UInt64 steamIDLobby, Int32 cMaxMembers) { var call = this.GetFunction<NativeSetLobbyMemberLimit>(this.Functions.SetLobbyMemberLimit); return call(this.ObjectAddress, steamIDLobby, cMaxMembers); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyMemberLimit(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetLobbyMemberLimit(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetLobbyMemberLimit>(this.Functions.GetLobbyMemberLimit); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyType(IntPtr thisobj, UInt64 steamIDLobby, ELobbyType eLobbyType);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyType(UInt64 steamIDLobby, ELobbyType eLobbyType) { var call = this.GetFunction<NativeSetLobbyType>(this.Functions.SetLobbyType); return call(this.ObjectAddress, steamIDLobby, eLobbyType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyJoinable(IntPtr thisobj, UInt64 steamIDLobby, [MarshalAs(UnmanagedType.I1)] bool bLobbyJoinable);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyJoinable(UInt64 steamIDLobby, [MarshalAs(UnmanagedType.I1)] bool bLobbyJoinable) { var call = this.GetFunction<NativeSetLobbyJoinable>(this.Functions.SetLobbyJoinable); return call(this.ObjectAddress, steamIDLobby, bLobbyJoinable); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetLobbyOwner(IntPtr thisobj, ref UInt64 ret, UInt64 steamIDLobby);
		public UInt64 GetLobbyOwner(UInt64 steamIDLobby) { UInt64 ret = 0; var call = this.GetFunction<NativeGetLobbyOwner>(this.Functions.GetLobbyOwner); call(this.ObjectAddress, ref ret, steamIDLobby); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyOwner(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDNewOwner);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyOwner(UInt64 steamIDLobby, UInt64 steamIDNewOwner) { var call = this.GetFunction<NativeSetLobbyOwner>(this.Functions.SetLobbyOwner); return call(this.ObjectAddress, steamIDLobby, steamIDNewOwner); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamApps001VTable
	{
		public IntPtr GetAppData;
	}
	
	public class ISteamApps001 : NativeWrapper<ISteamApps001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppData(IntPtr thisobj, UInt32 nAppID, string pchKey, StringBuilder pchValue, Int32 cchValueMax);
		public Int32 GetAppData(UInt32 nAppID, string pchKey, StringBuilder pchValue, Int32 cchValueMax) { var call = this.GetFunction<NativeGetAppData>(this.Functions.GetAppData); return call(this.ObjectAddress, nAppID, pchKey, pchValue, cchValueMax); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientUserStatsVTable
	{
		public IntPtr GetNumStats;
		public IntPtr GetStatName;
		public IntPtr GetStatType;
		public IntPtr GetNumAchievements;
		public IntPtr GetAchievementName;
		public IntPtr RequestCurrentStats;
		public IntPtr GetStat;
		public IntPtr GetStat1;
		public IntPtr SetStat;
		public IntPtr SetStat1;
		public IntPtr UpdateAvgRateStat;
		public IntPtr GetAchievement;
		public IntPtr SetAchievement;
		public IntPtr ClearAchievement;
		public IntPtr StoreStats;
		public IntPtr GetAchievementIcon;
		public IntPtr GetAchievementDisplayAttribute;
		public IntPtr IndicateAchievementProgress;
		public IntPtr SetMaxStatsLoaded;
		public IntPtr RequestUserStats;
		public IntPtr GetUserStat;
		public IntPtr GetUserStat1;
		public IntPtr GetUserAchievement;
		public IntPtr ResetAllStats;
		public IntPtr FindOrCreateLeaderboard;
		public IntPtr FindLeaderboard;
		public IntPtr GetLeaderboardName;
		public IntPtr GetLeaderboardEntryCount;
		public IntPtr GetLeaderboardSortMethod;
		public IntPtr GetLeaderboardDisplayType;
		public IntPtr DownloadLeaderboardEntries;
		public IntPtr DownloadLeaderboardEntriesForUsers;
		public IntPtr GetDownloadedLeaderboardEntry;
		public IntPtr AttachLeaderboardUGC;
		public IntPtr UploadLeaderboardScore;
		public IntPtr GetNumberOfCurrentPlayers;
		public IntPtr GetNumAchievedAchievements;
		public IntPtr GetLastAchievementUnlocked;
		public IntPtr RequestGlobalAchievementPercentages;
		public IntPtr GetMostAchievedAchievementInfo;
		public IntPtr GetNextMostAchievedAchievementInfo;
	}
	
	public class IClientUserStats : NativeWrapper<IClientUserStatsVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumStats(IntPtr thisobj, UInt64 nGameID);
		public UInt32 GetNumStats(UInt64 nGameID) { var call = this.GetFunction<NativeGetNumStats>(this.Functions.GetNumStats); return call(this.ObjectAddress, nGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetStatName(IntPtr thisobj, UInt64 nGameID, UInt32 iStat);
		public string GetStatName(UInt64 nGameID, UInt32 iStat) { var call = this.GetFunction<NativeGetStatName>(this.Functions.GetStatName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, nGameID, iStat) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ESteamUserStatType NativeGetStatType(IntPtr thisobj, UInt64 nGameID, string pchName);
		public ESteamUserStatType GetStatType(UInt64 nGameID, string pchName) { var call = this.GetFunction<NativeGetStatType>(this.Functions.GetStatType); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumAchievements(IntPtr thisobj, UInt64 nGameID);
		public UInt32 GetNumAchievements(UInt64 nGameID) { var call = this.GetFunction<NativeGetNumAchievements>(this.Functions.GetNumAchievements); return call(this.ObjectAddress, nGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetAchievementName(IntPtr thisobj, UInt64 nGameID, UInt32 iAchievement);
		public string GetAchievementName(UInt64 nGameID, UInt32 iAchievement) { var call = this.GetFunction<NativeGetAchievementName>(this.Functions.GetAchievementName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, nGameID, iAchievement) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestCurrentStats(IntPtr thisobj, UInt64 nGameID);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestCurrentStats(UInt64 nGameID) { var call = this.GetFunction<NativeRequestCurrentStats>(this.Functions.RequestCurrentStats); return call(this.ObjectAddress, nGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat(IntPtr thisobj, UInt64 nGameID, string pchName, ref Int32 pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(UInt64 nGameID, string pchName, ref Int32 pData) { var call = this.GetFunction<NativeGetStat>(this.Functions.GetStat); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat1(IntPtr thisobj, UInt64 nGameID, string pchName, ref float pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(UInt64 nGameID, string pchName, ref float pData) { var call = this.GetFunction<NativeGetStat1>(this.Functions.GetStat1); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat(IntPtr thisobj, UInt64 nGameID, string pchName, Int32 nData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(UInt64 nGameID, string pchName, Int32 nData) { var call = this.GetFunction<NativeSetStat>(this.Functions.SetStat); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), nData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat1(IntPtr thisobj, UInt64 nGameID, string pchName, float fData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(UInt64 nGameID, string pchName, float fData) { var call = this.GetFunction<NativeSetStat1>(this.Functions.SetStat1); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), fData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateAvgRateStat(IntPtr thisobj, UInt64 nGameID, string pchName, float flCountThisSession, double dSessionLength);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateAvgRateStat(UInt64 nGameID, string pchName, float flCountThisSession, double dSessionLength) { var call = this.GetFunction<NativeUpdateAvgRateStat>(this.Functions.UpdateAvgRateStat); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), flCountThisSession, dSessionLength); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAchievement(IntPtr thisobj, UInt64 nGameID, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved, ref UInt32 arg4);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetAchievement(UInt64 nGameID, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved, ref UInt32 arg4) { var call = this.GetFunction<NativeGetAchievement>(this.Functions.GetAchievement); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pbAchieved, ref arg4); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetAchievement(IntPtr thisobj, UInt64 nGameID, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetAchievement(UInt64 nGameID, string pchName) { var call = this.GetFunction<NativeSetAchievement>(this.Functions.SetAchievement); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeClearAchievement(IntPtr thisobj, UInt64 nGameID, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool ClearAchievement(UInt64 nGameID, string pchName) { var call = this.GetFunction<NativeClearAchievement>(this.Functions.ClearAchievement); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeStoreStats(IntPtr thisobj, UInt64 nGameID);
		[return: MarshalAs(UnmanagedType.I1)] public bool StoreStats(UInt64 nGameID) { var call = this.GetFunction<NativeStoreStats>(this.Functions.StoreStats); return call(this.ObjectAddress, nGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAchievementIcon(IntPtr thisobj, UInt64 nGameID, string pchName);
		public Int32 GetAchievementIcon(UInt64 nGameID, string pchName) { var call = this.GetFunction<NativeGetAchievementIcon>(this.Functions.GetAchievementIcon); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetAchievementDisplayAttribute(IntPtr thisobj, UInt64 nGameID, string pchName, string pchKey);
		public string GetAchievementDisplayAttribute(UInt64 nGameID, string pchName, string pchKey) { var call = this.GetFunction<NativeGetAchievementDisplayAttribute>(this.Functions.GetAchievementDisplayAttribute); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIndicateAchievementProgress(IntPtr thisobj, UInt64 nGameID, string pchName, UInt32 nCurProgress, UInt32 nMaxProgress);
		[return: MarshalAs(UnmanagedType.I1)] public bool IndicateAchievementProgress(UInt64 nGameID, string pchName, UInt32 nCurProgress, UInt32 nMaxProgress) { var call = this.GetFunction<NativeIndicateAchievementProgress>(this.Functions.IndicateAchievementProgress); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), nCurProgress, nMaxProgress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetMaxStatsLoaded(IntPtr thisobj, UInt32 uMax);
		public Int32 SetMaxStatsLoaded(UInt32 uMax) { var call = this.GetFunction<NativeSetMaxStatsLoaded>(this.Functions.SetMaxStatsLoaded); return call(this.ObjectAddress, uMax); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestUserStats(IntPtr thisobj, UInt64 steamIDUser, UInt64 nGameID);
		public UInt64 RequestUserStats(UInt64 steamIDUser, UInt64 nGameID) { var call = this.GetFunction<NativeRequestUserStats>(this.Functions.RequestUserStats); return call(this.ObjectAddress, steamIDUser, nGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserStat(IntPtr thisobj, UInt64 steamIDUser, UInt64 nGameID, string pchName, ref Int32 pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserStat(UInt64 steamIDUser, UInt64 nGameID, string pchName, ref Int32 pData) { var call = this.GetFunction<NativeGetUserStat>(this.Functions.GetUserStat); return call(this.ObjectAddress, steamIDUser, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserStat1(IntPtr thisobj, UInt64 steamIDUser, UInt64 nGameID, string pchName, ref float pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserStat(UInt64 steamIDUser, UInt64 nGameID, string pchName, ref float pData) { var call = this.GetFunction<NativeGetUserStat1>(this.Functions.GetUserStat1); return call(this.ObjectAddress, steamIDUser, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserAchievement(IntPtr thisobj, UInt64 steamIDUser, UInt64 nGameID, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved, ref UInt32 arg5);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserAchievement(UInt64 steamIDUser, UInt64 nGameID, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved, ref UInt32 arg5) { var call = this.GetFunction<NativeGetUserAchievement>(this.Functions.GetUserAchievement); return call(this.ObjectAddress, steamIDUser, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pbAchieved, ref arg5); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeResetAllStats(IntPtr thisobj, UInt64 nGameID, [MarshalAs(UnmanagedType.I1)] bool bAchievementsToo);
		[return: MarshalAs(UnmanagedType.I1)] public bool ResetAllStats(UInt64 nGameID, [MarshalAs(UnmanagedType.I1)] bool bAchievementsToo) { var call = this.GetFunction<NativeResetAllStats>(this.Functions.ResetAllStats); return call(this.ObjectAddress, nGameID, bAchievementsToo); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeFindOrCreateLeaderboard(IntPtr thisobj, string pchLeaderboardName, ELeaderboardSortMethod eLeaderboardSortMethod, ELeaderboardDisplayType eLeaderboardDisplayType);
		public UInt64 FindOrCreateLeaderboard(string pchLeaderboardName, ELeaderboardSortMethod eLeaderboardSortMethod, ELeaderboardDisplayType eLeaderboardDisplayType) { var call = this.GetFunction<NativeFindOrCreateLeaderboard>(this.Functions.FindOrCreateLeaderboard); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchLeaderboardName ) ), eLeaderboardSortMethod, eLeaderboardDisplayType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeFindLeaderboard(IntPtr thisobj, string pchLeaderboardName);
		public UInt64 FindLeaderboard(string pchLeaderboardName) { var call = this.GetFunction<NativeFindLeaderboard>(this.Functions.FindLeaderboard); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchLeaderboardName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLeaderboardName(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public string GetLeaderboardName(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardName>(this.Functions.GetLeaderboardName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, hSteamLeaderboard) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLeaderboardEntryCount(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public Int32 GetLeaderboardEntryCount(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardEntryCount>(this.Functions.GetLeaderboardEntryCount); return call(this.ObjectAddress, hSteamLeaderboard); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELeaderboardSortMethod NativeGetLeaderboardSortMethod(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public ELeaderboardSortMethod GetLeaderboardSortMethod(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardSortMethod>(this.Functions.GetLeaderboardSortMethod); return call(this.ObjectAddress, hSteamLeaderboard); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELeaderboardDisplayType NativeGetLeaderboardDisplayType(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public ELeaderboardDisplayType GetLeaderboardDisplayType(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardDisplayType>(this.Functions.GetLeaderboardDisplayType); return call(this.ObjectAddress, hSteamLeaderboard); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeDownloadLeaderboardEntries(IntPtr thisobj, UInt64 hSteamLeaderboard, ELeaderboardDataRequest eLeaderboardDataRequest, Int32 nRangeStart, Int32 nRangeEnd);
		public UInt64 DownloadLeaderboardEntries(UInt64 hSteamLeaderboard, ELeaderboardDataRequest eLeaderboardDataRequest, Int32 nRangeStart, Int32 nRangeEnd) { var call = this.GetFunction<NativeDownloadLeaderboardEntries>(this.Functions.DownloadLeaderboardEntries); return call(this.ObjectAddress, hSteamLeaderboard, eLeaderboardDataRequest, nRangeStart, nRangeEnd); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeDownloadLeaderboardEntriesForUsers(IntPtr thisobj, Int32 unk1, Int32 unk2, Int32 unk3, Int32 unk4);
		public Int32 DownloadLeaderboardEntriesForUsers(Int32 unk1, Int32 unk2, Int32 unk3, Int32 unk4) { var call = this.GetFunction<NativeDownloadLeaderboardEntriesForUsers>(this.Functions.DownloadLeaderboardEntriesForUsers); return call(this.ObjectAddress, unk1, unk2, unk3, unk4); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetDownloadedLeaderboardEntry(IntPtr thisobj, UInt64 hSteamLeaderboardEntries, Int32 index, ref LeaderboardEntry002_t pLeaderboardEntry, ref Int32 pDetails, Int32 cDetailsMax);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetDownloadedLeaderboardEntry(UInt64 hSteamLeaderboardEntries, Int32 index, ref LeaderboardEntry002_t pLeaderboardEntry, ref Int32 pDetails, Int32 cDetailsMax) { var call = this.GetFunction<NativeGetDownloadedLeaderboardEntry>(this.Functions.GetDownloadedLeaderboardEntry); return call(this.ObjectAddress, hSteamLeaderboardEntries, index, ref pLeaderboardEntry, ref pDetails, cDetailsMax); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAttachLeaderboardUGC(IntPtr thisobj);
		public Int32 AttachLeaderboardUGC() { var call = this.GetFunction<NativeAttachLeaderboardUGC>(this.Functions.AttachLeaderboardUGC); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeUploadLeaderboardScore(IntPtr thisobj, UInt64 hSteamLeaderboard, ELeaderboardUploadScoreMethod eLeaderboardUploadScoreMethod, Int32 nScore, ref Int32 pScoreDetails, Int32 cScoreDetailsCount);
		public UInt64 UploadLeaderboardScore(UInt64 hSteamLeaderboard, ELeaderboardUploadScoreMethod eLeaderboardUploadScoreMethod, Int32 nScore, ref Int32 pScoreDetails, Int32 cScoreDetailsCount) { var call = this.GetFunction<NativeUploadLeaderboardScore>(this.Functions.UploadLeaderboardScore); return call(this.ObjectAddress, hSteamLeaderboard, eLeaderboardUploadScoreMethod, nScore, ref pScoreDetails, cScoreDetailsCount); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetNumberOfCurrentPlayers(IntPtr thisobj);
		public UInt64 GetNumberOfCurrentPlayers() { var call = this.GetFunction<NativeGetNumberOfCurrentPlayers>(this.Functions.GetNumberOfCurrentPlayers); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetNumAchievedAchievements(IntPtr thisobj, UInt64 nGameID);
		public Int32 GetNumAchievedAchievements(UInt64 nGameID) { var call = this.GetFunction<NativeGetNumAchievedAchievements>(this.Functions.GetNumAchievedAchievements); return call(this.ObjectAddress, nGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLastAchievementUnlocked(IntPtr thisobj, UInt64 nGameID);
		public Int32 GetLastAchievementUnlocked(UInt64 nGameID) { var call = this.GetFunction<NativeGetLastAchievementUnlocked>(this.Functions.GetLastAchievementUnlocked); return call(this.ObjectAddress, nGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRequestGlobalAchievementPercentages(IntPtr thisobj, UInt64 nGameID);
		public Int32 RequestGlobalAchievementPercentages(UInt64 nGameID) { var call = this.GetFunction<NativeRequestGlobalAchievementPercentages>(this.Functions.RequestGlobalAchievementPercentages); return call(this.ObjectAddress, nGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetMostAchievedAchievementInfo(IntPtr thisobj, UInt64 nGameID, string a, UInt32 b, ref float c, [MarshalAs(UnmanagedType.I1)] ref bool d);
		public Int32 GetMostAchievedAchievementInfo(UInt64 nGameID, string a, UInt32 b, ref float c, [MarshalAs(UnmanagedType.I1)] ref bool d) { var call = this.GetFunction<NativeGetMostAchievedAchievementInfo>(this.Functions.GetMostAchievedAchievementInfo); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( a ) ), b, ref c, ref d); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetNextMostAchievedAchievementInfo(IntPtr thisobj, UInt64 nGameID, Int32 a, string b, UInt32 c, ref float d, [MarshalAs(UnmanagedType.I1)] ref bool f);
		public Int32 GetNextMostAchievedAchievementInfo(UInt64 nGameID, Int32 a, string b, UInt32 c, ref float d, [MarshalAs(UnmanagedType.I1)] ref bool f) { var call = this.GetFunction<NativeGetNextMostAchievedAchievementInfo>(this.Functions.GetNextMostAchievedAchievementInfo); return call(this.ObjectAddress, nGameID, a, Encoding.Default.GetString( Encoding.UTF8.GetBytes( b ) ), c, ref d, ref f); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamGameServer002VTable
	{
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr SetSpawnCount;
		public IntPtr GetSteam2GetEncryptionKeyToSendToNewClient;
		public IntPtr SendSteam2UserConnect;
		public IntPtr SendSteam3UserConnect;
		public IntPtr RemoveUserConnect;
		public IntPtr SendUserDisconnect;
		public IntPtr SendUserStatusResponse;
		public IntPtr Obsolete_GSSetStatus;
		public IntPtr UpdateStatus;
		public IntPtr Secure;
		public IntPtr GetSteamID;
		public IntPtr SetServerType;
		public IntPtr SetServerType2;
		public IntPtr UpdateStatus2;
		public IntPtr CreateUnauthenticatedUser;
		public IntPtr SetUserData;
		public IntPtr UpdateSpectatorPort;
		public IntPtr SetGameType;
	}
	
	public class ISteamGameServer002 : NativeWrapper<ISteamGameServer002VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj);
		public void LogOn() { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetSpawnCount(IntPtr thisobj, UInt32 ucSpawn);
		public void SetSpawnCount(UInt32 ucSpawn) { var call = this.GetFunction<NativeSetSpawnCount>(this.Functions.SetSpawnCount); call(this.ObjectAddress, ucSpawn); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetSteam2GetEncryptionKeyToSendToNewClient(IntPtr thisobj, byte[] pvEncryptionKey, ref UInt32 pcbEncryptionKey, UInt32 cbMaxEncryptionKey);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetSteam2GetEncryptionKeyToSendToNewClient(byte[] pvEncryptionKey, ref UInt32 pcbEncryptionKey, UInt32 cbMaxEncryptionKey) { var call = this.GetFunction<NativeGetSteam2GetEncryptionKeyToSendToNewClient>(this.Functions.GetSteam2GetEncryptionKeyToSendToNewClient); return call(this.ObjectAddress, pvEncryptionKey, ref pcbEncryptionKey, cbMaxEncryptionKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendSteam2UserConnect(IntPtr thisobj, UInt32 unUserID, byte[] pvRawKey, UInt32 unKeyLen, UInt32 unIPPublic, UInt16 usPort, byte[] pvCookie, UInt32 cubCookie);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendSteam2UserConnect(UInt32 unUserID, byte[] pvRawKey, UInt32 unKeyLen, UInt32 unIPPublic, UInt16 usPort, byte[] pvCookie, UInt32 cubCookie) { var call = this.GetFunction<NativeSendSteam2UserConnect>(this.Functions.SendSteam2UserConnect); return call(this.ObjectAddress, unUserID, pvRawKey, unKeyLen, unIPPublic, usPort, pvCookie, cubCookie); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendSteam3UserConnect(IntPtr thisobj, UInt64 steamID, UInt32 unIPPublic, byte[] pvCookie, UInt32 cubCookie);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendSteam3UserConnect(UInt64 steamID, UInt32 unIPPublic, byte[] pvCookie, UInt32 cubCookie) { var call = this.GetFunction<NativeSendSteam3UserConnect>(this.Functions.SendSteam3UserConnect); return call(this.ObjectAddress, steamID, unIPPublic, pvCookie, cubCookie); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveUserConnect(IntPtr thisobj, UInt32 unUserID);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveUserConnect(UInt32 unUserID) { var call = this.GetFunction<NativeRemoveUserConnect>(this.Functions.RemoveUserConnect); return call(this.ObjectAddress, unUserID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendUserDisconnect(IntPtr thisobj, UInt64 steamID, UInt32 unUserID);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendUserDisconnect(UInt64 steamID, UInt32 unUserID) { var call = this.GetFunction<NativeSendUserDisconnect>(this.Functions.SendUserDisconnect); return call(this.ObjectAddress, steamID, unUserID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendUserStatusResponse(IntPtr thisobj, UInt64 steamID, Int32 nSecondsConnected, Int32 nSecondsSinceLast);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendUserStatusResponse(UInt64 steamID, Int32 nSecondsConnected, Int32 nSecondsSinceLast) { var call = this.GetFunction<NativeSendUserStatusResponse>(this.Functions.SendUserStatusResponse); return call(this.ObjectAddress, steamID, nSecondsConnected, nSecondsSinceLast); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeObsolete_GSSetStatus(IntPtr thisobj, Int32 nAppIdServed, UInt32 unServerFlags, Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, Int32 unGamePort, string pchServerName, string pchGameDir, string pchMapName, string pchVersion);
		[return: MarshalAs(UnmanagedType.I1)] public bool Obsolete_GSSetStatus(Int32 nAppIdServed, UInt32 unServerFlags, Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, Int32 unGamePort, string pchServerName, string pchGameDir, string pchMapName, string pchVersion) { var call = this.GetFunction<NativeObsolete_GSSetStatus>(this.Functions.Obsolete_GSSetStatus); return call(this.ObjectAddress, nAppIdServed, unServerFlags, cPlayers, cPlayersMax, cBotPlayers, unGamePort, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchServerName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchGameDir ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchMapName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateStatus(IntPtr thisobj, Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pchMapName);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateStatus(Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pchMapName) { var call = this.GetFunction<NativeUpdateStatus>(this.Functions.UpdateStatus); return call(this.ObjectAddress, cPlayers, cPlayersMax, cBotPlayers, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchServerName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchMapName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSecure(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Secure() { var call = this.GetFunction<NativeSecure>(this.Functions.Secure); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetSteamID(IntPtr thisobj, ref UInt64 ret);
		public UInt64 GetSteamID() { UInt64 ret = 0; var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetServerType(IntPtr thisobj, Int32 nGameAppId, UInt32 unServerFlags, UInt32 unGameIP, UInt32 unGamePort, string pchGameDir, string pchVersion);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetServerType(Int32 nGameAppId, UInt32 unServerFlags, UInt32 unGameIP, UInt32 unGamePort, string pchGameDir, string pchVersion) { var call = this.GetFunction<NativeSetServerType>(this.Functions.SetServerType); return call(this.ObjectAddress, nGameAppId, unServerFlags, unGameIP, unGamePort, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchGameDir ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetServerType2(IntPtr thisobj, Int32 nGameAppId, UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 usSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetServerType2(Int32 nGameAppId, UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 usSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode) { var call = this.GetFunction<NativeSetServerType2>(this.Functions.SetServerType2); return call(this.ObjectAddress, nGameAppId, unServerFlags, unGameIP, unGamePort, usSpectatorPort, usQueryPort, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchGameDir ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) ), bLANMode); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateStatus2(IntPtr thisobj, Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateStatus2(Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName) { var call = this.GetFunction<NativeUpdateStatus2>(this.Functions.UpdateStatus2); return call(this.ObjectAddress, cPlayers, cPlayersMax, cBotPlayers, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchServerName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pSpectatorServerName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchMapName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateUnauthenticatedUser(IntPtr thisobj, ref UInt64 pSteamID);
		public Int32 CreateUnauthenticatedUser(ref UInt64 pSteamID) { var call = this.GetFunction<NativeCreateUnauthenticatedUser>(this.Functions.CreateUnauthenticatedUser); return call(this.ObjectAddress, ref pSteamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetUserData(IntPtr thisobj, UInt64 steamIDUser, string pchPlayerName, UInt32 uScore);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetUserData(UInt64 steamIDUser, string pchPlayerName, UInt32 uScore) { var call = this.GetFunction<NativeSetUserData>(this.Functions.SetUserData); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPlayerName ) ), uScore); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateSpectatorPort(IntPtr thisobj, UInt16 unSpectatorPort);
		public void UpdateSpectatorPort(UInt16 unSpectatorPort) { var call = this.GetFunction<NativeUpdateSpectatorPort>(this.Functions.UpdateSpectatorPort); call(this.ObjectAddress, unSpectatorPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetGameType(IntPtr thisobj, string pchGameType);
		public void SetGameType(string pchGameType) { var call = this.GetFunction<NativeSetGameType>(this.Functions.SetGameType); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchGameType ) )); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamMatchmaking006VTable
	{
		public IntPtr GetFavoriteGameCount;
		public IntPtr GetFavoriteGame;
		public IntPtr AddFavoriteGame;
		public IntPtr RemoveFavoriteGame;
		public IntPtr RequestLobbyList;
		public IntPtr AddRequestLobbyListFilter;
		public IntPtr AddRequestLobbyListNumericalFilter;
		public IntPtr AddRequestLobbyListNearValueFilter;
		public IntPtr GetLobbyByIndex;
		public IntPtr CreateLobby;
		public IntPtr JoinLobby;
		public IntPtr LeaveLobby;
		public IntPtr InviteUserToLobby;
		public IntPtr GetNumLobbyMembers;
		public IntPtr GetLobbyMemberByIndex;
		public IntPtr GetLobbyData;
		public IntPtr SetLobbyData;
		public IntPtr GetLobbyMemberData;
		public IntPtr SetLobbyMemberData;
		public IntPtr SendLobbyChatMsg;
		public IntPtr GetLobbyChatEntry;
		public IntPtr RequestLobbyData;
		public IntPtr SetLobbyGameServer;
		public IntPtr GetLobbyGameServer;
		public IntPtr SetLobbyMemberLimit;
		public IntPtr GetLobbyMemberLimit;
		public IntPtr SetLobbyType;
		public IntPtr GetLobbyOwner;
	}
	
	public class ISteamMatchmaking006 : NativeWrapper<ISteamMatchmaking006VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFavoriteGameCount(IntPtr thisobj);
		public Int32 GetFavoriteGameCount() { var call = this.GetFunction<NativeGetFavoriteGameCount>(this.Functions.GetFavoriteGameCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFavoriteGame(IntPtr thisobj, Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFavoriteGame(Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer) { var call = this.GetFunction<NativeGetFavoriteGame>(this.Functions.GetFavoriteGame); return call(this.ObjectAddress, iGame, ref pnAppID, ref pnIP, ref pnConnPort, ref pnQueryPort, ref punFlags, ref pRTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer);
		public Int32 AddFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer) { var call = this.GetFunction<NativeAddFavoriteGame>(this.Functions.AddFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags, rTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags) { var call = this.GetFunction<NativeRemoveFavoriteGame>(this.Functions.RemoveFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestLobbyList(IntPtr thisobj);
		public UInt64 RequestLobbyList() { var call = this.GetFunction<NativeRequestLobbyList>(this.Functions.RequestLobbyList); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListFilter(IntPtr thisobj, string pchKeyToMatch, string pchValueToMatch);
		public void AddRequestLobbyListFilter(string pchKeyToMatch, string pchValueToMatch) { var call = this.GetFunction<NativeAddRequestLobbyListFilter>(this.Functions.AddRequestLobbyListFilter); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKeyToMatch ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValueToMatch ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListNumericalFilter(IntPtr thisobj, string pchKeyToMatch, Int32 nValueToMatch, Int32 nComparisonType);
		public void AddRequestLobbyListNumericalFilter(string pchKeyToMatch, Int32 nValueToMatch, Int32 nComparisonType) { var call = this.GetFunction<NativeAddRequestLobbyListNumericalFilter>(this.Functions.AddRequestLobbyListNumericalFilter); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKeyToMatch ) ), nValueToMatch, nComparisonType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListNearValueFilter(IntPtr thisobj, string pchKeyToMatch, Int32 nValueToBeCloseTo);
		public void AddRequestLobbyListNearValueFilter(string pchKeyToMatch, Int32 nValueToBeCloseTo) { var call = this.GetFunction<NativeAddRequestLobbyListNearValueFilter>(this.Functions.AddRequestLobbyListNearValueFilter); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKeyToMatch ) ), nValueToBeCloseTo); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetLobbyByIndex(IntPtr thisobj, ref UInt64 ret, Int32 iLobby);
		public UInt64 GetLobbyByIndex(Int32 iLobby) { UInt64 ret = 0; var call = this.GetFunction<NativeGetLobbyByIndex>(this.Functions.GetLobbyByIndex); call(this.ObjectAddress, ref ret, iLobby); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeCreateLobby(IntPtr thisobj, ELobbyType eLobbyType);
		public UInt64 CreateLobby(ELobbyType eLobbyType) { var call = this.GetFunction<NativeCreateLobby>(this.Functions.CreateLobby); return call(this.ObjectAddress, eLobbyType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeJoinLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public UInt64 JoinLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeJoinLobby>(this.Functions.JoinLobby); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLeaveLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public void LeaveLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeLeaveLobby>(this.Functions.LeaveLobby); call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeInviteUserToLobby(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDInvitee);
		[return: MarshalAs(UnmanagedType.I1)] public bool InviteUserToLobby(UInt64 steamIDLobby, UInt64 steamIDInvitee) { var call = this.GetFunction<NativeInviteUserToLobby>(this.Functions.InviteUserToLobby); return call(this.ObjectAddress, steamIDLobby, steamIDInvitee); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetNumLobbyMembers(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetNumLobbyMembers(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetNumLobbyMembers>(this.Functions.GetNumLobbyMembers); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetLobbyMemberByIndex(IntPtr thisobj, ref UInt64 ret, UInt64 steamIDLobby, Int32 iMember);
		public UInt64 GetLobbyMemberByIndex(UInt64 steamIDLobby, Int32 iMember) { UInt64 ret = 0; var call = this.GetFunction<NativeGetLobbyMemberByIndex>(this.Functions.GetLobbyMemberByIndex); call(this.ObjectAddress, ref ret, steamIDLobby, iMember); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey);
		public string GetLobbyData(UInt64 steamIDLobby, string pchKey) { var call = this.GetFunction<NativeGetLobbyData>(this.Functions.GetLobbyData); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDLobby, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyData>(this.Functions.SetLobbyData); return call(this.ObjectAddress, steamIDLobby, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey);
		public string GetLobbyMemberData(UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey) { var call = this.GetFunction<NativeGetLobbyMemberData>(this.Functions.GetLobbyMemberData); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDLobby, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		public void SetLobbyMemberData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyMemberData>(this.Functions.SetLobbyMemberData); call(this.ObjectAddress, steamIDLobby, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendLobbyChatMsg(IntPtr thisobj, UInt64 steamIDLobby, byte[] pvMsgBody, Int32 cubMsgBody);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendLobbyChatMsg(UInt64 steamIDLobby, byte[] pvMsgBody, Int32 cubMsgBody) { var call = this.GetFunction<NativeSendLobbyChatMsg>(this.Functions.SendLobbyChatMsg); return call(this.ObjectAddress, steamIDLobby, pvMsgBody, cubMsgBody); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyChatEntry(IntPtr thisobj, UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, byte[] pvData, Int32 cubData, ref EChatEntryType peChatEntryType);
		public Int32 GetLobbyChatEntry(UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, byte[] pvData, Int32 cubData, ref EChatEntryType peChatEntryType) { var call = this.GetFunction<NativeGetLobbyChatEntry>(this.Functions.GetLobbyChatEntry); return call(this.ObjectAddress, steamIDLobby, iChatID, ref pSteamIDUser, pvData, cubData, ref peChatEntryType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestLobbyData(IntPtr thisobj, UInt64 steamIDLobby);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestLobbyData(UInt64 steamIDLobby) { var call = this.GetFunction<NativeRequestLobbyData>(this.Functions.RequestLobbyData); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyGameServer(IntPtr thisobj, UInt64 steamIDLobby, UInt32 unGameServerIP, UInt16 unGameServerPort, UInt64 steamIDGameServer);
		public void SetLobbyGameServer(UInt64 steamIDLobby, UInt32 unGameServerIP, UInt16 unGameServerPort, UInt64 steamIDGameServer) { var call = this.GetFunction<NativeSetLobbyGameServer>(this.Functions.SetLobbyGameServer); call(this.ObjectAddress, steamIDLobby, unGameServerIP, unGameServerPort, steamIDGameServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetLobbyGameServer(IntPtr thisobj, UInt64 steamIDLobby, ref UInt32 punGameServerIP, ref UInt16 punGameServerPort, ref UInt64 psteamIDGameServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetLobbyGameServer(UInt64 steamIDLobby, ref UInt32 punGameServerIP, ref UInt16 punGameServerPort, ref UInt64 psteamIDGameServer) { var call = this.GetFunction<NativeGetLobbyGameServer>(this.Functions.GetLobbyGameServer); return call(this.ObjectAddress, steamIDLobby, ref punGameServerIP, ref punGameServerPort, ref psteamIDGameServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyMemberLimit(IntPtr thisobj, UInt64 steamIDLobby, Int32 cMaxMembers);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyMemberLimit(UInt64 steamIDLobby, Int32 cMaxMembers) { var call = this.GetFunction<NativeSetLobbyMemberLimit>(this.Functions.SetLobbyMemberLimit); return call(this.ObjectAddress, steamIDLobby, cMaxMembers); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyMemberLimit(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetLobbyMemberLimit(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetLobbyMemberLimit>(this.Functions.GetLobbyMemberLimit); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyType(IntPtr thisobj, UInt64 steamIDLobby, ELobbyType eLobbyType);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyType(UInt64 steamIDLobby, ELobbyType eLobbyType) { var call = this.GetFunction<NativeSetLobbyType>(this.Functions.SetLobbyType); return call(this.ObjectAddress, steamIDLobby, eLobbyType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetLobbyOwner(IntPtr thisobj, ref UInt64 ret, UInt64 steamIDLobby);
		public UInt64 GetLobbyOwner(UInt64 steamIDLobby) { UInt64 ret = 0; var call = this.GetFunction<NativeGetLobbyOwner>(this.Functions.GetLobbyOwner); call(this.ObjectAddress, ref ret, steamIDLobby); return ret; }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamNetworking002VTable
	{
		public IntPtr CreateListenSocket;
		public IntPtr CreateP2PConnectionSocket;
		public IntPtr CreateConnectionSocket;
		public IntPtr DestroySocket;
		public IntPtr DestroyListenSocket;
		public IntPtr SendDataOnSocket;
		public IntPtr IsDataAvailableOnSocket;
		public IntPtr RetrieveDataFromSocket;
		public IntPtr IsDataAvailable;
		public IntPtr RetrieveData;
		public IntPtr GetSocketInfo;
		public IntPtr GetListenSocketInfo;
		public IntPtr GetSocketConnectionType;
		public IntPtr GetMaxPacketSize;
	}
	
	public class ISteamNetworking002 : NativeWrapper<ISteamNetworking002VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateListenSocket(IntPtr thisobj, Int32 nVirtualP2PPort, UInt32 nIP, UInt16 nPort, [MarshalAs(UnmanagedType.I1)] bool bAllowUseOfPacketRelay);
		public UInt32 CreateListenSocket(Int32 nVirtualP2PPort, UInt32 nIP, UInt16 nPort, [MarshalAs(UnmanagedType.I1)] bool bAllowUseOfPacketRelay) { var call = this.GetFunction<NativeCreateListenSocket>(this.Functions.CreateListenSocket); return call(this.ObjectAddress, nVirtualP2PPort, nIP, nPort, bAllowUseOfPacketRelay); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateP2PConnectionSocket(IntPtr thisobj, UInt64 steamIDTarget, Int32 nVirtualPort, Int32 nTimeoutSec, [MarshalAs(UnmanagedType.I1)] bool bAllowUseOfPacketRelay);
		public UInt32 CreateP2PConnectionSocket(UInt64 steamIDTarget, Int32 nVirtualPort, Int32 nTimeoutSec, [MarshalAs(UnmanagedType.I1)] bool bAllowUseOfPacketRelay) { var call = this.GetFunction<NativeCreateP2PConnectionSocket>(this.Functions.CreateP2PConnectionSocket); return call(this.ObjectAddress, steamIDTarget, nVirtualPort, nTimeoutSec, bAllowUseOfPacketRelay); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateConnectionSocket(IntPtr thisobj, UInt32 nIP, UInt16 nPort, Int32 nTimeoutSec);
		public UInt32 CreateConnectionSocket(UInt32 nIP, UInt16 nPort, Int32 nTimeoutSec) { var call = this.GetFunction<NativeCreateConnectionSocket>(this.Functions.CreateConnectionSocket); return call(this.ObjectAddress, nIP, nPort, nTimeoutSec); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeDestroySocket(IntPtr thisobj, UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd);
		[return: MarshalAs(UnmanagedType.I1)] public bool DestroySocket(UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd) { var call = this.GetFunction<NativeDestroySocket>(this.Functions.DestroySocket); return call(this.ObjectAddress, hSocket, bNotifyRemoteEnd); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeDestroyListenSocket(IntPtr thisobj, UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd);
		[return: MarshalAs(UnmanagedType.I1)] public bool DestroyListenSocket(UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd) { var call = this.GetFunction<NativeDestroyListenSocket>(this.Functions.DestroyListenSocket); return call(this.ObjectAddress, hSocket, bNotifyRemoteEnd); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendDataOnSocket(IntPtr thisobj, UInt32 hSocket, byte[] pubData, UInt32 cubData, [MarshalAs(UnmanagedType.I1)] bool bReliable);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendDataOnSocket(UInt32 hSocket, byte[] pubData, UInt32 cubData, [MarshalAs(UnmanagedType.I1)] bool bReliable) { var call = this.GetFunction<NativeSendDataOnSocket>(this.Functions.SendDataOnSocket); return call(this.ObjectAddress, hSocket, pubData, cubData, bReliable); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsDataAvailableOnSocket(IntPtr thisobj, UInt32 hSocket, ref UInt32 pcubMsgSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsDataAvailableOnSocket(UInt32 hSocket, ref UInt32 pcubMsgSize) { var call = this.GetFunction<NativeIsDataAvailableOnSocket>(this.Functions.IsDataAvailableOnSocket); return call(this.ObjectAddress, hSocket, ref pcubMsgSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRetrieveDataFromSocket(IntPtr thisobj, UInt32 hSocket, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool RetrieveDataFromSocket(UInt32 hSocket, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize) { var call = this.GetFunction<NativeRetrieveDataFromSocket>(this.Functions.RetrieveDataFromSocket); return call(this.ObjectAddress, hSocket, pubDest, cubDest, ref pcubMsgSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsDataAvailable(IntPtr thisobj, UInt32 hListenSocket, ref UInt32 pcubMsgSize, ref UInt32 phSocket);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsDataAvailable(UInt32 hListenSocket, ref UInt32 pcubMsgSize, ref UInt32 phSocket) { var call = this.GetFunction<NativeIsDataAvailable>(this.Functions.IsDataAvailable); return call(this.ObjectAddress, hListenSocket, ref pcubMsgSize, ref phSocket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRetrieveData(IntPtr thisobj, UInt32 hListenSocket, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize, ref UInt32 phSocket);
		[return: MarshalAs(UnmanagedType.I1)] public bool RetrieveData(UInt32 hListenSocket, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize, ref UInt32 phSocket) { var call = this.GetFunction<NativeRetrieveData>(this.Functions.RetrieveData); return call(this.ObjectAddress, hListenSocket, pubDest, cubDest, ref pcubMsgSize, ref phSocket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetSocketInfo(IntPtr thisobj, UInt32 hSocket, ref UInt64 pSteamIDRemote, ref ESNetSocketState peSocketStatus, ref UInt32 punIPRemote, ref UInt16 punPortRemote);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetSocketInfo(UInt32 hSocket, ref UInt64 pSteamIDRemote, ref ESNetSocketState peSocketStatus, ref UInt32 punIPRemote, ref UInt16 punPortRemote) { var call = this.GetFunction<NativeGetSocketInfo>(this.Functions.GetSocketInfo); return call(this.ObjectAddress, hSocket, ref pSteamIDRemote, ref peSocketStatus, ref punIPRemote, ref punPortRemote); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetListenSocketInfo(IntPtr thisobj, UInt32 hListenSocket, ref UInt32 pnIP, ref UInt16 pnPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetListenSocketInfo(UInt32 hListenSocket, ref UInt32 pnIP, ref UInt16 pnPort) { var call = this.GetFunction<NativeGetListenSocketInfo>(this.Functions.GetListenSocketInfo); return call(this.ObjectAddress, hListenSocket, ref pnIP, ref pnPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ESNetSocketConnectionType NativeGetSocketConnectionType(IntPtr thisobj, UInt32 hSocket);
		public ESNetSocketConnectionType GetSocketConnectionType(UInt32 hSocket) { var call = this.GetFunction<NativeGetSocketConnectionType>(this.Functions.GetSocketConnectionType); return call(this.ObjectAddress, hSocket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetMaxPacketSize(IntPtr thisobj, UInt32 hSocket);
		public Int32 GetMaxPacketSize(UInt32 hSocket) { var call = this.GetFunction<NativeGetMaxPacketSize>(this.Functions.GetMaxPacketSize); return call(this.ObjectAddress, hSocket); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientUtilsVTable
	{
		public IntPtr GetInstallPath;
		public IntPtr GetUserBaseFolderInstallImage;
		public IntPtr GetManagedContentRoot;
		public IntPtr GetSecondsSinceAppActive;
		public IntPtr GetSecondsSinceComputerActive;
		public IntPtr GetConnectedUniverse;
		public IntPtr GetServerRealTime;
		public IntPtr GetIPCountry;
		public IntPtr GetImageSize;
		public IntPtr GetImageRGBA;
		public IntPtr GetCSERIPPort;
		public IntPtr GetNumRunningApps;
		public IntPtr GetCurrentBatteryPower;
		public IntPtr SetOfflineMode;
		public IntPtr GetOfflineMode;
		public IntPtr SetAppIDForCurrentPipe;
		public IntPtr GetAppID;
		public IntPtr SetAPIDebuggingActive;
		public IntPtr IsAPICallCompleted;
		public IntPtr GetAPICallFailureReason;
		public IntPtr GetAPICallResult;
		public IntPtr SignalAppsToShutDown;
		public IntPtr GetCellID;
		public IntPtr IsGlobalInstance;
		public IntPtr CheckFileSignature;
		public IntPtr GetBuildID;
	}
	
	public class IClientUtils : NativeWrapper<IClientUtilsVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetInstallPath(IntPtr thisobj);
		public string GetInstallPath() { var call = this.GetFunction<NativeGetInstallPath>(this.Functions.GetInstallPath); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetUserBaseFolderInstallImage(IntPtr thisobj);
		public string GetUserBaseFolderInstallImage() { var call = this.GetFunction<NativeGetUserBaseFolderInstallImage>(this.Functions.GetUserBaseFolderInstallImage); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetManagedContentRoot(IntPtr thisobj);
		public string GetManagedContentRoot() { var call = this.GetFunction<NativeGetManagedContentRoot>(this.Functions.GetManagedContentRoot); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetSecondsSinceAppActive(IntPtr thisobj);
		public UInt32 GetSecondsSinceAppActive() { var call = this.GetFunction<NativeGetSecondsSinceAppActive>(this.Functions.GetSecondsSinceAppActive); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetSecondsSinceComputerActive(IntPtr thisobj);
		public UInt32 GetSecondsSinceComputerActive() { var call = this.GetFunction<NativeGetSecondsSinceComputerActive>(this.Functions.GetSecondsSinceComputerActive); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EUniverse NativeGetConnectedUniverse(IntPtr thisobj);
		public EUniverse GetConnectedUniverse() { var call = this.GetFunction<NativeGetConnectedUniverse>(this.Functions.GetConnectedUniverse); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetServerRealTime(IntPtr thisobj);
		public UInt32 GetServerRealTime() { var call = this.GetFunction<NativeGetServerRealTime>(this.Functions.GetServerRealTime); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetIPCountry(IntPtr thisobj);
		public string GetIPCountry() { var call = this.GetFunction<NativeGetIPCountry>(this.Functions.GetIPCountry); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetImageSize(IntPtr thisobj, Int32 iImage, ref UInt32 pnWidth, ref UInt32 pnHeight);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetImageSize(Int32 iImage, ref UInt32 pnWidth, ref UInt32 pnHeight) { var call = this.GetFunction<NativeGetImageSize>(this.Functions.GetImageSize); return call(this.ObjectAddress, iImage, ref pnWidth, ref pnHeight); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetImageRGBA(IntPtr thisobj, Int32 iImage, byte[] pubDest, Int32 nDestBufferSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetImageRGBA(Int32 iImage, byte[] pubDest, Int32 nDestBufferSize) { var call = this.GetFunction<NativeGetImageRGBA>(this.Functions.GetImageRGBA); return call(this.ObjectAddress, iImage, pubDest, nDestBufferSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetCSERIPPort(IntPtr thisobj, ref UInt32 unIP, ref UInt16 usPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetCSERIPPort(ref UInt32 unIP, ref UInt16 usPort) { var call = this.GetFunction<NativeGetCSERIPPort>(this.Functions.GetCSERIPPort); return call(this.ObjectAddress, ref unIP, ref usPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumRunningApps(IntPtr thisobj);
		public UInt32 GetNumRunningApps() { var call = this.GetFunction<NativeGetNumRunningApps>(this.Functions.GetNumRunningApps); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Byte NativeGetCurrentBatteryPower(IntPtr thisobj);
		public Byte GetCurrentBatteryPower() { var call = this.GetFunction<NativeGetCurrentBatteryPower>(this.Functions.GetCurrentBatteryPower); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetOfflineMode(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bOffline);
		public void SetOfflineMode([MarshalAs(UnmanagedType.I1)] bool bOffline) { var call = this.GetFunction<NativeSetOfflineMode>(this.Functions.SetOfflineMode); call(this.ObjectAddress, bOffline); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetOfflineMode(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetOfflineMode() { var call = this.GetFunction<NativeGetOfflineMode>(this.Functions.GetOfflineMode); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSetAppIDForCurrentPipe(IntPtr thisobj, UInt32 appId);
		public UInt32 SetAppIDForCurrentPipe(UInt32 appId) { var call = this.GetFunction<NativeSetAppIDForCurrentPipe>(this.Functions.SetAppIDForCurrentPipe); return call(this.ObjectAddress, appId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppID(IntPtr thisobj);
		public UInt32 GetAppID() { var call = this.GetFunction<NativeGetAppID>(this.Functions.GetAppID); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetAPIDebuggingActive(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bActive, [MarshalAs(UnmanagedType.I1)] bool bVerbose);
		public void SetAPIDebuggingActive([MarshalAs(UnmanagedType.I1)] bool bActive, [MarshalAs(UnmanagedType.I1)] bool bVerbose) { var call = this.GetFunction<NativeSetAPIDebuggingActive>(this.Functions.SetAPIDebuggingActive); call(this.ObjectAddress, bActive, bVerbose); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsAPICallCompleted(IntPtr thisobj, UInt64 hSteamAPICall, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsAPICallCompleted(UInt64 hSteamAPICall, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed) { var call = this.GetFunction<NativeIsAPICallCompleted>(this.Functions.IsAPICallCompleted); return call(this.ObjectAddress, hSteamAPICall, ref pbFailed); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ESteamAPICallFailure NativeGetAPICallFailureReason(IntPtr thisobj, UInt64 hSteamAPICall);
		public ESteamAPICallFailure GetAPICallFailureReason(UInt64 hSteamAPICall) { var call = this.GetFunction<NativeGetAPICallFailureReason>(this.Functions.GetAPICallFailureReason); return call(this.ObjectAddress, hSteamAPICall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAPICallResult(IntPtr thisobj, UInt64 hSteamAPICall, IntPtr pCallback, Int32 cubCallback, Int32 iCallbackExpected, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetAPICallResult(UInt64 hSteamAPICall, IntPtr pCallback, Int32 cubCallback, Int32 iCallbackExpected, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed) { var call = this.GetFunction<NativeGetAPICallResult>(this.Functions.GetAPICallResult); return call(this.ObjectAddress, hSteamAPICall, pCallback, cubCallback, iCallbackExpected, ref pbFailed); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSignalAppsToShutDown(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool SignalAppsToShutDown() { var call = this.GetFunction<NativeSignalAppsToShutDown>(this.Functions.SignalAppsToShutDown); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetCellID(IntPtr thisobj);
		public UInt32 GetCellID() { var call = this.GetFunction<NativeGetCellID>(this.Functions.GetCellID); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsGlobalInstance(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsGlobalInstance() { var call = this.GetFunction<NativeIsGlobalInstance>(this.Functions.IsGlobalInstance); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeCheckFileSignature(IntPtr thisobj, string szFileName);
		public UInt64 CheckFileSignature(string szFileName) { var call = this.GetFunction<NativeCheckFileSignature>(this.Functions.CheckFileSignature); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szFileName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetBuildID(IntPtr thisobj);
		public UInt32 GetBuildID() { var call = this.GetFunction<NativeGetBuildID>(this.Functions.GetBuildID); return call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientDepotBuilderVTable
	{
		public IntPtr InitializeDepotBuildForConfigFile;
		public IntPtr GetDepotBuildStatus;
		public IntPtr CloseDepotBuildHandle;
		public IntPtr ReconstructDepotFromManifestAndChunks;
		public IntPtr GetChunkCounts;
	}
	
	public class IClientDepotBuilder : NativeWrapper<IClientDepotBuilderVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeInitializeDepotBuildForConfigFile(IntPtr thisobj, string pchConfigFile, [MarshalAs(UnmanagedType.I1)] bool bMakePublic);
		public UInt32 InitializeDepotBuildForConfigFile(string pchConfigFile, [MarshalAs(UnmanagedType.I1)] bool bMakePublic) { var call = this.GetFunction<NativeInitializeDepotBuildForConfigFile>(this.Functions.InitializeDepotBuildForConfigFile); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchConfigFile ) ), bMakePublic); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetDepotBuildStatus(IntPtr thisobj, UInt32 hDepotBuild, ref EDepotBuildStatus pStatusOut, ref UInt32 pPercentDone);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetDepotBuildStatus(UInt32 hDepotBuild, ref EDepotBuildStatus pStatusOut, ref UInt32 pPercentDone) { var call = this.GetFunction<NativeGetDepotBuildStatus>(this.Functions.GetDepotBuildStatus); return call(this.ObjectAddress, hDepotBuild, ref pStatusOut, ref pPercentDone); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeCloseDepotBuildHandle(IntPtr thisobj, UInt32 hDepotBuild);
		[return: MarshalAs(UnmanagedType.I1)] public bool CloseDepotBuildHandle(UInt32 hDepotBuild) { var call = this.GetFunction<NativeCloseDepotBuildHandle>(this.Functions.CloseDepotBuildHandle); return call(this.ObjectAddress, hDepotBuild); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeReconstructDepotFromManifestAndChunks(IntPtr thisobj, string pchLocalManifestPath, string pchLocalChunkPath, string pchRestorePath);
		public UInt32 ReconstructDepotFromManifestAndChunks(string pchLocalManifestPath, string pchLocalChunkPath, string pchRestorePath) { var call = this.GetFunction<NativeReconstructDepotFromManifestAndChunks>(this.Functions.ReconstructDepotFromManifestAndChunks); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchLocalManifestPath ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchLocalChunkPath ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchRestorePath ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetChunkCounts(IntPtr thisobj, UInt32 hDepotBuild, ref UInt32 unTotalChunksInNewBuild, ref UInt32 unChunksAlsoInOldBuild);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetChunkCounts(UInt32 hDepotBuild, ref UInt32 unTotalChunksInNewBuild, ref UInt32 unChunksAlsoInOldBuild) { var call = this.GetFunction<NativeGetChunkCounts>(this.Functions.GetChunkCounts); return call(this.ObjectAddress, hDepotBuild, ref unTotalChunksInNewBuild, ref unChunksAlsoInOldBuild); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamFriends002VTable
	{
		public IntPtr GetPersonaName;
		public IntPtr SetPersonaName;
		public IntPtr GetPersonaState;
		public IntPtr SetPersonaState;
		public IntPtr GetFriendCount;
		public IntPtr GetFriendByIndex;
		public IntPtr GetFriendRelationship;
		public IntPtr GetFriendPersonaState;
		public IntPtr GetFriendPersonaName;
		public IntPtr SetFriendRegValue;
		public IntPtr GetFriendRegValue;
		public IntPtr GetFriendGamePlayed;
		public IntPtr GetFriendPersonaNameHistory;
		public IntPtr AddFriend;
		public IntPtr RemoveFriend;
		public IntPtr HasFriend;
		public IntPtr AddFriendByName;
		public IntPtr InviteFriendByEmail;
		public IntPtr GetChatMessage;
		public IntPtr SendMsgToFriend;
		public IntPtr GetChatIDOfChatHistoryStart;
		public IntPtr SetChatHistoryStart;
		public IntPtr ClearChatHistory;
		public IntPtr GetClanCount;
		public IntPtr GetClanByIndex;
		public IntPtr GetClanName;
		public IntPtr InviteFriendToClan;
		public IntPtr AcknowledgeInviteToClan;
		public IntPtr GetFriendCountFromSource;
		public IntPtr GetFriendFromSourceByIndex;
	}
	
	public class ISteamFriends002 : NativeWrapper<ISteamFriends002VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetPersonaName(IntPtr thisobj);
		public string GetPersonaName() { var call = this.GetFunction<NativeGetPersonaName>(this.Functions.GetPersonaName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPersonaName(IntPtr thisobj, string pchPersonaName);
		public void SetPersonaName(string pchPersonaName) { var call = this.GetFunction<NativeSetPersonaName>(this.Functions.SetPersonaName); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPersonaName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetPersonaState(IntPtr thisobj);
		public EPersonaState GetPersonaState() { var call = this.GetFunction<NativeGetPersonaState>(this.Functions.GetPersonaState); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPersonaState(IntPtr thisobj, EPersonaState ePersonaState);
		public void SetPersonaState(EPersonaState ePersonaState) { var call = this.GetFunction<NativeSetPersonaState>(this.Functions.SetPersonaState); call(this.ObjectAddress, ePersonaState); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendCount(IntPtr thisobj, Int32 iFriendFlags);
		public Int32 GetFriendCount(Int32 iFriendFlags) { var call = this.GetFunction<NativeGetFriendCount>(this.Functions.GetFriendCount); return call(this.ObjectAddress, iFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetFriendByIndex(IntPtr thisobj, ref UInt64 ret, Int32 iFriend, Int32 iFriendFlags);
		public UInt64 GetFriendByIndex(Int32 iFriend, Int32 iFriendFlags) { UInt64 ret = 0; var call = this.GetFunction<NativeGetFriendByIndex>(this.Functions.GetFriendByIndex); call(this.ObjectAddress, ref ret, iFriend, iFriendFlags); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EFriendRelationship NativeGetFriendRelationship(IntPtr thisobj, UInt64 steamIDFriend);
		public EFriendRelationship GetFriendRelationship(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendRelationship>(this.Functions.GetFriendRelationship); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetFriendPersonaState(IntPtr thisobj, UInt64 steamIDFriend);
		public EPersonaState GetFriendPersonaState(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaState>(this.Functions.GetFriendPersonaState); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaName(IntPtr thisobj, UInt64 steamIDFriend);
		public string GetFriendPersonaName(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaName>(this.Functions.GetFriendPersonaName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDFriend) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetFriendRegValue(IntPtr thisobj, UInt64 steamIDFriend, string pchKey, string pchValue);
		public void SetFriendRegValue(UInt64 steamIDFriend, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetFriendRegValue>(this.Functions.SetFriendRegValue); call(this.ObjectAddress, steamIDFriend, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendRegValue(IntPtr thisobj, UInt64 steamIDFriend, string pchKey);
		public string GetFriendRegValue(UInt64 steamIDFriend, string pchKey) { var call = this.GetFunction<NativeGetFriendRegValue>(this.Functions.GetFriendRegValue); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDFriend, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFriendGamePlayed(IntPtr thisobj, UInt64 steamIDFriend, ref UInt64 pulGameID, ref UInt32 punGameIP, ref UInt16 pusGamePort, ref UInt16 pusQueryPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFriendGamePlayed(UInt64 steamIDFriend, ref UInt64 pulGameID, ref UInt32 punGameIP, ref UInt16 pusGamePort, ref UInt16 pusQueryPort) { var call = this.GetFunction<NativeGetFriendGamePlayed>(this.Functions.GetFriendGamePlayed); return call(this.ObjectAddress, steamIDFriend, ref pulGameID, ref punGameIP, ref pusGamePort, ref pusQueryPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaNameHistory(IntPtr thisobj, UInt64 steamIDFriend, Int32 iPersonaName);
		public string GetFriendPersonaNameHistory(UInt64 steamIDFriend, Int32 iPersonaName) { var call = this.GetFunction<NativeGetFriendPersonaNameHistory>(this.Functions.GetFriendPersonaNameHistory); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDFriend, iPersonaName) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAddFriend(IntPtr thisobj, UInt64 steamIDFriend);
		[return: MarshalAs(UnmanagedType.I1)] public bool AddFriend(UInt64 steamIDFriend) { var call = this.GetFunction<NativeAddFriend>(this.Functions.AddFriend); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveFriend(IntPtr thisobj, UInt64 steamIDFriend);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveFriend(UInt64 steamIDFriend) { var call = this.GetFunction<NativeRemoveFriend>(this.Functions.RemoveFriend); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeHasFriend(IntPtr thisobj, UInt64 steamIDFriend, Int32 iFriendFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool HasFriend(UInt64 steamIDFriend, Int32 iFriendFlags) { var call = this.GetFunction<NativeHasFriend>(this.Functions.HasFriend); return call(this.ObjectAddress, steamIDFriend, iFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddFriendByName(IntPtr thisobj, string pchEmailOrAccountName);
		public Int32 AddFriendByName(string pchEmailOrAccountName) { var call = this.GetFunction<NativeAddFriendByName>(this.Functions.AddFriendByName); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchEmailOrAccountName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInviteFriendByEmail(IntPtr thisobj, string emailAddr);
		public Int32 InviteFriendByEmail(string emailAddr) { var call = this.GetFunction<NativeInviteFriendByEmail>(this.Functions.InviteFriendByEmail); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( emailAddr ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetChatMessage(IntPtr thisobj, UInt64 steamIDFriend, Int32 iChatID, byte[] pvData, Int32 cubData, ref EChatEntryType peFriendMsgType);
		public Int32 GetChatMessage(UInt64 steamIDFriend, Int32 iChatID, byte[] pvData, Int32 cubData, ref EChatEntryType peFriendMsgType) { var call = this.GetFunction<NativeGetChatMessage>(this.Functions.GetChatMessage); return call(this.ObjectAddress, steamIDFriend, iChatID, pvData, cubData, ref peFriendMsgType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendMsgToFriend(IntPtr thisobj, UInt64 steamIDFriend, EChatEntryType eFriendMsgType, byte[] pvMsgBody, Int32 cubMsgBody);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendMsgToFriend(UInt64 steamIDFriend, EChatEntryType eFriendMsgType, byte[] pvMsgBody, Int32 cubMsgBody) { var call = this.GetFunction<NativeSendMsgToFriend>(this.Functions.SendMsgToFriend); return call(this.ObjectAddress, steamIDFriend, eFriendMsgType, pvMsgBody, cubMsgBody); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetChatIDOfChatHistoryStart(IntPtr thisobj, UInt64 steamIDFriend);
		public Int32 GetChatIDOfChatHistoryStart(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetChatIDOfChatHistoryStart>(this.Functions.GetChatIDOfChatHistoryStart); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetChatHistoryStart(IntPtr thisobj, UInt64 steamIDFriend, Int32 iChatID);
		public void SetChatHistoryStart(UInt64 steamIDFriend, Int32 iChatID) { var call = this.GetFunction<NativeSetChatHistoryStart>(this.Functions.SetChatHistoryStart); call(this.ObjectAddress, steamIDFriend, iChatID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeClearChatHistory(IntPtr thisobj, UInt64 steamIDFriend);
		public void ClearChatHistory(UInt64 steamIDFriend) { var call = this.GetFunction<NativeClearChatHistory>(this.Functions.ClearChatHistory); call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetClanCount(IntPtr thisobj);
		public Int32 GetClanCount() { var call = this.GetFunction<NativeGetClanCount>(this.Functions.GetClanCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetClanByIndex(IntPtr thisobj, ref UInt64 ret, Int32 iClan);
		public UInt64 GetClanByIndex(Int32 iClan) { UInt64 ret = 0; var call = this.GetFunction<NativeGetClanByIndex>(this.Functions.GetClanByIndex); call(this.ObjectAddress, ref ret, iClan); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetClanName(IntPtr thisobj, UInt64 steamIDClan);
		public string GetClanName(UInt64 steamIDClan) { var call = this.GetFunction<NativeGetClanName>(this.Functions.GetClanName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDClan) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInviteFriendToClan(IntPtr thisobj, UInt64 steamIDfriend, UInt64 steamIDclan);
		public Int32 InviteFriendToClan(UInt64 steamIDfriend, UInt64 steamIDclan) { var call = this.GetFunction<NativeInviteFriendToClan>(this.Functions.InviteFriendToClan); return call(this.ObjectAddress, steamIDfriend, steamIDclan); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAcknowledgeInviteToClan(IntPtr thisobj, UInt64 steamID, [MarshalAs(UnmanagedType.I1)] bool arg2);
		public Int32 AcknowledgeInviteToClan(UInt64 steamID, [MarshalAs(UnmanagedType.I1)] bool arg2) { var call = this.GetFunction<NativeAcknowledgeInviteToClan>(this.Functions.AcknowledgeInviteToClan); return call(this.ObjectAddress, steamID, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendCountFromSource(IntPtr thisobj, UInt64 steamIDSource);
		public Int32 GetFriendCountFromSource(UInt64 steamIDSource) { var call = this.GetFunction<NativeGetFriendCountFromSource>(this.Functions.GetFriendCountFromSource); return call(this.ObjectAddress, steamIDSource); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetFriendFromSourceByIndex(IntPtr thisobj, ref UInt64 ret, UInt64 steamIDSource, Int32 iFriend);
		public UInt64 GetFriendFromSourceByIndex(UInt64 steamIDSource, Int32 iFriend) { UInt64 ret = 0; var call = this.GetFunction<NativeGetFriendFromSourceByIndex>(this.Functions.GetFriendFromSourceByIndex); call(this.ObjectAddress, ref ret, steamIDSource, iFriend); return ret; }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamFriends003VTable
	{
		public IntPtr GetPersonaName;
		public IntPtr SetPersonaName;
		public IntPtr GetPersonaState;
		public IntPtr GetFriendCount;
		public IntPtr GetFriendByIndex;
		public IntPtr GetFriendRelationship;
		public IntPtr GetFriendPersonaState;
		public IntPtr GetFriendPersonaName;
		public IntPtr GetFriendAvatar;
		public IntPtr GetFriendGamePlayed;
		public IntPtr GetFriendPersonaNameHistory;
		public IntPtr HasFriend;
		public IntPtr GetClanCount;
		public IntPtr GetClanByIndex;
		public IntPtr GetClanName;
		public IntPtr GetFriendCountFromSource;
		public IntPtr GetFriendFromSourceByIndex;
		public IntPtr IsUserInSource;
		public IntPtr SetInGameVoiceSpeaking;
		public IntPtr ActivateGameOverlay;
	}
	
	public class ISteamFriends003 : NativeWrapper<ISteamFriends003VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetPersonaName(IntPtr thisobj);
		public string GetPersonaName() { var call = this.GetFunction<NativeGetPersonaName>(this.Functions.GetPersonaName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPersonaName(IntPtr thisobj, string pchPersonaName);
		public void SetPersonaName(string pchPersonaName) { var call = this.GetFunction<NativeSetPersonaName>(this.Functions.SetPersonaName); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPersonaName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetPersonaState(IntPtr thisobj);
		public EPersonaState GetPersonaState() { var call = this.GetFunction<NativeGetPersonaState>(this.Functions.GetPersonaState); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendCount(IntPtr thisobj, Int32 iFriendFlags);
		public Int32 GetFriendCount(Int32 iFriendFlags) { var call = this.GetFunction<NativeGetFriendCount>(this.Functions.GetFriendCount); return call(this.ObjectAddress, iFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetFriendByIndex(IntPtr thisobj, ref UInt64 ret, Int32 iFriend, Int32 iFriendFlags);
		public UInt64 GetFriendByIndex(Int32 iFriend, Int32 iFriendFlags) { UInt64 ret = 0; var call = this.GetFunction<NativeGetFriendByIndex>(this.Functions.GetFriendByIndex); call(this.ObjectAddress, ref ret, iFriend, iFriendFlags); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EFriendRelationship NativeGetFriendRelationship(IntPtr thisobj, UInt64 steamIDFriend);
		public EFriendRelationship GetFriendRelationship(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendRelationship>(this.Functions.GetFriendRelationship); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetFriendPersonaState(IntPtr thisobj, UInt64 steamIDFriend);
		public EPersonaState GetFriendPersonaState(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaState>(this.Functions.GetFriendPersonaState); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaName(IntPtr thisobj, UInt64 steamIDFriend);
		public string GetFriendPersonaName(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaName>(this.Functions.GetFriendPersonaName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDFriend) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendAvatar(IntPtr thisobj, UInt64 steamIDFriend);
		public Int32 GetFriendAvatar(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendAvatar>(this.Functions.GetFriendAvatar); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFriendGamePlayed(IntPtr thisobj, UInt64 steamIDFriend, ref UInt64 pulGameID, ref UInt32 punGameIP, ref UInt16 pusGamePort, ref UInt16 pusQueryPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFriendGamePlayed(UInt64 steamIDFriend, ref UInt64 pulGameID, ref UInt32 punGameIP, ref UInt16 pusGamePort, ref UInt16 pusQueryPort) { var call = this.GetFunction<NativeGetFriendGamePlayed>(this.Functions.GetFriendGamePlayed); return call(this.ObjectAddress, steamIDFriend, ref pulGameID, ref punGameIP, ref pusGamePort, ref pusQueryPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaNameHistory(IntPtr thisobj, UInt64 steamIDFriend, Int32 iPersonaName);
		public string GetFriendPersonaNameHistory(UInt64 steamIDFriend, Int32 iPersonaName) { var call = this.GetFunction<NativeGetFriendPersonaNameHistory>(this.Functions.GetFriendPersonaNameHistory); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDFriend, iPersonaName) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeHasFriend(IntPtr thisobj, UInt64 steamIDFriend, Int32 iFriendFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool HasFriend(UInt64 steamIDFriend, Int32 iFriendFlags) { var call = this.GetFunction<NativeHasFriend>(this.Functions.HasFriend); return call(this.ObjectAddress, steamIDFriend, iFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetClanCount(IntPtr thisobj);
		public Int32 GetClanCount() { var call = this.GetFunction<NativeGetClanCount>(this.Functions.GetClanCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetClanByIndex(IntPtr thisobj, ref UInt64 ret, Int32 iClan);
		public UInt64 GetClanByIndex(Int32 iClan) { UInt64 ret = 0; var call = this.GetFunction<NativeGetClanByIndex>(this.Functions.GetClanByIndex); call(this.ObjectAddress, ref ret, iClan); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetClanName(IntPtr thisobj, UInt64 steamIDClan);
		public string GetClanName(UInt64 steamIDClan) { var call = this.GetFunction<NativeGetClanName>(this.Functions.GetClanName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDClan) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendCountFromSource(IntPtr thisobj, UInt64 steamIDSource);
		public Int32 GetFriendCountFromSource(UInt64 steamIDSource) { var call = this.GetFunction<NativeGetFriendCountFromSource>(this.Functions.GetFriendCountFromSource); return call(this.ObjectAddress, steamIDSource); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetFriendFromSourceByIndex(IntPtr thisobj, ref UInt64 ret, UInt64 steamIDSource, Int32 iFriend);
		public UInt64 GetFriendFromSourceByIndex(UInt64 steamIDSource, Int32 iFriend) { UInt64 ret = 0; var call = this.GetFunction<NativeGetFriendFromSourceByIndex>(this.Functions.GetFriendFromSourceByIndex); call(this.ObjectAddress, ref ret, steamIDSource, iFriend); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsUserInSource(IntPtr thisobj, UInt64 steamIDUser, UInt64 steamIDSource);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsUserInSource(UInt64 steamIDUser, UInt64 steamIDSource) { var call = this.GetFunction<NativeIsUserInSource>(this.Functions.IsUserInSource); return call(this.ObjectAddress, steamIDUser, steamIDSource); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetInGameVoiceSpeaking(IntPtr thisobj, UInt64 steamIDUser, [MarshalAs(UnmanagedType.I1)] bool bSpeaking);
		public void SetInGameVoiceSpeaking(UInt64 steamIDUser, [MarshalAs(UnmanagedType.I1)] bool bSpeaking) { var call = this.GetFunction<NativeSetInGameVoiceSpeaking>(this.Functions.SetInGameVoiceSpeaking); call(this.ObjectAddress, steamIDUser, bSpeaking); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlay(IntPtr thisobj, string pchDialog);
		public void ActivateGameOverlay(string pchDialog) { var call = this.GetFunction<NativeActivateGameOverlay>(this.Functions.ActivateGameOverlay); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchDialog ) )); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamFriends004VTable
	{
		public IntPtr GetPersonaName;
		public IntPtr SetPersonaName;
		public IntPtr GetPersonaState;
		public IntPtr GetFriendCount;
		public IntPtr GetFriendByIndex;
		public IntPtr GetFriendRelationship;
		public IntPtr GetFriendPersonaState;
		public IntPtr GetFriendPersonaName;
		public IntPtr GetFriendAvatar;
		public IntPtr GetFriendGamePlayed;
		public IntPtr GetFriendPersonaNameHistory;
		public IntPtr HasFriend;
		public IntPtr GetClanCount;
		public IntPtr GetClanByIndex;
		public IntPtr GetClanName;
		public IntPtr GetFriendCountFromSource;
		public IntPtr GetFriendFromSourceByIndex;
		public IntPtr IsUserInSource;
		public IntPtr SetInGameVoiceSpeaking;
		public IntPtr ActivateGameOverlay;
	}
	
	public class ISteamFriends004 : NativeWrapper<ISteamFriends004VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetPersonaName(IntPtr thisobj);
		public string GetPersonaName() { var call = this.GetFunction<NativeGetPersonaName>(this.Functions.GetPersonaName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPersonaName(IntPtr thisobj, string pchPersonaName);
		public void SetPersonaName(string pchPersonaName) { var call = this.GetFunction<NativeSetPersonaName>(this.Functions.SetPersonaName); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPersonaName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetPersonaState(IntPtr thisobj);
		public EPersonaState GetPersonaState() { var call = this.GetFunction<NativeGetPersonaState>(this.Functions.GetPersonaState); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendCount(IntPtr thisobj, EFriendFlags eFriendFlags);
		public Int32 GetFriendCount(EFriendFlags eFriendFlags) { var call = this.GetFunction<NativeGetFriendCount>(this.Functions.GetFriendCount); return call(this.ObjectAddress, eFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetFriendByIndex(IntPtr thisobj, ref UInt64 ret, Int32 iFriend, EFriendFlags eFriendFlags);
		public UInt64 GetFriendByIndex(Int32 iFriend, EFriendFlags eFriendFlags) { UInt64 ret = 0; var call = this.GetFunction<NativeGetFriendByIndex>(this.Functions.GetFriendByIndex); call(this.ObjectAddress, ref ret, iFriend, eFriendFlags); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EFriendRelationship NativeGetFriendRelationship(IntPtr thisobj, UInt64 steamIDFriend);
		public EFriendRelationship GetFriendRelationship(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendRelationship>(this.Functions.GetFriendRelationship); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetFriendPersonaState(IntPtr thisobj, UInt64 steamIDFriend);
		public EPersonaState GetFriendPersonaState(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaState>(this.Functions.GetFriendPersonaState); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaName(IntPtr thisobj, UInt64 steamIDFriend);
		public string GetFriendPersonaName(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaName>(this.Functions.GetFriendPersonaName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDFriend) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendAvatar(IntPtr thisobj, UInt64 steamIDFriend, Int32 eAvatarSize);
		public Int32 GetFriendAvatar(UInt64 steamIDFriend, Int32 eAvatarSize) { var call = this.GetFunction<NativeGetFriendAvatar>(this.Functions.GetFriendAvatar); return call(this.ObjectAddress, steamIDFriend, eAvatarSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFriendGamePlayed(IntPtr thisobj, UInt64 steamIDFriend, ref UInt64 pulGameID, ref UInt32 punGameIP, ref UInt16 pusGamePort, ref UInt16 pusQueryPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFriendGamePlayed(UInt64 steamIDFriend, ref UInt64 pulGameID, ref UInt32 punGameIP, ref UInt16 pusGamePort, ref UInt16 pusQueryPort) { var call = this.GetFunction<NativeGetFriendGamePlayed>(this.Functions.GetFriendGamePlayed); return call(this.ObjectAddress, steamIDFriend, ref pulGameID, ref punGameIP, ref pusGamePort, ref pusQueryPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaNameHistory(IntPtr thisobj, UInt64 steamIDFriend, Int32 iPersonaName);
		public string GetFriendPersonaNameHistory(UInt64 steamIDFriend, Int32 iPersonaName) { var call = this.GetFunction<NativeGetFriendPersonaNameHistory>(this.Functions.GetFriendPersonaNameHistory); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDFriend, iPersonaName) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeHasFriend(IntPtr thisobj, UInt64 steamIDFriend, EFriendFlags eFriendFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool HasFriend(UInt64 steamIDFriend, EFriendFlags eFriendFlags) { var call = this.GetFunction<NativeHasFriend>(this.Functions.HasFriend); return call(this.ObjectAddress, steamIDFriend, eFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetClanCount(IntPtr thisobj);
		public Int32 GetClanCount() { var call = this.GetFunction<NativeGetClanCount>(this.Functions.GetClanCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetClanByIndex(IntPtr thisobj, ref UInt64 ret, Int32 iClan);
		public UInt64 GetClanByIndex(Int32 iClan) { UInt64 ret = 0; var call = this.GetFunction<NativeGetClanByIndex>(this.Functions.GetClanByIndex); call(this.ObjectAddress, ref ret, iClan); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetClanName(IntPtr thisobj, UInt64 steamIDClan);
		public string GetClanName(UInt64 steamIDClan) { var call = this.GetFunction<NativeGetClanName>(this.Functions.GetClanName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDClan) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendCountFromSource(IntPtr thisobj, UInt64 steamIDSource);
		public Int32 GetFriendCountFromSource(UInt64 steamIDSource) { var call = this.GetFunction<NativeGetFriendCountFromSource>(this.Functions.GetFriendCountFromSource); return call(this.ObjectAddress, steamIDSource); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetFriendFromSourceByIndex(IntPtr thisobj, ref UInt64 ret, UInt64 steamIDSource, Int32 iFriend);
		public UInt64 GetFriendFromSourceByIndex(UInt64 steamIDSource, Int32 iFriend) { UInt64 ret = 0; var call = this.GetFunction<NativeGetFriendFromSourceByIndex>(this.Functions.GetFriendFromSourceByIndex); call(this.ObjectAddress, ref ret, steamIDSource, iFriend); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsUserInSource(IntPtr thisobj, UInt64 steamIDUser, UInt64 steamIDSource);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsUserInSource(UInt64 steamIDUser, UInt64 steamIDSource) { var call = this.GetFunction<NativeIsUserInSource>(this.Functions.IsUserInSource); return call(this.ObjectAddress, steamIDUser, steamIDSource); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetInGameVoiceSpeaking(IntPtr thisobj, UInt64 steamIDUser, [MarshalAs(UnmanagedType.I1)] bool bSpeaking);
		public void SetInGameVoiceSpeaking(UInt64 steamIDUser, [MarshalAs(UnmanagedType.I1)] bool bSpeaking) { var call = this.GetFunction<NativeSetInGameVoiceSpeaking>(this.Functions.SetInGameVoiceSpeaking); call(this.ObjectAddress, steamIDUser, bSpeaking); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlay(IntPtr thisobj, string pchDialog);
		public void ActivateGameOverlay(string pchDialog) { var call = this.GetFunction<NativeActivateGameOverlay>(this.Functions.ActivateGameOverlay); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchDialog ) )); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamFriends005VTable
	{
		public IntPtr GetPersonaName;
		public IntPtr SetPersonaName;
		public IntPtr GetPersonaState;
		public IntPtr GetFriendCount;
		public IntPtr GetFriendByIndex;
		public IntPtr GetFriendRelationship;
		public IntPtr GetFriendPersonaState;
		public IntPtr GetFriendPersonaName;
		public IntPtr GetFriendAvatar;
		public IntPtr GetFriendGamePlayed;
		public IntPtr GetFriendPersonaNameHistory;
		public IntPtr HasFriend;
		public IntPtr GetClanCount;
		public IntPtr GetClanByIndex;
		public IntPtr GetClanName;
		public IntPtr GetFriendCountFromSource;
		public IntPtr GetFriendFromSourceByIndex;
		public IntPtr IsUserInSource;
		public IntPtr SetInGameVoiceSpeaking;
		public IntPtr ActivateGameOverlay;
		public IntPtr ActivateGameOverlayToUser;
		public IntPtr ActivateGameOverlayToWebPage;
		public IntPtr ActivateGameOverlayToStore;
		public IntPtr SetPlayedWith;
	}
	
	public class ISteamFriends005 : NativeWrapper<ISteamFriends005VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetPersonaName(IntPtr thisobj);
		public string GetPersonaName() { var call = this.GetFunction<NativeGetPersonaName>(this.Functions.GetPersonaName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPersonaName(IntPtr thisobj, string pchPersonaName);
		public void SetPersonaName(string pchPersonaName) { var call = this.GetFunction<NativeSetPersonaName>(this.Functions.SetPersonaName); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPersonaName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetPersonaState(IntPtr thisobj);
		public EPersonaState GetPersonaState() { var call = this.GetFunction<NativeGetPersonaState>(this.Functions.GetPersonaState); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendCount(IntPtr thisobj, EFriendFlags eFriendFlags);
		public Int32 GetFriendCount(EFriendFlags eFriendFlags) { var call = this.GetFunction<NativeGetFriendCount>(this.Functions.GetFriendCount); return call(this.ObjectAddress, eFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetFriendByIndex(IntPtr thisobj, ref UInt64 ret, Int32 iFriend, Int32 iFriendFlags);
		public UInt64 GetFriendByIndex(Int32 iFriend, Int32 iFriendFlags) { UInt64 ret = 0; var call = this.GetFunction<NativeGetFriendByIndex>(this.Functions.GetFriendByIndex); call(this.ObjectAddress, ref ret, iFriend, iFriendFlags); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EFriendRelationship NativeGetFriendRelationship(IntPtr thisobj, UInt64 steamIDFriend);
		public EFriendRelationship GetFriendRelationship(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendRelationship>(this.Functions.GetFriendRelationship); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetFriendPersonaState(IntPtr thisobj, UInt64 steamIDFriend);
		public EPersonaState GetFriendPersonaState(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaState>(this.Functions.GetFriendPersonaState); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaName(IntPtr thisobj, UInt64 steamIDFriend);
		public string GetFriendPersonaName(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaName>(this.Functions.GetFriendPersonaName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDFriend) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendAvatar(IntPtr thisobj, UInt64 steamIDFriend, Int32 eAvatarSize);
		public Int32 GetFriendAvatar(UInt64 steamIDFriend, Int32 eAvatarSize) { var call = this.GetFunction<NativeGetFriendAvatar>(this.Functions.GetFriendAvatar); return call(this.ObjectAddress, steamIDFriend, eAvatarSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFriendGamePlayed(IntPtr thisobj, UInt64 steamIDFriend, ref FriendGameInfo_t pFriendGameInfo);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFriendGamePlayed(UInt64 steamIDFriend, ref FriendGameInfo_t pFriendGameInfo) { var call = this.GetFunction<NativeGetFriendGamePlayed>(this.Functions.GetFriendGamePlayed); return call(this.ObjectAddress, steamIDFriend, ref pFriendGameInfo); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaNameHistory(IntPtr thisobj, UInt64 steamIDFriend, Int32 iPersonaName);
		public string GetFriendPersonaNameHistory(UInt64 steamIDFriend, Int32 iPersonaName) { var call = this.GetFunction<NativeGetFriendPersonaNameHistory>(this.Functions.GetFriendPersonaNameHistory); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDFriend, iPersonaName) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeHasFriend(IntPtr thisobj, UInt64 steamIDFriend, EFriendFlags eFriendFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool HasFriend(UInt64 steamIDFriend, EFriendFlags eFriendFlags) { var call = this.GetFunction<NativeHasFriend>(this.Functions.HasFriend); return call(this.ObjectAddress, steamIDFriend, eFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetClanCount(IntPtr thisobj);
		public Int32 GetClanCount() { var call = this.GetFunction<NativeGetClanCount>(this.Functions.GetClanCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetClanByIndex(IntPtr thisobj, ref UInt64 ret, Int32 iClan);
		public UInt64 GetClanByIndex(Int32 iClan) { UInt64 ret = 0; var call = this.GetFunction<NativeGetClanByIndex>(this.Functions.GetClanByIndex); call(this.ObjectAddress, ref ret, iClan); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetClanName(IntPtr thisobj, UInt64 steamIDClan);
		public string GetClanName(UInt64 steamIDClan) { var call = this.GetFunction<NativeGetClanName>(this.Functions.GetClanName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDClan) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendCountFromSource(IntPtr thisobj, UInt64 steamIDSource);
		public Int32 GetFriendCountFromSource(UInt64 steamIDSource) { var call = this.GetFunction<NativeGetFriendCountFromSource>(this.Functions.GetFriendCountFromSource); return call(this.ObjectAddress, steamIDSource); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetFriendFromSourceByIndex(IntPtr thisobj, ref UInt64 ret, UInt64 steamIDSource, Int32 iFriend);
		public UInt64 GetFriendFromSourceByIndex(UInt64 steamIDSource, Int32 iFriend) { UInt64 ret = 0; var call = this.GetFunction<NativeGetFriendFromSourceByIndex>(this.Functions.GetFriendFromSourceByIndex); call(this.ObjectAddress, ref ret, steamIDSource, iFriend); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsUserInSource(IntPtr thisobj, UInt64 steamIDUser, UInt64 steamIDSource);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsUserInSource(UInt64 steamIDUser, UInt64 steamIDSource) { var call = this.GetFunction<NativeIsUserInSource>(this.Functions.IsUserInSource); return call(this.ObjectAddress, steamIDUser, steamIDSource); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetInGameVoiceSpeaking(IntPtr thisobj, UInt64 steamIDUser, [MarshalAs(UnmanagedType.I1)] bool bSpeaking);
		public void SetInGameVoiceSpeaking(UInt64 steamIDUser, [MarshalAs(UnmanagedType.I1)] bool bSpeaking) { var call = this.GetFunction<NativeSetInGameVoiceSpeaking>(this.Functions.SetInGameVoiceSpeaking); call(this.ObjectAddress, steamIDUser, bSpeaking); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlay(IntPtr thisobj, string pchDialog);
		public void ActivateGameOverlay(string pchDialog) { var call = this.GetFunction<NativeActivateGameOverlay>(this.Functions.ActivateGameOverlay); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchDialog ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlayToUser(IntPtr thisobj, string pchDialog, UInt64 steamID);
		public void ActivateGameOverlayToUser(string pchDialog, UInt64 steamID) { var call = this.GetFunction<NativeActivateGameOverlayToUser>(this.Functions.ActivateGameOverlayToUser); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchDialog ) ), steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlayToWebPage(IntPtr thisobj, string pchURL);
		public void ActivateGameOverlayToWebPage(string pchURL) { var call = this.GetFunction<NativeActivateGameOverlayToWebPage>(this.Functions.ActivateGameOverlayToWebPage); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchURL ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlayToStore(IntPtr thisobj, UInt32 nAppID);
		public void ActivateGameOverlayToStore(UInt32 nAppID) { var call = this.GetFunction<NativeActivateGameOverlayToStore>(this.Functions.ActivateGameOverlayToStore); call(this.ObjectAddress, nAppID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPlayedWith(IntPtr thisobj, UInt64 steamIDUserPlayedWith);
		public void SetPlayedWith(UInt64 steamIDUserPlayedWith) { var call = this.GetFunction<NativeSetPlayedWith>(this.Functions.SetPlayedWith); call(this.ObjectAddress, steamIDUserPlayedWith); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamFriends007VTable
	{
		public IntPtr GetPersonaName;
		public IntPtr SetPersonaName;
		public IntPtr GetPersonaState;
		public IntPtr GetFriendCount;
		public IntPtr GetFriendByIndex;
		public IntPtr GetFriendRelationship;
		public IntPtr GetFriendPersonaState;
		public IntPtr GetFriendPersonaName;
		public IntPtr GetFriendGamePlayed;
		public IntPtr GetFriendPersonaNameHistory;
		public IntPtr HasFriend;
		public IntPtr GetClanCount;
		public IntPtr GetClanByIndex;
		public IntPtr GetClanName;
		public IntPtr GetClanTag;
		public IntPtr GetFriendCountFromSource;
		public IntPtr GetFriendFromSourceByIndex;
		public IntPtr IsUserInSource;
		public IntPtr SetInGameVoiceSpeaking;
		public IntPtr ActivateGameOverlay;
		public IntPtr ActivateGameOverlayToUser;
		public IntPtr ActivateGameOverlayToWebPage;
		public IntPtr ActivateGameOverlayToStore;
		public IntPtr SetPlayedWith;
		public IntPtr ActivateGameOverlayInviteDialog;
		public IntPtr GetSmallFriendAvatar;
		public IntPtr GetMediumFriendAvatar;
		public IntPtr GetLargeFriendAvatar;
	}
	
	public class ISteamFriends007 : NativeWrapper<ISteamFriends007VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetPersonaName(IntPtr thisobj);
		public string GetPersonaName() { var call = this.GetFunction<NativeGetPersonaName>(this.Functions.GetPersonaName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPersonaName(IntPtr thisobj, string pchPersonaName);
		public void SetPersonaName(string pchPersonaName) { var call = this.GetFunction<NativeSetPersonaName>(this.Functions.SetPersonaName); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPersonaName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetPersonaState(IntPtr thisobj);
		public EPersonaState GetPersonaState() { var call = this.GetFunction<NativeGetPersonaState>(this.Functions.GetPersonaState); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendCount(IntPtr thisobj, EFriendFlags eFriendFlags);
		public Int32 GetFriendCount(EFriendFlags eFriendFlags) { var call = this.GetFunction<NativeGetFriendCount>(this.Functions.GetFriendCount); return call(this.ObjectAddress, eFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetFriendByIndex(IntPtr thisobj, ref UInt64 ret, Int32 iFriend, Int32 iFriendFlags);
		public UInt64 GetFriendByIndex(Int32 iFriend, Int32 iFriendFlags) { UInt64 ret = 0; var call = this.GetFunction<NativeGetFriendByIndex>(this.Functions.GetFriendByIndex); call(this.ObjectAddress, ref ret, iFriend, iFriendFlags); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EFriendRelationship NativeGetFriendRelationship(IntPtr thisobj, UInt64 steamIDFriend);
		public EFriendRelationship GetFriendRelationship(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendRelationship>(this.Functions.GetFriendRelationship); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetFriendPersonaState(IntPtr thisobj, UInt64 steamIDFriend);
		public EPersonaState GetFriendPersonaState(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaState>(this.Functions.GetFriendPersonaState); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaName(IntPtr thisobj, UInt64 steamIDFriend);
		public string GetFriendPersonaName(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaName>(this.Functions.GetFriendPersonaName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDFriend) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFriendGamePlayed(IntPtr thisobj, UInt64 steamIDFriend, ref FriendGameInfo_t pFriendGameInfo);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFriendGamePlayed(UInt64 steamIDFriend, ref FriendGameInfo_t pFriendGameInfo) { var call = this.GetFunction<NativeGetFriendGamePlayed>(this.Functions.GetFriendGamePlayed); return call(this.ObjectAddress, steamIDFriend, ref pFriendGameInfo); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaNameHistory(IntPtr thisobj, UInt64 steamIDFriend, Int32 iPersonaName);
		public string GetFriendPersonaNameHistory(UInt64 steamIDFriend, Int32 iPersonaName) { var call = this.GetFunction<NativeGetFriendPersonaNameHistory>(this.Functions.GetFriendPersonaNameHistory); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDFriend, iPersonaName) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeHasFriend(IntPtr thisobj, UInt64 steamIDFriend, EFriendFlags eFriendFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool HasFriend(UInt64 steamIDFriend, EFriendFlags eFriendFlags) { var call = this.GetFunction<NativeHasFriend>(this.Functions.HasFriend); return call(this.ObjectAddress, steamIDFriend, eFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetClanCount(IntPtr thisobj);
		public Int32 GetClanCount() { var call = this.GetFunction<NativeGetClanCount>(this.Functions.GetClanCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetClanByIndex(IntPtr thisobj, ref UInt64 ret, Int32 iClan);
		public UInt64 GetClanByIndex(Int32 iClan) { UInt64 ret = 0; var call = this.GetFunction<NativeGetClanByIndex>(this.Functions.GetClanByIndex); call(this.ObjectAddress, ref ret, iClan); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetClanName(IntPtr thisobj, UInt64 steamIDClan);
		public string GetClanName(UInt64 steamIDClan) { var call = this.GetFunction<NativeGetClanName>(this.Functions.GetClanName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDClan) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetClanTag(IntPtr thisobj, UInt64 steamIDClan);
		public string GetClanTag(UInt64 steamIDClan) { var call = this.GetFunction<NativeGetClanTag>(this.Functions.GetClanTag); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDClan) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendCountFromSource(IntPtr thisobj, UInt64 steamIDSource);
		public Int32 GetFriendCountFromSource(UInt64 steamIDSource) { var call = this.GetFunction<NativeGetFriendCountFromSource>(this.Functions.GetFriendCountFromSource); return call(this.ObjectAddress, steamIDSource); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetFriendFromSourceByIndex(IntPtr thisobj, ref UInt64 ret, UInt64 steamIDSource, Int32 iFriend);
		public UInt64 GetFriendFromSourceByIndex(UInt64 steamIDSource, Int32 iFriend) { UInt64 ret = 0; var call = this.GetFunction<NativeGetFriendFromSourceByIndex>(this.Functions.GetFriendFromSourceByIndex); call(this.ObjectAddress, ref ret, steamIDSource, iFriend); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsUserInSource(IntPtr thisobj, UInt64 steamIDUser, UInt64 steamIDSource);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsUserInSource(UInt64 steamIDUser, UInt64 steamIDSource) { var call = this.GetFunction<NativeIsUserInSource>(this.Functions.IsUserInSource); return call(this.ObjectAddress, steamIDUser, steamIDSource); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetInGameVoiceSpeaking(IntPtr thisobj, UInt64 steamIDUser, [MarshalAs(UnmanagedType.I1)] bool bSpeaking);
		public void SetInGameVoiceSpeaking(UInt64 steamIDUser, [MarshalAs(UnmanagedType.I1)] bool bSpeaking) { var call = this.GetFunction<NativeSetInGameVoiceSpeaking>(this.Functions.SetInGameVoiceSpeaking); call(this.ObjectAddress, steamIDUser, bSpeaking); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlay(IntPtr thisobj, string pchDialog);
		public void ActivateGameOverlay(string pchDialog) { var call = this.GetFunction<NativeActivateGameOverlay>(this.Functions.ActivateGameOverlay); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchDialog ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlayToUser(IntPtr thisobj, string pchDialog, UInt64 steamID);
		public void ActivateGameOverlayToUser(string pchDialog, UInt64 steamID) { var call = this.GetFunction<NativeActivateGameOverlayToUser>(this.Functions.ActivateGameOverlayToUser); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchDialog ) ), steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlayToWebPage(IntPtr thisobj, string pchURL);
		public void ActivateGameOverlayToWebPage(string pchURL) { var call = this.GetFunction<NativeActivateGameOverlayToWebPage>(this.Functions.ActivateGameOverlayToWebPage); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchURL ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlayToStore(IntPtr thisobj, UInt32 nAppID);
		public void ActivateGameOverlayToStore(UInt32 nAppID) { var call = this.GetFunction<NativeActivateGameOverlayToStore>(this.Functions.ActivateGameOverlayToStore); call(this.ObjectAddress, nAppID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPlayedWith(IntPtr thisobj, UInt64 steamIDUserPlayedWith);
		public void SetPlayedWith(UInt64 steamIDUserPlayedWith) { var call = this.GetFunction<NativeSetPlayedWith>(this.Functions.SetPlayedWith); call(this.ObjectAddress, steamIDUserPlayedWith); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlayInviteDialog(IntPtr thisobj, UInt64 steamIDLobby);
		public void ActivateGameOverlayInviteDialog(UInt64 steamIDLobby) { var call = this.GetFunction<NativeActivateGameOverlayInviteDialog>(this.Functions.ActivateGameOverlayInviteDialog); call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSmallFriendAvatar(IntPtr thisobj, UInt64 steamIDFriend);
		public Int32 GetSmallFriendAvatar(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetSmallFriendAvatar>(this.Functions.GetSmallFriendAvatar); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetMediumFriendAvatar(IntPtr thisobj, UInt64 steamIDFriend);
		public Int32 GetMediumFriendAvatar(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetMediumFriendAvatar>(this.Functions.GetMediumFriendAvatar); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLargeFriendAvatar(IntPtr thisobj, UInt64 steamIDFriend);
		public Int32 GetLargeFriendAvatar(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetLargeFriendAvatar>(this.Functions.GetLargeFriendAvatar); return call(this.ObjectAddress, steamIDFriend); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamFriends009VTable
	{
		public IntPtr GetPersonaName;
		public IntPtr SetPersonaName;
		public IntPtr GetPersonaState;
		public IntPtr GetFriendCount;
		public IntPtr GetFriendByIndex;
		public IntPtr GetFriendRelationship;
		public IntPtr GetFriendPersonaState;
		public IntPtr GetFriendPersonaName;
		public IntPtr GetFriendGamePlayed;
		public IntPtr GetFriendPersonaNameHistory;
		public IntPtr HasFriend;
		public IntPtr GetClanCount;
		public IntPtr GetClanByIndex;
		public IntPtr GetClanName;
		public IntPtr GetClanTag;
		public IntPtr GetFriendCountFromSource;
		public IntPtr GetFriendFromSourceByIndex;
		public IntPtr IsUserInSource;
		public IntPtr SetInGameVoiceSpeaking;
		public IntPtr ActivateGameOverlay;
		public IntPtr ActivateGameOverlayToUser;
		public IntPtr ActivateGameOverlayToWebPage;
		public IntPtr ActivateGameOverlayToStore;
		public IntPtr SetPlayedWith;
		public IntPtr ActivateGameOverlayInviteDialog;
		public IntPtr GetSmallFriendAvatar;
		public IntPtr GetMediumFriendAvatar;
		public IntPtr GetLargeFriendAvatar;
		public IntPtr RequestUserInformation;
		public IntPtr RequestClanOfficerList;
		public IntPtr GetClanOwner;
		public IntPtr GetClanOfficerCount;
		public IntPtr GetClanOfficerByIndex;
		public IntPtr GetUserRestrictions;
		public IntPtr SetRichPresence;
		public IntPtr ClearRichPresence;
		public IntPtr GetFriendRichPresence;
		public IntPtr GetFriendRichPresenceKeyCount;
		public IntPtr GetFriendRichPresenceKeyByIndex;
		public IntPtr InviteUserToGame;
		public IntPtr GetCoplayFriendCount;
		public IntPtr GetCoplayFriend;
		public IntPtr GetFriendCoplayTime;
		public IntPtr GetFriendCoplayGame;
	}
	
	public class ISteamFriends009 : NativeWrapper<ISteamFriends009VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetPersonaName(IntPtr thisobj);
		public string GetPersonaName() { var call = this.GetFunction<NativeGetPersonaName>(this.Functions.GetPersonaName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPersonaName(IntPtr thisobj, string pchPersonaName);
		public void SetPersonaName(string pchPersonaName) { var call = this.GetFunction<NativeSetPersonaName>(this.Functions.SetPersonaName); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPersonaName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetPersonaState(IntPtr thisobj);
		public EPersonaState GetPersonaState() { var call = this.GetFunction<NativeGetPersonaState>(this.Functions.GetPersonaState); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendCount(IntPtr thisobj, EFriendFlags eFriendFlags);
		public Int32 GetFriendCount(EFriendFlags eFriendFlags) { var call = this.GetFunction<NativeGetFriendCount>(this.Functions.GetFriendCount); return call(this.ObjectAddress, eFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetFriendByIndex(IntPtr thisobj, ref UInt64 ret, Int32 iFriend, Int32 iFriendFlags);
		public UInt64 GetFriendByIndex(Int32 iFriend, Int32 iFriendFlags) { UInt64 ret = 0; var call = this.GetFunction<NativeGetFriendByIndex>(this.Functions.GetFriendByIndex); call(this.ObjectAddress, ref ret, iFriend, iFriendFlags); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EFriendRelationship NativeGetFriendRelationship(IntPtr thisobj, UInt64 steamIDFriend);
		public EFriendRelationship GetFriendRelationship(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendRelationship>(this.Functions.GetFriendRelationship); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetFriendPersonaState(IntPtr thisobj, UInt64 steamIDFriend);
		public EPersonaState GetFriendPersonaState(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaState>(this.Functions.GetFriendPersonaState); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaName(IntPtr thisobj, UInt64 steamIDFriend);
		public string GetFriendPersonaName(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaName>(this.Functions.GetFriendPersonaName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDFriend) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFriendGamePlayed(IntPtr thisobj, UInt64 steamIDFriend, ref FriendGameInfo_t pFriendGameInfo);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFriendGamePlayed(UInt64 steamIDFriend, ref FriendGameInfo_t pFriendGameInfo) { var call = this.GetFunction<NativeGetFriendGamePlayed>(this.Functions.GetFriendGamePlayed); return call(this.ObjectAddress, steamIDFriend, ref pFriendGameInfo); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaNameHistory(IntPtr thisobj, UInt64 steamIDFriend, Int32 iPersonaName);
		public string GetFriendPersonaNameHistory(UInt64 steamIDFriend, Int32 iPersonaName) { var call = this.GetFunction<NativeGetFriendPersonaNameHistory>(this.Functions.GetFriendPersonaNameHistory); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDFriend, iPersonaName) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeHasFriend(IntPtr thisobj, UInt64 steamIDFriend, EFriendFlags eFriendFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool HasFriend(UInt64 steamIDFriend, EFriendFlags eFriendFlags) { var call = this.GetFunction<NativeHasFriend>(this.Functions.HasFriend); return call(this.ObjectAddress, steamIDFriend, eFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetClanCount(IntPtr thisobj);
		public Int32 GetClanCount() { var call = this.GetFunction<NativeGetClanCount>(this.Functions.GetClanCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetClanByIndex(IntPtr thisobj, ref UInt64 ret, Int32 iClan);
		public UInt64 GetClanByIndex(Int32 iClan) { UInt64 ret = 0; var call = this.GetFunction<NativeGetClanByIndex>(this.Functions.GetClanByIndex); call(this.ObjectAddress, ref ret, iClan); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetClanName(IntPtr thisobj, UInt64 steamIDClan);
		public string GetClanName(UInt64 steamIDClan) { var call = this.GetFunction<NativeGetClanName>(this.Functions.GetClanName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDClan) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetClanTag(IntPtr thisobj, UInt64 steamIDClan);
		public string GetClanTag(UInt64 steamIDClan) { var call = this.GetFunction<NativeGetClanTag>(this.Functions.GetClanTag); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDClan) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendCountFromSource(IntPtr thisobj, UInt64 steamIDSource);
		public Int32 GetFriendCountFromSource(UInt64 steamIDSource) { var call = this.GetFunction<NativeGetFriendCountFromSource>(this.Functions.GetFriendCountFromSource); return call(this.ObjectAddress, steamIDSource); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetFriendFromSourceByIndex(IntPtr thisobj, ref UInt64 ret, UInt64 steamIDSource, Int32 iFriend);
		public UInt64 GetFriendFromSourceByIndex(UInt64 steamIDSource, Int32 iFriend) { UInt64 ret = 0; var call = this.GetFunction<NativeGetFriendFromSourceByIndex>(this.Functions.GetFriendFromSourceByIndex); call(this.ObjectAddress, ref ret, steamIDSource, iFriend); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsUserInSource(IntPtr thisobj, UInt64 steamIDUser, UInt64 steamIDSource);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsUserInSource(UInt64 steamIDUser, UInt64 steamIDSource) { var call = this.GetFunction<NativeIsUserInSource>(this.Functions.IsUserInSource); return call(this.ObjectAddress, steamIDUser, steamIDSource); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetInGameVoiceSpeaking(IntPtr thisobj, UInt64 steamIDUser, [MarshalAs(UnmanagedType.I1)] bool bSpeaking);
		public void SetInGameVoiceSpeaking(UInt64 steamIDUser, [MarshalAs(UnmanagedType.I1)] bool bSpeaking) { var call = this.GetFunction<NativeSetInGameVoiceSpeaking>(this.Functions.SetInGameVoiceSpeaking); call(this.ObjectAddress, steamIDUser, bSpeaking); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlay(IntPtr thisobj, string pchDialog);
		public void ActivateGameOverlay(string pchDialog) { var call = this.GetFunction<NativeActivateGameOverlay>(this.Functions.ActivateGameOverlay); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchDialog ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlayToUser(IntPtr thisobj, string pchDialog, UInt64 steamID);
		public void ActivateGameOverlayToUser(string pchDialog, UInt64 steamID) { var call = this.GetFunction<NativeActivateGameOverlayToUser>(this.Functions.ActivateGameOverlayToUser); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchDialog ) ), steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlayToWebPage(IntPtr thisobj, string pchURL);
		public void ActivateGameOverlayToWebPage(string pchURL) { var call = this.GetFunction<NativeActivateGameOverlayToWebPage>(this.Functions.ActivateGameOverlayToWebPage); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchURL ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlayToStore(IntPtr thisobj, UInt32 nAppID);
		public void ActivateGameOverlayToStore(UInt32 nAppID) { var call = this.GetFunction<NativeActivateGameOverlayToStore>(this.Functions.ActivateGameOverlayToStore); call(this.ObjectAddress, nAppID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPlayedWith(IntPtr thisobj, UInt64 steamIDUserPlayedWith);
		public void SetPlayedWith(UInt64 steamIDUserPlayedWith) { var call = this.GetFunction<NativeSetPlayedWith>(this.Functions.SetPlayedWith); call(this.ObjectAddress, steamIDUserPlayedWith); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlayInviteDialog(IntPtr thisobj, UInt64 steamIDLobby);
		public void ActivateGameOverlayInviteDialog(UInt64 steamIDLobby) { var call = this.GetFunction<NativeActivateGameOverlayInviteDialog>(this.Functions.ActivateGameOverlayInviteDialog); call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSmallFriendAvatar(IntPtr thisobj, UInt64 steamIDFriend);
		public Int32 GetSmallFriendAvatar(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetSmallFriendAvatar>(this.Functions.GetSmallFriendAvatar); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetMediumFriendAvatar(IntPtr thisobj, UInt64 steamIDFriend);
		public Int32 GetMediumFriendAvatar(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetMediumFriendAvatar>(this.Functions.GetMediumFriendAvatar); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLargeFriendAvatar(IntPtr thisobj, UInt64 steamIDFriend);
		public Int32 GetLargeFriendAvatar(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetLargeFriendAvatar>(this.Functions.GetLargeFriendAvatar); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestUserInformation(IntPtr thisobj, UInt64 steamID, Byte unk1);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestUserInformation(UInt64 steamID, Byte unk1) { var call = this.GetFunction<NativeRequestUserInformation>(this.Functions.RequestUserInformation); return call(this.ObjectAddress, steamID, unk1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestClanOfficerList(IntPtr thisobj, UInt64 clanId);
		public UInt64 RequestClanOfficerList(UInt64 clanId) { var call = this.GetFunction<NativeRequestClanOfficerList>(this.Functions.RequestClanOfficerList); return call(this.ObjectAddress, clanId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetClanOwner(IntPtr thisobj, ref UInt64 ret, UInt64 clanId);
		public UInt64 GetClanOwner(UInt64 clanId) { UInt64 ret = 0; var call = this.GetFunction<NativeGetClanOwner>(this.Functions.GetClanOwner); call(this.ObjectAddress, ref ret, clanId); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetClanOfficerCount(IntPtr thisobj, UInt64 clanId);
		public Int32 GetClanOfficerCount(UInt64 clanId) { var call = this.GetFunction<NativeGetClanOfficerCount>(this.Functions.GetClanOfficerCount); return call(this.ObjectAddress, clanId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetClanOfficerByIndex(IntPtr thisobj, ref UInt64 ret, UInt64 clanId, Int32 iIndex);
		public UInt64 GetClanOfficerByIndex(UInt64 clanId, Int32 iIndex) { UInt64 ret = 0; var call = this.GetFunction<NativeGetClanOfficerByIndex>(this.Functions.GetClanOfficerByIndex); call(this.ObjectAddress, ref ret, clanId, iIndex); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetUserRestrictions(IntPtr thisobj);
		public Int32 GetUserRestrictions() { var call = this.GetFunction<NativeGetUserRestrictions>(this.Functions.GetUserRestrictions); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetRichPresence(IntPtr thisobj, string szKey, string szValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetRichPresence(string szKey, string szValue) { var call = this.GetFunction<NativeSetRichPresence>(this.Functions.SetRichPresence); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( szValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeClearRichPresence(IntPtr thisobj);
		public void ClearRichPresence() { var call = this.GetFunction<NativeClearRichPresence>(this.Functions.ClearRichPresence); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendRichPresence(IntPtr thisobj, UInt64 steamIDFriend, string szKey);
		public string GetFriendRichPresence(UInt64 steamIDFriend, string szKey) { var call = this.GetFunction<NativeGetFriendRichPresence>(this.Functions.GetFriendRichPresence); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDFriend, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendRichPresenceKeyCount(IntPtr thisobj, UInt64 steamIDFriend);
		public Int32 GetFriendRichPresenceKeyCount(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendRichPresenceKeyCount>(this.Functions.GetFriendRichPresenceKeyCount); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendRichPresenceKeyByIndex(IntPtr thisobj, UInt64 steamIDFriend, Int32 iIndex);
		public string GetFriendRichPresenceKeyByIndex(UInt64 steamIDFriend, Int32 iIndex) { var call = this.GetFunction<NativeGetFriendRichPresenceKeyByIndex>(this.Functions.GetFriendRichPresenceKeyByIndex); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDFriend, iIndex) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeInviteUserToGame(IntPtr thisobj, UInt64 steamID, string szUnk);
		[return: MarshalAs(UnmanagedType.I1)] public bool InviteUserToGame(UInt64 steamID, string szUnk) { var call = this.GetFunction<NativeInviteUserToGame>(this.Functions.InviteUserToGame); return call(this.ObjectAddress, steamID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szUnk ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCoplayFriendCount(IntPtr thisobj);
		public Int32 GetCoplayFriendCount() { var call = this.GetFunction<NativeGetCoplayFriendCount>(this.Functions.GetCoplayFriendCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetCoplayFriend(IntPtr thisobj, ref UInt64 ret, Int32 iIndex);
		public UInt64 GetCoplayFriend(Int32 iIndex) { UInt64 ret = 0; var call = this.GetFunction<NativeGetCoplayFriend>(this.Functions.GetCoplayFriend); call(this.ObjectAddress, ref ret, iIndex); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetFriendCoplayTime(IntPtr thisobj, UInt64 steamID);
		public UInt32 GetFriendCoplayTime(UInt64 steamID) { var call = this.GetFunction<NativeGetFriendCoplayTime>(this.Functions.GetFriendCoplayTime); return call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetFriendCoplayGame(IntPtr thisobj, UInt64 steamID);
		public UInt32 GetFriendCoplayGame(UInt64 steamID) { var call = this.GetFunction<NativeGetFriendCoplayGame>(this.Functions.GetFriendCoplayGame); return call(this.ObjectAddress, steamID); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamFriends006VTable
	{
		public IntPtr GetPersonaName;
		public IntPtr SetPersonaName;
		public IntPtr GetPersonaState;
		public IntPtr GetFriendCount;
		public IntPtr GetFriendByIndex;
		public IntPtr GetFriendRelationship;
		public IntPtr GetFriendPersonaState;
		public IntPtr GetFriendPersonaName;
		public IntPtr GetFriendAvatar;
		public IntPtr GetFriendGamePlayed;
		public IntPtr GetFriendPersonaNameHistory;
		public IntPtr HasFriend;
		public IntPtr GetClanCount;
		public IntPtr GetClanByIndex;
		public IntPtr GetClanName;
		public IntPtr GetClanTag;
		public IntPtr GetFriendCountFromSource;
		public IntPtr GetFriendFromSourceByIndex;
		public IntPtr IsUserInSource;
		public IntPtr SetInGameVoiceSpeaking;
		public IntPtr ActivateGameOverlay;
		public IntPtr ActivateGameOverlayToUser;
		public IntPtr ActivateGameOverlayToWebPage;
		public IntPtr ActivateGameOverlayToStore;
		public IntPtr SetPlayedWith;
		public IntPtr ActivateGameOverlayInviteDialog;
	}
	
	public class ISteamFriends006 : NativeWrapper<ISteamFriends006VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetPersonaName(IntPtr thisobj);
		public string GetPersonaName() { var call = this.GetFunction<NativeGetPersonaName>(this.Functions.GetPersonaName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPersonaName(IntPtr thisobj, string pchPersonaName);
		public void SetPersonaName(string pchPersonaName) { var call = this.GetFunction<NativeSetPersonaName>(this.Functions.SetPersonaName); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPersonaName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetPersonaState(IntPtr thisobj);
		public EPersonaState GetPersonaState() { var call = this.GetFunction<NativeGetPersonaState>(this.Functions.GetPersonaState); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendCount(IntPtr thisobj, EFriendFlags eFriendFlags);
		public Int32 GetFriendCount(EFriendFlags eFriendFlags) { var call = this.GetFunction<NativeGetFriendCount>(this.Functions.GetFriendCount); return call(this.ObjectAddress, eFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetFriendByIndex(IntPtr thisobj, ref UInt64 ret, Int32 iFriend, Int32 iFriendFlags);
		public UInt64 GetFriendByIndex(Int32 iFriend, Int32 iFriendFlags) { UInt64 ret = 0; var call = this.GetFunction<NativeGetFriendByIndex>(this.Functions.GetFriendByIndex); call(this.ObjectAddress, ref ret, iFriend, iFriendFlags); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EFriendRelationship NativeGetFriendRelationship(IntPtr thisobj, UInt64 steamIDFriend);
		public EFriendRelationship GetFriendRelationship(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendRelationship>(this.Functions.GetFriendRelationship); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetFriendPersonaState(IntPtr thisobj, UInt64 steamIDFriend);
		public EPersonaState GetFriendPersonaState(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaState>(this.Functions.GetFriendPersonaState); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaName(IntPtr thisobj, UInt64 steamIDFriend);
		public string GetFriendPersonaName(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaName>(this.Functions.GetFriendPersonaName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDFriend) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendAvatar(IntPtr thisobj, UInt64 steamIDFriend, Int32 eAvatarSize);
		public Int32 GetFriendAvatar(UInt64 steamIDFriend, Int32 eAvatarSize) { var call = this.GetFunction<NativeGetFriendAvatar>(this.Functions.GetFriendAvatar); return call(this.ObjectAddress, steamIDFriend, eAvatarSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFriendGamePlayed(IntPtr thisobj, UInt64 steamIDFriend, ref FriendGameInfo_t pFriendGameInfo);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFriendGamePlayed(UInt64 steamIDFriend, ref FriendGameInfo_t pFriendGameInfo) { var call = this.GetFunction<NativeGetFriendGamePlayed>(this.Functions.GetFriendGamePlayed); return call(this.ObjectAddress, steamIDFriend, ref pFriendGameInfo); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaNameHistory(IntPtr thisobj, UInt64 steamIDFriend, Int32 iPersonaName);
		public string GetFriendPersonaNameHistory(UInt64 steamIDFriend, Int32 iPersonaName) { var call = this.GetFunction<NativeGetFriendPersonaNameHistory>(this.Functions.GetFriendPersonaNameHistory); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDFriend, iPersonaName) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeHasFriend(IntPtr thisobj, UInt64 steamIDFriend, EFriendFlags eFriendFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool HasFriend(UInt64 steamIDFriend, EFriendFlags eFriendFlags) { var call = this.GetFunction<NativeHasFriend>(this.Functions.HasFriend); return call(this.ObjectAddress, steamIDFriend, eFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetClanCount(IntPtr thisobj);
		public Int32 GetClanCount() { var call = this.GetFunction<NativeGetClanCount>(this.Functions.GetClanCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetClanByIndex(IntPtr thisobj, ref UInt64 ret, Int32 iClan);
		public UInt64 GetClanByIndex(Int32 iClan) { UInt64 ret = 0; var call = this.GetFunction<NativeGetClanByIndex>(this.Functions.GetClanByIndex); call(this.ObjectAddress, ref ret, iClan); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetClanName(IntPtr thisobj, UInt64 steamIDClan);
		public string GetClanName(UInt64 steamIDClan) { var call = this.GetFunction<NativeGetClanName>(this.Functions.GetClanName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDClan) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetClanTag(IntPtr thisobj, UInt64 steamIDClan);
		public string GetClanTag(UInt64 steamIDClan) { var call = this.GetFunction<NativeGetClanTag>(this.Functions.GetClanTag); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDClan) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendCountFromSource(IntPtr thisobj, UInt64 steamIDSource);
		public Int32 GetFriendCountFromSource(UInt64 steamIDSource) { var call = this.GetFunction<NativeGetFriendCountFromSource>(this.Functions.GetFriendCountFromSource); return call(this.ObjectAddress, steamIDSource); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetFriendFromSourceByIndex(IntPtr thisobj, ref UInt64 ret, UInt64 steamIDSource, Int32 iFriend);
		public UInt64 GetFriendFromSourceByIndex(UInt64 steamIDSource, Int32 iFriend) { UInt64 ret = 0; var call = this.GetFunction<NativeGetFriendFromSourceByIndex>(this.Functions.GetFriendFromSourceByIndex); call(this.ObjectAddress, ref ret, steamIDSource, iFriend); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsUserInSource(IntPtr thisobj, UInt64 steamIDUser, UInt64 steamIDSource);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsUserInSource(UInt64 steamIDUser, UInt64 steamIDSource) { var call = this.GetFunction<NativeIsUserInSource>(this.Functions.IsUserInSource); return call(this.ObjectAddress, steamIDUser, steamIDSource); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetInGameVoiceSpeaking(IntPtr thisobj, UInt64 steamIDUser, [MarshalAs(UnmanagedType.I1)] bool bSpeaking);
		public void SetInGameVoiceSpeaking(UInt64 steamIDUser, [MarshalAs(UnmanagedType.I1)] bool bSpeaking) { var call = this.GetFunction<NativeSetInGameVoiceSpeaking>(this.Functions.SetInGameVoiceSpeaking); call(this.ObjectAddress, steamIDUser, bSpeaking); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlay(IntPtr thisobj, string pchDialog);
		public void ActivateGameOverlay(string pchDialog) { var call = this.GetFunction<NativeActivateGameOverlay>(this.Functions.ActivateGameOverlay); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchDialog ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlayToUser(IntPtr thisobj, string pchDialog, UInt64 steamID);
		public void ActivateGameOverlayToUser(string pchDialog, UInt64 steamID) { var call = this.GetFunction<NativeActivateGameOverlayToUser>(this.Functions.ActivateGameOverlayToUser); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchDialog ) ), steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlayToWebPage(IntPtr thisobj, string pchURL);
		public void ActivateGameOverlayToWebPage(string pchURL) { var call = this.GetFunction<NativeActivateGameOverlayToWebPage>(this.Functions.ActivateGameOverlayToWebPage); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchURL ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlayToStore(IntPtr thisobj, UInt32 nAppID);
		public void ActivateGameOverlayToStore(UInt32 nAppID) { var call = this.GetFunction<NativeActivateGameOverlayToStore>(this.Functions.ActivateGameOverlayToStore); call(this.ObjectAddress, nAppID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPlayedWith(IntPtr thisobj, UInt64 steamIDUserPlayedWith);
		public void SetPlayedWith(UInt64 steamIDUserPlayedWith) { var call = this.GetFunction<NativeSetPlayedWith>(this.Functions.SetPlayedWith); call(this.ObjectAddress, steamIDUserPlayedWith); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlayInviteDialog(IntPtr thisobj, UInt64 steamIDLobby);
		public void ActivateGameOverlayInviteDialog(UInt64 steamIDLobby) { var call = this.GetFunction<NativeActivateGameOverlayInviteDialog>(this.Functions.ActivateGameOverlayInviteDialog); call(this.ObjectAddress, steamIDLobby); }

	}

    [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi, Pack = 1)]
    public class IClientFriendsVTable
    {
        public IntPtr GetPersonaName;
        public IntPtr SetPersonaName;
        public IntPtr IsPersonaNameSet;
        public IntPtr GetPersonaState;
        public IntPtr SetPersonaState;
        public IntPtr NotifyUIOfMenuChange;
        public IntPtr GetFriendCount;
        public IntPtr GetFriendByIndex;
        public IntPtr GetOnlineFriendCount;
        public IntPtr GetFriendRelationship;
        public IntPtr GetFriendPersonaState;
        public IntPtr GetFriendPersonaName;
        public IntPtr SetFriendAlias;
        public IntPtr GetSmallFriendAvatar;
        public IntPtr GetMediumFriendAvatar;
        public IntPtr GetLargeFriendAvatar;
        public IntPtr SetFriendRegValue;
        public IntPtr GetFriendRegValue;
        public IntPtr DeleteFriendRegValue;
        public IntPtr GetFriendGamePlayed;
        public IntPtr GetFriendGamePlayedExtraInfo;
        public IntPtr GetFriendGameServer;
        public IntPtr GetFriendPersonaStateFlags;
        public IntPtr IsFriendGameOnConsole;
        public IntPtr GetFriendSessionStateInfo;
        public IntPtr GetFriendRestrictions;
        public IntPtr GetFriendPersonaNameHistory;
        public IntPtr RequestPersonaNameHistory;
        public IntPtr GetFriendPersonaNameHistoryAndDate;
        public IntPtr AddFriend;
        public IntPtr RemoveFriend;
        public IntPtr HasFriend;
        public IntPtr AddFriendByName;
        public IntPtr InviteFriendByEmail;
        public IntPtr RequestUserInformation;
        public IntPtr SetIgnoreFriend;
        public IntPtr ReportChatDeclined;
        public IntPtr CreateFriendsGroup;
        public IntPtr DeleteFriendsGroup;
        public IntPtr RenameFriendsGroup;
        public IntPtr AddFriendToGroup;
        public IntPtr RemoveFriendFromGroup;
        public IntPtr IsFriendMemberOfFriendsGroup;
        public IntPtr GetFriendsGroupCount;
        public IntPtr GetFriendsGroupIDByIndex;
        public IntPtr GetFriendsGroupName;
        public IntPtr GetFriendsGroupMembershipCount;
        public IntPtr GetFirstFriendsGroupMember;
        public IntPtr GetNextFriendsGroupMember;
        public IntPtr GetGroupFriendsMembershipCount;
        public IntPtr GetFirstGroupFriendsMember;
        public IntPtr GetNextGroupFriendsMember;
        public IntPtr GetChatMessage;
        public IntPtr SendMsgToFriend;
        public IntPtr ClearChatHistory;
        public IntPtr GetKnownClanCount;
        public IntPtr GetKnownClanByIndex;
        public IntPtr GetClanCount;
        public IntPtr GetClanByIndex;
        public IntPtr GetClanName;
        public IntPtr GetClanTag;
        public IntPtr GetFriendActivityCounts;
        public IntPtr GetClanActivityCounts;
        public IntPtr DownloadClanActivityCounts;
        public IntPtr GetFriendsGroupActivityCounts;
        public IntPtr IsClanPublic;
        public IntPtr IsClanLarge;
        public IntPtr SubscribeToPersonaStateFeed;
        public IntPtr JoinClanChatRoom;
        public IntPtr LeaveClanChatRoom;
        public IntPtr GetClanChatMemberCount;
        public IntPtr GetChatMemberByIndex;
        public IntPtr SendClanChatMessage;
        public IntPtr GetClanChatMessage;
        public IntPtr IsClanChatAdmin;
        public IntPtr IsClanChatWindowOpenInSteam;
        public IntPtr OpenClanChatWindowInSteam;
        public IntPtr CloseClanChatWindowInSteam;
        public IntPtr SetListenForFriendsMessages;
        public IntPtr ReplyToFriendMessage;
        public IntPtr GetFriendMessage;
        public IntPtr InviteFriendToClan;
        public IntPtr AcknowledgeInviteToClan;
        public IntPtr GetFriendCountFromSource;
        public IntPtr GetFriendFromSourceByIndex;
        public IntPtr IsUserInSource;
        public IntPtr GetCoplayFriendCount;
        public IntPtr GetCoplayFriend;
        public IntPtr GetFriendCoplayTime;
        public IntPtr GetFriendCoplayGame;
        public IntPtr SetRichPresence;
        public IntPtr ClearRichPresence;
        public IntPtr GetFriendRichPresence;
        public IntPtr GetFriendRichPresenceKeyCount;
        public IntPtr GetFriendRichPresenceKeyByIndex;
        public IntPtr RequestFriendRichPresence;
        public IntPtr JoinChatRoom;
        public IntPtr LeaveChatRoom;
        public IntPtr InviteUserToChatRoom;
        public IntPtr SendChatMsg;
        public IntPtr GetChatRoomEntry;
        public IntPtr ClearChatRoomHistory;
        public IntPtr SerializeChatRoomDlg;
        public IntPtr GetSizeOfSerializedChatRoomDlg;
        public IntPtr GetSerializedChatRoomDlg;
        public IntPtr ClearSerializedChatRoomDlg;
        public IntPtr KickChatMember;
        public IntPtr BanChatMember;
        public IntPtr UnBanChatMember;
        public IntPtr SetChatRoomType;
        public IntPtr GetChatRoomLockState;
        public IntPtr GetChatRoomPermissions;
        public IntPtr SetChatRoomModerated;
        public IntPtr ChatRoomModerated;
        public IntPtr NotifyChatRoomDlgsOfUIChange;
        public IntPtr TerminateChatRoom;
        public IntPtr GetChatRoomCount;
        public IntPtr GetChatRoomByIndex;
        public IntPtr GetChatRoomName;
        public IntPtr GetChatRoomMemberDetails;
        public IntPtr CreateChatRoom;
        public IntPtr VoiceCall;
        public IntPtr VoiceHangUp;
        public IntPtr SetVoiceSpeakerVolume;
        public IntPtr SetVoiceMicrophoneVolume;
        public IntPtr SetAutoAnswer;
        public IntPtr VoiceAnswer;
        public IntPtr VoicePutOnHold;
        public IntPtr VoiceIsLocalOnHold;
        public IntPtr VoiceIsRemoteOnHold;
        public IntPtr SetDoNotDisturb;
        public IntPtr EnableVoiceNotificationSounds;
        public IntPtr SetPushToTalkEnabled;
        public IntPtr IsPushToTalkEnabled;
        public IntPtr SetPushToTalkKey;
        public IntPtr GetPushToTalkKey;
        public IntPtr IsPushToTalkKeyDown;
        public IntPtr EnableVoiceCalibration;
        public IntPtr IsVoiceCalibrating;
        public IntPtr GetVoiceCalibrationSamplePeak;
        public IntPtr SetMicBoost;
        public IntPtr GetMicBoost;
        public IntPtr HasHardwareMicBoost;
        public IntPtr GetMicDeviceName;
        public IntPtr StartTalking;
        public IntPtr EndTalking;
        public IntPtr VoiceIsValid;
        public IntPtr SetAutoReflectVoice;
        public IntPtr GetCallState;
        public IntPtr GetVoiceMicrophoneVolume;
        public IntPtr GetVoiceSpeakerVolume;
        public IntPtr TimeSinceLastVoiceDataReceived;
        public IntPtr TimeSinceLastVoiceDataSend;
        public IntPtr CanSend;
        public IntPtr CanReceive;
        public IntPtr GetEstimatedBitsPerSecond;
        public IntPtr GetPeakSample;
        public IntPtr SendResumeRequest;
        public IntPtr OpenChatDialog;
        public IntPtr StartChatRoomVoiceSpeaking;
        public IntPtr EndChatRoomVoiceSpeaking;
        public IntPtr GetFriendLastLogonTime;
        public IntPtr GetFriendLastLogoffTime;
        public IntPtr GetChatRoomVoiceTotalSlotCount;
        public IntPtr GetChatRoomVoiceUsedSlotCount;
        public IntPtr GetChatRoomVoiceUsedSlot;
        public IntPtr GetChatRoomVoiceStatus;
        public IntPtr ChatRoomHasAvailableVoiceSlots;
        public IntPtr IsChatRoomVoiceSpeaking;
        public IntPtr GetChatRoomPeakSample;
        public IntPtr ChatRoomVoiceRetryConnections;
        public IntPtr SetPortTypes;
        public IntPtr ReinitAudio;
        public IntPtr SetInGameVoiceSpeaking;
        public IntPtr IsInGameVoiceSpeaking;
        public IntPtr ActivateGameOverlay;
        public IntPtr ActivateGameOverlayToUser;
        public IntPtr ActivateGameOverlayToWebPage;
        public IntPtr ActivateGameOverlayToStore;
        public IntPtr ActivateGameOverlayInviteDialog;
        public IntPtr NotifyGameOverlayStateChanged;
        public IntPtr NotifyGameServerChangeRequested;
        public IntPtr NotifyLobbyJoinRequested;
        public IntPtr NotifyRichPresenceJoinRequested;
        public IntPtr GetClanRelationship;
        public IntPtr GetFriendClanRank;
        public IntPtr VoiceIsAvailable;
        public IntPtr TestVoiceDisconnect;
        public IntPtr TestChatRoomPeerDisconnect;
        public IntPtr TestVoicePacketLoss;
        public IntPtr FindFriendVoiceChatHandle;
        public IntPtr RequestFriendsWhoPlayGame;
        public IntPtr GetCountFriendsWhoPlayGame;
        public IntPtr GetFriendWhoPlaysGame;
        public IntPtr SetPlayedWith;
        public IntPtr RequestClanOfficerList;
        public IntPtr GetClanOwner;
        public IntPtr GetClanOfficerCount;
        public IntPtr GetClanOfficerByIndex;
        public IntPtr GetUserRestrictions;
        public IntPtr RequestFriendProfileInfo;
        public IntPtr GetFriendProfileInfo;
        public IntPtr InviteUserToGame;
        public IntPtr GetOnlineConsoleFriendCount;
        public IntPtr RequestTrade;
        public IntPtr TradeResponse;
        public IntPtr CancelTradeRequest;
        public IntPtr HideFriend;
        public IntPtr GetFriendFacebookName;
        public IntPtr GetFriendFacebookID;
        private IntPtr DTorIClientFriends;
    };
	
	public class IClientFriends : NativeWrapper<IClientFriendsVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetPersonaName(IntPtr thisobj);
		public string GetPersonaName() { var call = this.GetFunction<NativeGetPersonaName>(this.Functions.GetPersonaName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPersonaName(IntPtr thisobj, string pchPersonaName);
		public void SetPersonaName(string pchPersonaName) { var call = this.GetFunction<NativeSetPersonaName>(this.Functions.SetPersonaName); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPersonaName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsPersonaNameSet(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsPersonaNameSet() { var call = this.GetFunction<NativeIsPersonaNameSet>(this.Functions.IsPersonaNameSet); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetPersonaState(IntPtr thisobj);
		public EPersonaState GetPersonaState() { var call = this.GetFunction<NativeGetPersonaState>(this.Functions.GetPersonaState); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPersonaState(IntPtr thisobj, EPersonaState ePersonaState);
		public void SetPersonaState(EPersonaState ePersonaState) { var call = this.GetFunction<NativeSetPersonaState>(this.Functions.SetPersonaState); call(this.ObjectAddress, ePersonaState); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeNotifyUIOfMenuChange(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bShowAvatars, [MarshalAs(UnmanagedType.I1)] bool bSortByName, [MarshalAs(UnmanagedType.I1)] bool bShowOnlineOnly);
		[return: MarshalAs(UnmanagedType.I1)] public bool NotifyUIOfMenuChange([MarshalAs(UnmanagedType.I1)] bool bShowAvatars, [MarshalAs(UnmanagedType.I1)] bool bSortByName, [MarshalAs(UnmanagedType.I1)] bool bShowOnlineOnly) { var call = this.GetFunction<NativeNotifyUIOfMenuChange>(this.Functions.NotifyUIOfMenuChange); return call(this.ObjectAddress, bShowAvatars, bSortByName, bShowOnlineOnly); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendCount(IntPtr thisobj, Int32 iFriendFlags);
		public Int32 GetFriendCount(Int32 iFriendFlags) { var call = this.GetFunction<NativeGetFriendCount>(this.Functions.GetFriendCount); return call(this.ObjectAddress, iFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetFriendByIndex(IntPtr thisobj, ref UInt64 ret, Int32 iFriend, Int32 iFriendFlags);
		public UInt64 GetFriendByIndex(Int32 iFriend, Int32 iFriendFlags) { UInt64 ret = 0; var call = this.GetFunction<NativeGetFriendByIndex>(this.Functions.GetFriendByIndex); call(this.ObjectAddress, ref ret, iFriend, iFriendFlags); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetOnlineFriendCount(IntPtr thisobj);
		public Int32 GetOnlineFriendCount() { var call = this.GetFunction<NativeGetOnlineFriendCount>(this.Functions.GetOnlineFriendCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EFriendRelationship NativeGetFriendRelationship(IntPtr thisobj, UInt64 steamIDFriend);
		public EFriendRelationship GetFriendRelationship(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendRelationship>(this.Functions.GetFriendRelationship); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetFriendPersonaState(IntPtr thisobj, UInt64 steamIDFriend);
		public EPersonaState GetFriendPersonaState(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaState>(this.Functions.GetFriendPersonaState); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaName(IntPtr thisobj, UInt64 steamIDFriend);
		public string GetFriendPersonaName(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaName>(this.Functions.GetFriendPersonaName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDFriend) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetFriendAlias(IntPtr thisobj, UInt64 steamIDFriend, string pchAlias);
		public void SetFriendAlias(UInt64 steamIDFriend, string pchAlias) { var call = this.GetFunction<NativeSetFriendAlias>(this.Functions.SetFriendAlias); call(this.ObjectAddress, steamIDFriend, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAlias ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSmallFriendAvatar(IntPtr thisobj, UInt64 steamIDFriend);
		public Int32 GetSmallFriendAvatar(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetSmallFriendAvatar>(this.Functions.GetSmallFriendAvatar); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetMediumFriendAvatar(IntPtr thisobj, UInt64 steamIDFriend);
		public Int32 GetMediumFriendAvatar(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetMediumFriendAvatar>(this.Functions.GetMediumFriendAvatar); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLargeFriendAvatar(IntPtr thisobj, UInt64 steamIDFriend);
		public Int32 GetLargeFriendAvatar(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetLargeFriendAvatar>(this.Functions.GetLargeFriendAvatar); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetFriendRegValue(IntPtr thisobj, UInt64 steamIDFriend, string pchKey, string pchValue);
		public void SetFriendRegValue(UInt64 steamIDFriend, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetFriendRegValue>(this.Functions.SetFriendRegValue); call(this.ObjectAddress, steamIDFriend, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendRegValue(IntPtr thisobj, UInt64 steamIDFriend, string pchKey);
		public string GetFriendRegValue(UInt64 steamIDFriend, string pchKey) { var call = this.GetFunction<NativeGetFriendRegValue>(this.Functions.GetFriendRegValue); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDFriend, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeDeleteFriendRegValue(IntPtr thisobj, UInt64 steamID, string pchKey);
		[return: MarshalAs(UnmanagedType.I1)] public bool DeleteFriendRegValue(UInt64 steamID, string pchKey) { var call = this.GetFunction<NativeDeleteFriendRegValue>(this.Functions.DeleteFriendRegValue); return call(this.ObjectAddress, steamID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFriendGamePlayed(IntPtr thisobj, UInt64 steamID, ref FriendGameInfo_t pGamePlayInfo);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFriendGamePlayed(UInt64 steamID, ref FriendGameInfo_t pGamePlayInfo) { var call = this.GetFunction<NativeGetFriendGamePlayed>(this.Functions.GetFriendGamePlayed); return call(this.ObjectAddress, steamID, ref pGamePlayInfo); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendGamePlayedExtraInfo(IntPtr thisobj, UInt64 steamID);
		public string GetFriendGamePlayedExtraInfo(UInt64 steamID) { var call = this.GetFunction<NativeGetFriendGamePlayedExtraInfo>(this.Functions.GetFriendGamePlayedExtraInfo); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamID) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetFriendGameServer(IntPtr thisobj, ref UInt64 ret, UInt64 steamID);
		public UInt64 GetFriendGameServer(UInt64 steamID) { UInt64 ret = 0; var call = this.GetFunction<NativeGetFriendGameServer>(this.Functions.GetFriendGameServer); call(this.ObjectAddress, ref ret, steamID); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendPersonaStateFlags(IntPtr thisobj, UInt64 steamID);
		public Int32 GetFriendPersonaStateFlags(UInt64 steamID) { var call = this.GetFunction<NativeGetFriendPersonaStateFlags>(this.Functions.GetFriendPersonaStateFlags); return call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsFriendGameOnConsole(IntPtr thisobj, UInt64 steamID);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsFriendGameOnConsole(UInt64 steamID) { var call = this.GetFunction<NativeIsFriendGameOnConsole>(this.Functions.IsFriendGameOnConsole); return call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendRestrictions(IntPtr thisobj, UInt64 steamID);
		public Int32 GetFriendRestrictions(UInt64 steamID) { var call = this.GetFunction<NativeGetFriendRestrictions>(this.Functions.GetFriendRestrictions); return call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaNameHistory(IntPtr thisobj, UInt64 steamIDFriend, Int32 iPersonaName);
		public string GetFriendPersonaNameHistory(UInt64 steamIDFriend, Int32 iPersonaName) { var call = this.GetFunction<NativeGetFriendPersonaNameHistory>(this.Functions.GetFriendPersonaNameHistory); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDFriend, iPersonaName) ) ); }

        /*virtual SteamAPICall_t RequestPersonaNameHistory( CSteamID steamIDFriend ) = 0;
        virtual const char * GetFriendPersonaNameHistoryAndDate( CSteamID steamIDFriend, int32 iPersonaName, RTime32 * puTime ) = 0;*/

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAddFriend(IntPtr thisobj, UInt64 steamID);
		[return: MarshalAs(UnmanagedType.I1)] public bool AddFriend(UInt64 steamID) { var call = this.GetFunction<NativeAddFriend>(this.Functions.AddFriend); return call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveFriend(IntPtr thisobj, UInt64 steamID);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveFriend(UInt64 steamID) { var call = this.GetFunction<NativeRemoveFriend>(this.Functions.RemoveFriend); return call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeHasFriend(IntPtr thisobj, UInt64 steamID, Int32 iFriendFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool HasFriend(UInt64 steamID, Int32 iFriendFlags) { var call = this.GetFunction<NativeHasFriend>(this.Functions.HasFriend); return call(this.ObjectAddress, steamID, iFriendFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddFriendByName(IntPtr thisobj, string pchEmailOrAccountName);
		public Int32 AddFriendByName(string pchEmailOrAccountName) { var call = this.GetFunction<NativeAddFriendByName>(this.Functions.AddFriendByName); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchEmailOrAccountName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeInviteFriendByEmail(IntPtr thisobj, string pchEmailAddress);
		[return: MarshalAs(UnmanagedType.I1)] public bool InviteFriendByEmail(string pchEmailAddress) { var call = this.GetFunction<NativeInviteFriendByEmail>(this.Functions.InviteFriendByEmail); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchEmailAddress ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestUserInformation(IntPtr thisobj, UInt64 steamID, Byte unk1);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestUserInformation(UInt64 steamID, Byte unk1) { var call = this.GetFunction<NativeRequestUserInformation>(this.Functions.RequestUserInformation); return call(this.ObjectAddress, steamID, unk1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetIgnoreFriend(IntPtr thisobj, UInt64 steamID, [MarshalAs(UnmanagedType.I1)] bool bIgnore);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetIgnoreFriend(UInt64 steamID, [MarshalAs(UnmanagedType.I1)] bool bIgnore) { var call = this.GetFunction<NativeSetIgnoreFriend>(this.Functions.SetIgnoreFriend); return call(this.ObjectAddress, steamID, bIgnore); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeReportChatDeclined(IntPtr thisobj, UInt64 steamID);
		[return: MarshalAs(UnmanagedType.I1)] public bool ReportChatDeclined(UInt64 steamID) { var call = this.GetFunction<NativeReportChatDeclined>(this.Functions.ReportChatDeclined); return call(this.ObjectAddress, steamID); }

        /*virtual bool CreateFriendGroup( const char* pchGroupName ) = 0;
        virtual bool DeleteFriendGroup( int16 iGroupID ) = 0;
        virtual bool RenameFriendGroup( const char* pchNewGroupName, int16 iGroupID ) = 0;
        virtual bool AddFriendToGroup( CSteamID steamID, int16 iGroupID ) = 0;
        virtual bool RemoveFriendFromGroup( CSteamID steamID, int16 iGroupID ) = 0;
        virtual int16 GetFriendGroupCount() = 0;
        virtual int16 GetFriendGroupIDByIndex( int16 iGroupIndex ) = 0;
        virtual const char * GetFriendGroupName( int16 iGroupID ) = 0;
        virtual int16 GetFriendGroupMembershipCount( int16 iGroupID ) = 0;
        virtual CSteamID GetFirstFriendGroupMember( int16 iGroupID ) = 0;
        virtual CSteamID GetNextFriendGroupMember( int16 iGroupID ) = 0;
        virtual int16 GetGroupFriendMembershipCount( CSteamID steamID ) = 0;
        virtual int16 GetFirstGroupFriendMember( CSteamID steamID ) = 0;
        virtual int16 GetNextGroupFriendMember( CSteamID steamID ) = 0;*/

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetChatMessage(IntPtr thisobj, UInt64 steamIDFriend, Int32 iChatID, byte[] pvData, Int32 cubData, ref EChatEntryType peChatEntryType, ref UInt64 pSteamIDChatter);
		public Int32 GetChatMessage(UInt64 steamIDFriend, Int32 iChatID, byte[] pvData, Int32 cubData, ref EChatEntryType peChatEntryType, ref UInt64 pSteamIDChatter) { var call = this.GetFunction<NativeGetChatMessage>(this.Functions.GetChatMessage); return call(this.ObjectAddress, steamIDFriend, iChatID, pvData, cubData, ref peChatEntryType, ref pSteamIDChatter); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendMsgToFriend(IntPtr thisobj, UInt64 steamIDFriend, EChatEntryType eChatEntryType, byte[] pvMsgBody, Int32 cubMsgBody);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendMsgToFriend(UInt64 steamIDFriend, EChatEntryType eChatEntryType, byte[] pvMsgBody, Int32 cubMsgBody) { var call = this.GetFunction<NativeSendMsgToFriend>(this.Functions.SendMsgToFriend); return call(this.ObjectAddress, steamIDFriend, eChatEntryType, pvMsgBody, cubMsgBody); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeClearChatHistory(IntPtr thisobj, UInt64 steamIDFriend);
		public void ClearChatHistory(UInt64 steamIDFriend) { var call = this.GetFunction<NativeClearChatHistory>(this.Functions.ClearChatHistory); call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetKnownClanCount(IntPtr thisobj);
		public Int32 GetKnownClanCount() { var call = this.GetFunction<NativeGetKnownClanCount>(this.Functions.GetKnownClanCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetKnownClanByIndex(IntPtr thisobj, ref UInt64 ret, Int32 iClan);
		public UInt64 GetKnownClanByIndex(Int32 iClan) { UInt64 ret = 0; var call = this.GetFunction<NativeGetKnownClanByIndex>(this.Functions.GetKnownClanByIndex); call(this.ObjectAddress, ref ret, iClan); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetClanCount(IntPtr thisobj);
		public Int32 GetClanCount() { var call = this.GetFunction<NativeGetClanCount>(this.Functions.GetClanCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetClanByIndex(IntPtr thisobj, ref UInt64 ret, Int32 iClan);
		public UInt64 GetClanByIndex(Int32 iClan) { UInt64 ret = 0; var call = this.GetFunction<NativeGetClanByIndex>(this.Functions.GetClanByIndex); call(this.ObjectAddress, ref ret, iClan); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetClanName(IntPtr thisobj, UInt64 steamID);
		public string GetClanName(UInt64 steamID) { var call = this.GetFunction<NativeGetClanName>(this.Functions.GetClanName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamID) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetClanTag(IntPtr thisobj, UInt64 steamID);
		public string GetClanTag(UInt64 steamID) { var call = this.GetFunction<NativeGetClanTag>(this.Functions.GetClanTag); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamID) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFriendActivityCounts(IntPtr thisobj, ref Int32 a, ref Int32 b);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFriendActivityCounts(ref Int32 a, ref Int32 b) { var call = this.GetFunction<NativeGetFriendActivityCounts>(this.Functions.GetFriendActivityCounts); return call(this.ObjectAddress, ref a, ref b); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetClanActivityCounts(IntPtr thisobj, UInt64 steamID, ref Int32 pnOnline, ref Int32 pnInGame, ref Int32 pnChatting);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetClanActivityCounts(UInt64 steamID, ref Int32 pnOnline, ref Int32 pnInGame, ref Int32 pnChatting) { var call = this.GetFunction<NativeGetClanActivityCounts>(this.Functions.GetClanActivityCounts); return call(this.ObjectAddress, steamID, ref pnOnline, ref pnInGame, ref pnChatting); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsClanPublic(IntPtr thisobj, UInt64 steamID);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsClanPublic(UInt64 steamID) { var call = this.GetFunction<NativeIsClanPublic>(this.Functions.IsClanPublic); return call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsClanLarge(IntPtr thisobj, UInt64 steamID);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsClanLarge(UInt64 steamID) { var call = this.GetFunction<NativeIsClanLarge>(this.Functions.IsClanLarge); return call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSubscribeToPersonaStateFeed(IntPtr thisobj, UInt64 arg1, [MarshalAs(UnmanagedType.I1)] bool arg2);
		public Int32 SubscribeToPersonaStateFeed(UInt64 arg1, [MarshalAs(UnmanagedType.I1)] bool arg2) { var call = this.GetFunction<NativeSubscribeToPersonaStateFeed>(this.Functions.SubscribeToPersonaStateFeed); return call(this.ObjectAddress, arg1, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeInviteFriendToClan(IntPtr thisobj, UInt64 steamIDfriend, UInt64 steamIDclan);
		[return: MarshalAs(UnmanagedType.I1)] public bool InviteFriendToClan(UInt64 steamIDfriend, UInt64 steamIDclan) { var call = this.GetFunction<NativeInviteFriendToClan>(this.Functions.InviteFriendToClan); return call(this.ObjectAddress, steamIDfriend, steamIDclan); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAcknowledgeInviteToClan(IntPtr thisobj, UInt64 steamID, [MarshalAs(UnmanagedType.I1)] bool bAcceptOrDenyClanInvite);
		[return: MarshalAs(UnmanagedType.I1)] public bool AcknowledgeInviteToClan(UInt64 steamID, [MarshalAs(UnmanagedType.I1)] bool bAcceptOrDenyClanInvite) { var call = this.GetFunction<NativeAcknowledgeInviteToClan>(this.Functions.AcknowledgeInviteToClan); return call(this.ObjectAddress, steamID, bAcceptOrDenyClanInvite); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendCountFromSource(IntPtr thisobj, UInt64 steamIDSource);
		public Int32 GetFriendCountFromSource(UInt64 steamIDSource) { var call = this.GetFunction<NativeGetFriendCountFromSource>(this.Functions.GetFriendCountFromSource); return call(this.ObjectAddress, steamIDSource); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetFriendFromSourceByIndex(IntPtr thisobj, ref UInt64 ret, UInt64 steamIDSource, Int32 iFriend);
		public UInt64 GetFriendFromSourceByIndex(UInt64 steamIDSource, Int32 iFriend) { UInt64 ret = 0; var call = this.GetFunction<NativeGetFriendFromSourceByIndex>(this.Functions.GetFriendFromSourceByIndex); call(this.ObjectAddress, ref ret, steamIDSource, iFriend); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsUserInSource(IntPtr thisobj, UInt64 steamIDUser, UInt64 steamIDSource);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsUserInSource(UInt64 steamIDUser, UInt64 steamIDSource) { var call = this.GetFunction<NativeIsUserInSource>(this.Functions.IsUserInSource); return call(this.ObjectAddress, steamIDUser, steamIDSource); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCoplayFriendCount(IntPtr thisobj);
		public Int32 GetCoplayFriendCount() { var call = this.GetFunction<NativeGetCoplayFriendCount>(this.Functions.GetCoplayFriendCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetCoplayFriend(IntPtr thisobj, ref UInt64 ret, Int32 iIndex);
		public UInt64 GetCoplayFriend(Int32 iIndex) { UInt64 ret = 0; var call = this.GetFunction<NativeGetCoplayFriend>(this.Functions.GetCoplayFriend); call(this.ObjectAddress, ref ret, iIndex); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetFriendCoplayTime(IntPtr thisobj, UInt64 steamID);
		public UInt32 GetFriendCoplayTime(UInt64 steamID) { var call = this.GetFunction<NativeGetFriendCoplayTime>(this.Functions.GetFriendCoplayTime); return call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetFriendCoplayGame(IntPtr thisobj, UInt64 steamID);
		public UInt32 GetFriendCoplayGame(UInt64 steamID) { var call = this.GetFunction<NativeGetFriendCoplayGame>(this.Functions.GetFriendCoplayGame); return call(this.ObjectAddress, steamID); }

		//[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetRichPresence(IntPtr thisobj, string szKey, string szValue);
		//[return: MarshalAs(UnmanagedType.I1)] public bool SetRichPresence(string szKey, string szValue) { var call = this.GetFunction<NativeSetRichPresence>(this.Functions.SetRichPresence); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( szValue ) )); }

		//[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeClearRichPresence(IntPtr thisobj);
		//public void ClearRichPresence() { var call = this.GetFunction<NativeClearRichPresence>(this.Functions.ClearRichPresence); call(this.ObjectAddress); }

		//[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendRichPresence(IntPtr thisobj, UInt64 steamIDFriend, string szKey);
		//public string GetFriendRichPresence(UInt64 steamIDFriend, string szKey) { var call = this.GetFunction<NativeGetFriendRichPresence>(this.Functions.GetFriendRichPresence); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDFriend, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szKey ) )) ) ); }

		//[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendRichPresenceKeyCount(IntPtr thisobj, UInt64 steamIDFriend);
		//public Int32 GetFriendRichPresenceKeyCount(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendRichPresenceKeyCount>(this.Functions.GetFriendRichPresenceKeyCount); return call(this.ObjectAddress, steamIDFriend); }

		//[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendRichPresenceKeyByIndex(IntPtr thisobj, UInt64 steamIDFriend, Int32 iIndex);
		//public string GetFriendRichPresenceKeyByIndex(UInt64 steamIDFriend, Int32 iIndex) { var call = this.GetFunction<NativeGetFriendRichPresenceKeyByIndex>(this.Functions.GetFriendRichPresenceKeyByIndex); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDFriend, iIndex) ) ); }

		//[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRequestFriendRichPresence(IntPtr thisobj, UInt64 steamID);
		//public void RequestFriendRichPresence(UInt64 steamID) { var call = this.GetFunction<NativeRequestFriendRichPresence>(this.Functions.RequestFriendRichPresence); call(this.ObjectAddress, steamID); }

        /*virtual bool SetRichPresence( AppId_t nAppId, const char *szKey, const char *szValue ) = 0;
        virtual void ClearRichPresence( AppId_t nAppId ) = 0;
        virtual const char* GetFriendRichPresence( AppId_t nAppId, CSteamID steamIDFriend, const char *szKey ) = 0;
        virtual int32 GetFriendRichPresenceKeyCount( AppId_t nAppId, CSteamID steamIDFriend ) = 0;
        virtual const char* GetFriendRichPresenceKeyByIndex( AppId_t nAppId, CSteamID steamIDFriend, int32 iIndex ) = 0;
        virtual void RequestFriendRichPresence( AppId_t nAppId, CSteamID steamID ) = 0;*/

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeJoinChatRoom(IntPtr thisobj, UInt64 steamID);
		[return: MarshalAs(UnmanagedType.I1)] public bool JoinChatRoom(UInt64 steamID) { var call = this.GetFunction<NativeJoinChatRoom>(this.Functions.JoinChatRoom); return call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLeaveChatRoom(IntPtr thisobj, UInt64 steamID);
		public void LeaveChatRoom(UInt64 steamID) { var call = this.GetFunction<NativeLeaveChatRoom>(this.Functions.LeaveChatRoom); call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeInviteUserToChatRoom(IntPtr thisobj, UInt64 steamIDfriend, UInt64 steamIDchat);
		[return: MarshalAs(UnmanagedType.I1)] public bool InviteUserToChatRoom(UInt64 steamIDfriend, UInt64 steamIDchat) { var call = this.GetFunction<NativeInviteUserToChatRoom>(this.Functions.InviteUserToChatRoom); return call(this.ObjectAddress, steamIDfriend, steamIDchat); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendChatMsg(IntPtr thisobj, UInt64 steamIDchat, EChatEntryType eChatEntryType, byte[] pvMsgBody, Int32 cubMsgBody);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendChatMsg(UInt64 steamIDchat, EChatEntryType eChatEntryType, byte[] pvMsgBody, Int32 cubMsgBody) { var call = this.GetFunction<NativeSendChatMsg>(this.Functions.SendChatMsg); return call(this.ObjectAddress, steamIDchat, eChatEntryType, pvMsgBody, cubMsgBody); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetChatRoomEntry(IntPtr thisobj, UInt64 steamIDchat, Int32 iChatID, ref UInt64 steamIDuser, byte[] pvData, Int32 cubData, ref EChatEntryType peChatEntryType);
		public Int32 GetChatRoomEntry(UInt64 steamIDchat, Int32 iChatID, ref UInt64 steamIDuser, byte[] pvData, Int32 cubData, ref EChatEntryType peChatEntryType) { var call = this.GetFunction<NativeGetChatRoomEntry>(this.Functions.GetChatRoomEntry); return call(this.ObjectAddress, steamIDchat, iChatID, ref steamIDuser, pvData, cubData, ref peChatEntryType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeClearChatRoomHistory(IntPtr thisobj, UInt64 steamID);
		public void ClearChatRoomHistory(UInt64 steamID) { var call = this.GetFunction<NativeClearChatRoomHistory>(this.Functions.ClearChatRoomHistory); call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSerializeChatRoomDlg(IntPtr thisobj, UInt64 steamIDchat, byte[] pvHistory, Int32 cubHistory);
		[return: MarshalAs(UnmanagedType.I1)] public bool SerializeChatRoomDlg(UInt64 steamIDchat, byte[] pvHistory, Int32 cubHistory) { var call = this.GetFunction<NativeSerializeChatRoomDlg>(this.Functions.SerializeChatRoomDlg); return call(this.ObjectAddress, steamIDchat, pvHistory, cubHistory); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSizeOfSerializedChatRoomDlg(IntPtr thisobj, UInt64 steamIDchat);
		public Int32 GetSizeOfSerializedChatRoomDlg(UInt64 steamIDchat) { var call = this.GetFunction<NativeGetSizeOfSerializedChatRoomDlg>(this.Functions.GetSizeOfSerializedChatRoomDlg); return call(this.ObjectAddress, steamIDchat); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetSerializedChatRoomDlg(IntPtr thisobj, UInt64 steamIDchat, byte[] pvHistory, Int32 cubBuffer, ref Int32 pcubData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetSerializedChatRoomDlg(UInt64 steamIDchat, byte[] pvHistory, Int32 cubBuffer, ref Int32 pcubData) { var call = this.GetFunction<NativeGetSerializedChatRoomDlg>(this.Functions.GetSerializedChatRoomDlg); return call(this.ObjectAddress, steamIDchat, pvHistory, cubBuffer, ref pcubData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeClearSerializedChatRoomDlg(IntPtr thisobj, UInt64 steamIDchat);
		[return: MarshalAs(UnmanagedType.I1)] public bool ClearSerializedChatRoomDlg(UInt64 steamIDchat) { var call = this.GetFunction<NativeClearSerializedChatRoomDlg>(this.Functions.ClearSerializedChatRoomDlg); return call(this.ObjectAddress, steamIDchat); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeKickChatMember(IntPtr thisobj, UInt64 steamIDchat, UInt64 steamIDuser);
		[return: MarshalAs(UnmanagedType.I1)] public bool KickChatMember(UInt64 steamIDchat, UInt64 steamIDuser) { var call = this.GetFunction<NativeKickChatMember>(this.Functions.KickChatMember); return call(this.ObjectAddress, steamIDchat, steamIDuser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeBanChatMember(IntPtr thisobj, UInt64 steamIDchat, UInt64 steamIDuser);
		[return: MarshalAs(UnmanagedType.I1)] public bool BanChatMember(UInt64 steamIDchat, UInt64 steamIDuser) { var call = this.GetFunction<NativeBanChatMember>(this.Functions.BanChatMember); return call(this.ObjectAddress, steamIDchat, steamIDuser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUnBanChatMember(IntPtr thisobj, UInt64 steamIDchat, UInt64 steamIDuser);
		[return: MarshalAs(UnmanagedType.I1)] public bool UnBanChatMember(UInt64 steamIDchat, UInt64 steamIDuser) { var call = this.GetFunction<NativeUnBanChatMember>(this.Functions.UnBanChatMember); return call(this.ObjectAddress, steamIDchat, steamIDuser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetChatRoomType(IntPtr thisobj, UInt64 steamIDchat, ELobbyType eLobbyType);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetChatRoomType(UInt64 steamIDchat, ELobbyType eLobbyType) { var call = this.GetFunction<NativeSetChatRoomType>(this.Functions.SetChatRoomType); return call(this.ObjectAddress, steamIDchat, eLobbyType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetChatRoomLockState(IntPtr thisobj, UInt64 steamIDchat, [MarshalAs(UnmanagedType.I1)] ref bool pbLocked);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetChatRoomLockState(UInt64 steamIDchat, [MarshalAs(UnmanagedType.I1)] ref bool pbLocked) { var call = this.GetFunction<NativeGetChatRoomLockState>(this.Functions.GetChatRoomLockState); return call(this.ObjectAddress, steamIDchat, ref pbLocked); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetChatRoomPermissions(IntPtr thisobj, UInt64 steamIDchat, ref UInt32 prgfChatRoomPermissions);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetChatRoomPermissions(UInt64 steamIDchat, ref UInt32 prgfChatRoomPermissions) { var call = this.GetFunction<NativeGetChatRoomPermissions>(this.Functions.GetChatRoomPermissions); return call(this.ObjectAddress, steamIDchat, ref prgfChatRoomPermissions); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetChatRoomModerated(IntPtr thisobj, UInt64 steamIDchat, [MarshalAs(UnmanagedType.I1)] bool bModerated);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetChatRoomModerated(UInt64 steamIDchat, [MarshalAs(UnmanagedType.I1)] bool bModerated) { var call = this.GetFunction<NativeSetChatRoomModerated>(this.Functions.SetChatRoomModerated); return call(this.ObjectAddress, steamIDchat, bModerated); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeChatRoomModerated(IntPtr thisobj, UInt64 steamIDChat);
		[return: MarshalAs(UnmanagedType.I1)] public bool ChatRoomModerated(UInt64 steamIDChat) { var call = this.GetFunction<NativeChatRoomModerated>(this.Functions.ChatRoomModerated); return call(this.ObjectAddress, steamIDChat); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeNotifyChatRoomDlgsOfUIChange(IntPtr thisobj, UInt64 steamIDchat, [MarshalAs(UnmanagedType.I1)] bool bShowAvatars, [MarshalAs(UnmanagedType.I1)] bool bBeepOnNewMsg, [MarshalAs(UnmanagedType.I1)] bool bShowSteamIDs, [MarshalAs(UnmanagedType.I1)] bool bShowTimestampOnNewMsg);
		[return: MarshalAs(UnmanagedType.I1)] public bool NotifyChatRoomDlgsOfUIChange(UInt64 steamIDchat, [MarshalAs(UnmanagedType.I1)] bool bShowAvatars, [MarshalAs(UnmanagedType.I1)] bool bBeepOnNewMsg, [MarshalAs(UnmanagedType.I1)] bool bShowSteamIDs, [MarshalAs(UnmanagedType.I1)] bool bShowTimestampOnNewMsg) { var call = this.GetFunction<NativeNotifyChatRoomDlgsOfUIChange>(this.Functions.NotifyChatRoomDlgsOfUIChange); return call(this.ObjectAddress, steamIDchat, bShowAvatars, bBeepOnNewMsg, bShowSteamIDs, bShowTimestampOnNewMsg); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeTerminateChatRoom(IntPtr thisobj, UInt64 steamIDchat);
		[return: MarshalAs(UnmanagedType.I1)] public bool TerminateChatRoom(UInt64 steamIDchat) { var call = this.GetFunction<NativeTerminateChatRoom>(this.Functions.TerminateChatRoom); return call(this.ObjectAddress, steamIDchat); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetChatRoomCount(IntPtr thisobj);
		public Int32 GetChatRoomCount() { var call = this.GetFunction<NativeGetChatRoomCount>(this.Functions.GetChatRoomCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetChatRoomByIndex(IntPtr thisobj, ref UInt64 ret, Int32 iChatRoom);
		public UInt64 GetChatRoomByIndex(Int32 iChatRoom) { UInt64 ret = 0; var call = this.GetFunction<NativeGetChatRoomByIndex>(this.Functions.GetChatRoomByIndex); call(this.ObjectAddress, ref ret, iChatRoom); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetChatRoomName(IntPtr thisobj, UInt64 steamIDchat);
		public string GetChatRoomName(UInt64 steamIDchat) { var call = this.GetFunction<NativeGetChatRoomName>(this.Functions.GetChatRoomName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDchat) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetChatRoomMemberDetails(IntPtr thisobj, UInt64 steamIDchat, UInt64 steamIDuser, ref UInt32 pChatMemberDetails, ref UInt32 pChatMemberDetailsLocal);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetChatRoomMemberDetails(UInt64 steamIDchat, UInt64 steamIDuser, ref UInt32 pChatMemberDetails, ref UInt32 pChatMemberDetailsLocal) { var call = this.GetFunction<NativeGetChatRoomMemberDetails>(this.Functions.GetChatRoomMemberDetails); return call(this.ObjectAddress, steamIDchat, steamIDuser, ref pChatMemberDetails, ref pChatMemberDetailsLocal); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCreateChatRoom(IntPtr thisobj, EChatRoomType eType, UInt64 ulGameID, string pchName, ELobbyType eLobbyType, UInt64 steamIDClan, UInt64 steamIDFriendChat, UInt64 steamIDInvited, UInt32 chatPermissionOfficer, UInt32 chatPermissionMember, UInt32 chatPermissionAll);
		public void CreateChatRoom(EChatRoomType eType, UInt64 ulGameID, string pchName, ELobbyType eLobbyType, UInt64 steamIDClan, UInt64 steamIDFriendChat, UInt64 steamIDInvited, UInt32 chatPermissionOfficer, UInt32 chatPermissionMember, UInt32 chatPermissionAll) { var call = this.GetFunction<NativeCreateChatRoom>(this.Functions.CreateChatRoom); call(this.ObjectAddress, eType, ulGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), eLobbyType, steamIDClan, steamIDFriendChat, steamIDInvited, chatPermissionOfficer, chatPermissionMember, chatPermissionAll); }

		//[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetChatRoomMetadata(IntPtr thisobj, UInt64 steamIDchat, UInt64 steamIDuser, string pchKey);
		//public string GetChatRoomMetadata(UInt64 steamIDchat, UInt64 steamIDuser, string pchKey) { var call = this.GetFunction<NativeGetChatRoomMetadata>(this.Functions.GetChatRoomMetadata); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDchat, steamIDuser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		//[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetChatRoomMetadata(IntPtr thisobj, UInt64 steamIDChat, UInt64 steamIDMember, string pchKey, string pchValue);
		//[return: MarshalAs(UnmanagedType.I1)] public bool SetChatRoomMetadata(UInt64 steamIDChat, UInt64 steamIDMember, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetChatRoomMetadata>(this.Functions.SetChatRoomMetadata); return call(this.ObjectAddress, steamIDChat, steamIDMember, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) )); }

		//[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetChatRoomPermissions(IntPtr thisobj, UInt64 steamIDchat, UInt64 steamIDmemeber, UInt32 permissions, [MarshalAs(UnmanagedType.I1)] bool bMakeOwner);
		//[return: MarshalAs(UnmanagedType.I1)] public bool SetChatRoomPermissions(UInt64 steamIDchat, UInt64 steamIDmemeber, UInt32 permissions, [MarshalAs(UnmanagedType.I1)] bool bMakeOwner) { var call = this.GetFunction<NativeSetChatRoomPermissions>(this.Functions.SetChatRoomPermissions); return call(this.ObjectAddress, steamIDchat, steamIDmemeber, permissions, bMakeOwner); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeVoiceCall(IntPtr thisobj, UInt64 steamIDlocal, UInt64 steamIDremote);
		public void VoiceCall(UInt64 steamIDlocal, UInt64 steamIDremote) { var call = this.GetFunction<NativeVoiceCall>(this.Functions.VoiceCall); call(this.ObjectAddress, steamIDlocal, steamIDremote); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeVoiceHangUp(IntPtr thisobj, Int32 hVoiceCall);
		public void VoiceHangUp(Int32 hVoiceCall) { var call = this.GetFunction<NativeVoiceHangUp>(this.Functions.VoiceHangUp); call(this.ObjectAddress, hVoiceCall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetVoiceSpeakerVolume(IntPtr thisobj, float flVolume);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetVoiceSpeakerVolume(float flVolume) { var call = this.GetFunction<NativeSetVoiceSpeakerVolume>(this.Functions.SetVoiceSpeakerVolume); return call(this.ObjectAddress, flVolume); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetVoiceMicrophoneVolume(IntPtr thisobj, float flVolume);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetVoiceMicrophoneVolume(float flVolume) { var call = this.GetFunction<NativeSetVoiceMicrophoneVolume>(this.Functions.SetVoiceMicrophoneVolume); return call(this.ObjectAddress, flVolume); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetAutoAnswer(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bAutoAnswer);
		public void SetAutoAnswer([MarshalAs(UnmanagedType.I1)] bool bAutoAnswer) { var call = this.GetFunction<NativeSetAutoAnswer>(this.Functions.SetAutoAnswer); call(this.ObjectAddress, bAutoAnswer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeVoiceAnswer(IntPtr thisobj, Int32 hVoiceCall);
		public void VoiceAnswer(Int32 hVoiceCall) { var call = this.GetFunction<NativeVoiceAnswer>(this.Functions.VoiceAnswer); call(this.ObjectAddress, hVoiceCall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeVoicePutOnHold(IntPtr thisobj, Int32 HVoiceCall, [MarshalAs(UnmanagedType.I1)] bool bOnLocalHold);
		public void VoicePutOnHold(Int32 HVoiceCall, [MarshalAs(UnmanagedType.I1)] bool bOnLocalHold) { var call = this.GetFunction<NativeVoicePutOnHold>(this.Functions.VoicePutOnHold); call(this.ObjectAddress, HVoiceCall, bOnLocalHold); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeVoiceIsLocalOnHold(IntPtr thisobj, Int32 hVoiceCall);
		[return: MarshalAs(UnmanagedType.I1)] public bool VoiceIsLocalOnHold(Int32 hVoiceCall) { var call = this.GetFunction<NativeVoiceIsLocalOnHold>(this.Functions.VoiceIsLocalOnHold); return call(this.ObjectAddress, hVoiceCall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeVoiceIsRemoteOnHold(IntPtr thisobj, Int32 hVoiceCall);
		[return: MarshalAs(UnmanagedType.I1)] public bool VoiceIsRemoteOnHold(Int32 hVoiceCall) { var call = this.GetFunction<NativeVoiceIsRemoteOnHold>(this.Functions.VoiceIsRemoteOnHold); return call(this.ObjectAddress, hVoiceCall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetDoNotDisturb(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bDoNotDisturb);
		public void SetDoNotDisturb([MarshalAs(UnmanagedType.I1)] bool bDoNotDisturb) { var call = this.GetFunction<NativeSetDoNotDisturb>(this.Functions.SetDoNotDisturb); call(this.ObjectAddress, bDoNotDisturb); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeEnableVoiceNotificationSounds(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bEnable);
		public void EnableVoiceNotificationSounds([MarshalAs(UnmanagedType.I1)] bool bEnable) { var call = this.GetFunction<NativeEnableVoiceNotificationSounds>(this.Functions.EnableVoiceNotificationSounds); call(this.ObjectAddress, bEnable); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPushToTalkEnabled(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bEnabled);
		public void SetPushToTalkEnabled([MarshalAs(UnmanagedType.I1)] bool bEnabled) { var call = this.GetFunction<NativeSetPushToTalkEnabled>(this.Functions.SetPushToTalkEnabled); call(this.ObjectAddress, bEnabled); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsPushToTalkEnabled(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsPushToTalkEnabled() { var call = this.GetFunction<NativeIsPushToTalkEnabled>(this.Functions.IsPushToTalkEnabled); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPushToTalkKey(IntPtr thisobj, Int32 nKey);
		public void SetPushToTalkKey(Int32 nKey) { var call = this.GetFunction<NativeSetPushToTalkKey>(this.Functions.SetPushToTalkKey); call(this.ObjectAddress, nKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetPushToTalkKey(IntPtr thisobj);
		public Int32 GetPushToTalkKey() { var call = this.GetFunction<NativeGetPushToTalkKey>(this.Functions.GetPushToTalkKey); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsPushToTalkKeyDown(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsPushToTalkKeyDown() { var call = this.GetFunction<NativeIsPushToTalkKeyDown>(this.Functions.IsPushToTalkKeyDown); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeEnableVoiceCalibration(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bEnable);
		public void EnableVoiceCalibration([MarshalAs(UnmanagedType.I1)] bool bEnable) { var call = this.GetFunction<NativeEnableVoiceCalibration>(this.Functions.EnableVoiceCalibration); call(this.ObjectAddress, bEnable); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsVoiceCalibrating(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsVoiceCalibrating() { var call = this.GetFunction<NativeIsVoiceCalibrating>(this.Functions.IsVoiceCalibrating); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate float NativeGetVoiceCalibrationSamplePeak(IntPtr thisobj);
		public float GetVoiceCalibrationSamplePeak() { var call = this.GetFunction<NativeGetVoiceCalibrationSamplePeak>(this.Functions.GetVoiceCalibrationSamplePeak); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetMicBoost(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bBoost);
		public void SetMicBoost([MarshalAs(UnmanagedType.I1)] bool bBoost) { var call = this.GetFunction<NativeSetMicBoost>(this.Functions.SetMicBoost); call(this.ObjectAddress, bBoost); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetMicBoost(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetMicBoost() { var call = this.GetFunction<NativeGetMicBoost>(this.Functions.GetMicBoost); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeHasHardwareMicBoost(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool HasHardwareMicBoost() { var call = this.GetFunction<NativeHasHardwareMicBoost>(this.Functions.HasHardwareMicBoost); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetMicDeviceName(IntPtr thisobj);
		public string GetMicDeviceName() { var call = this.GetFunction<NativeGetMicDeviceName>(this.Functions.GetMicDeviceName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeStartTalking(IntPtr thisobj, Int32 hVoiceCall);
		public void StartTalking(Int32 hVoiceCall) { var call = this.GetFunction<NativeStartTalking>(this.Functions.StartTalking); call(this.ObjectAddress, hVoiceCall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeEndTalking(IntPtr thisobj, Int32 hVoiceCall);
		public void EndTalking(Int32 hVoiceCall) { var call = this.GetFunction<NativeEndTalking>(this.Functions.EndTalking); call(this.ObjectAddress, hVoiceCall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeVoiceIsValid(IntPtr thisobj, Int32 hVoiceCall);
		[return: MarshalAs(UnmanagedType.I1)] public bool VoiceIsValid(Int32 hVoiceCall) { var call = this.GetFunction<NativeVoiceIsValid>(this.Functions.VoiceIsValid); return call(this.ObjectAddress, hVoiceCall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetAutoReflectVoice(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bAuto);
		public void SetAutoReflectVoice([MarshalAs(UnmanagedType.I1)] bool bAuto) { var call = this.GetFunction<NativeSetAutoReflectVoice>(this.Functions.SetAutoReflectVoice); call(this.ObjectAddress, bAuto); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ECallState NativeGetCallState(IntPtr thisobj, Int32 hVoiceCall);
		public ECallState GetCallState(Int32 hVoiceCall) { var call = this.GetFunction<NativeGetCallState>(this.Functions.GetCallState); return call(this.ObjectAddress, hVoiceCall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate float NativeGetVoiceMicrophoneVolume(IntPtr thisobj);
		public float GetVoiceMicrophoneVolume() { var call = this.GetFunction<NativeGetVoiceMicrophoneVolume>(this.Functions.GetVoiceMicrophoneVolume); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate float NativeGetVoiceSpeakerVolume(IntPtr thisobj);
		public float GetVoiceSpeakerVolume() { var call = this.GetFunction<NativeGetVoiceSpeakerVolume>(this.Functions.GetVoiceSpeakerVolume); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate float NativeTimeSinceLastVoiceDataReceived(IntPtr thisobj, Int32 hVoiceCall);
		public float TimeSinceLastVoiceDataReceived(Int32 hVoiceCall) { var call = this.GetFunction<NativeTimeSinceLastVoiceDataReceived>(this.Functions.TimeSinceLastVoiceDataReceived); return call(this.ObjectAddress, hVoiceCall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate float NativeTimeSinceLastVoiceDataSend(IntPtr thisobj, Int32 hVoiceCall);
		public float TimeSinceLastVoiceDataSend(Int32 hVoiceCall) { var call = this.GetFunction<NativeTimeSinceLastVoiceDataSend>(this.Functions.TimeSinceLastVoiceDataSend); return call(this.ObjectAddress, hVoiceCall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeCanSend(IntPtr thisobj, Int32 hVoiceCall);
		[return: MarshalAs(UnmanagedType.I1)] public bool CanSend(Int32 hVoiceCall) { var call = this.GetFunction<NativeCanSend>(this.Functions.CanSend); return call(this.ObjectAddress, hVoiceCall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeCanReceive(IntPtr thisobj, Int32 hVoiceCall);
		[return: MarshalAs(UnmanagedType.I1)] public bool CanReceive(Int32 hVoiceCall) { var call = this.GetFunction<NativeCanReceive>(this.Functions.CanReceive); return call(this.ObjectAddress, hVoiceCall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate float NativeGetEstimatedBitsPerSecond(IntPtr thisobj, Int32 hVoiceCall, [MarshalAs(UnmanagedType.I1)] bool bIncoming);
		public float GetEstimatedBitsPerSecond(Int32 hVoiceCall, [MarshalAs(UnmanagedType.I1)] bool bIncoming) { var call = this.GetFunction<NativeGetEstimatedBitsPerSecond>(this.Functions.GetEstimatedBitsPerSecond); return call(this.ObjectAddress, hVoiceCall, bIncoming); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate float NativeGetPeakSample(IntPtr thisobj, Int32 hVoiceCall, [MarshalAs(UnmanagedType.I1)] bool bIncoming);
		public float GetPeakSample(Int32 hVoiceCall, [MarshalAs(UnmanagedType.I1)] bool bIncoming) { var call = this.GetFunction<NativeGetPeakSample>(this.Functions.GetPeakSample); return call(this.ObjectAddress, hVoiceCall, bIncoming); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSendResumeRequest(IntPtr thisobj, Int32 hVoiceCall);
		public void SendResumeRequest(Int32 hVoiceCall) { var call = this.GetFunction<NativeSendResumeRequest>(this.Functions.SendResumeRequest); call(this.ObjectAddress, hVoiceCall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeOpenChatDialog(IntPtr thisobj, UInt64 steamID);
		public void OpenChatDialog(UInt64 steamID) { var call = this.GetFunction<NativeOpenChatDialog>(this.Functions.OpenChatDialog); call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeStartChatRoomVoiceSpeaking(IntPtr thisobj, UInt64 steamIDchat, UInt64 steamIDuser);
		public void StartChatRoomVoiceSpeaking(UInt64 steamIDchat, UInt64 steamIDuser) { var call = this.GetFunction<NativeStartChatRoomVoiceSpeaking>(this.Functions.StartChatRoomVoiceSpeaking); call(this.ObjectAddress, steamIDchat, steamIDuser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeEndChatRoomVoiceSpeaking(IntPtr thisobj, UInt64 steamIDchat, UInt64 steamIDuser);
		public void EndChatRoomVoiceSpeaking(UInt64 steamIDchat, UInt64 steamIDuser) { var call = this.GetFunction<NativeEndChatRoomVoiceSpeaking>(this.Functions.EndChatRoomVoiceSpeaking); call(this.ObjectAddress, steamIDchat, steamIDuser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetFriendLastLogonTime(IntPtr thisobj, UInt64 steamID);
		public UInt32 GetFriendLastLogonTime(UInt64 steamID) { var call = this.GetFunction<NativeGetFriendLastLogonTime>(this.Functions.GetFriendLastLogonTime); return call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetFriendLastLogoffTime(IntPtr thisobj, UInt64 steamID);
		public UInt32 GetFriendLastLogoffTime(UInt64 steamID) { var call = this.GetFunction<NativeGetFriendLastLogoffTime>(this.Functions.GetFriendLastLogoffTime); return call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetChatRoomVoiceTotalSlotCount(IntPtr thisobj, UInt64 steamIDchat);
		public Int32 GetChatRoomVoiceTotalSlotCount(UInt64 steamIDchat) { var call = this.GetFunction<NativeGetChatRoomVoiceTotalSlotCount>(this.Functions.GetChatRoomVoiceTotalSlotCount); return call(this.ObjectAddress, steamIDchat); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetChatRoomVoiceUsedSlotCount(IntPtr thisobj, UInt64 steamIDchat);
		public Int32 GetChatRoomVoiceUsedSlotCount(UInt64 steamIDchat) { var call = this.GetFunction<NativeGetChatRoomVoiceUsedSlotCount>(this.Functions.GetChatRoomVoiceUsedSlotCount); return call(this.ObjectAddress, steamIDchat); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetChatRoomVoiceUsedSlot(IntPtr thisobj, ref UInt64 ret, UInt64 steamID, Int32 iSlot);
		public UInt64 GetChatRoomVoiceUsedSlot(UInt64 steamID, Int32 iSlot) { UInt64 ret = 0; var call = this.GetFunction<NativeGetChatRoomVoiceUsedSlot>(this.Functions.GetChatRoomVoiceUsedSlot); call(this.ObjectAddress, ref ret, steamID, iSlot); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EChatRoomVoiceStatus NativeGetChatRoomVoiceStatus(IntPtr thisobj, UInt64 steamIDchat, UInt64 steamIDuser);
		public EChatRoomVoiceStatus GetChatRoomVoiceStatus(UInt64 steamIDchat, UInt64 steamIDuser) { var call = this.GetFunction<NativeGetChatRoomVoiceStatus>(this.Functions.GetChatRoomVoiceStatus); return call(this.ObjectAddress, steamIDchat, steamIDuser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeChatRoomHasAvailableVoiceSlots(IntPtr thisobj, UInt64 steamID);
		[return: MarshalAs(UnmanagedType.I1)] public bool ChatRoomHasAvailableVoiceSlots(UInt64 steamID) { var call = this.GetFunction<NativeChatRoomHasAvailableVoiceSlots>(this.Functions.ChatRoomHasAvailableVoiceSlots); return call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsChatRoomVoiceSpeaking(IntPtr thisobj, UInt64 steamIDchat, UInt64 steamIDuser);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsChatRoomVoiceSpeaking(UInt64 steamIDchat, UInt64 steamIDuser) { var call = this.GetFunction<NativeIsChatRoomVoiceSpeaking>(this.Functions.IsChatRoomVoiceSpeaking); return call(this.ObjectAddress, steamIDchat, steamIDuser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate float NativeGetChatRoomPeakSample(IntPtr thisobj, UInt64 steamIDchat, UInt64 steamIDuser, [MarshalAs(UnmanagedType.I1)] bool bIncoming);
		public float GetChatRoomPeakSample(UInt64 steamIDchat, UInt64 steamIDuser, [MarshalAs(UnmanagedType.I1)] bool bIncoming) { var call = this.GetFunction<NativeGetChatRoomPeakSample>(this.Functions.GetChatRoomPeakSample); return call(this.ObjectAddress, steamIDchat, steamIDuser, bIncoming); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeChatRoomVoiceRetryConnections(IntPtr thisobj, UInt64 steamIDchat);
		public void ChatRoomVoiceRetryConnections(UInt64 steamIDchat) { var call = this.GetFunction<NativeChatRoomVoiceRetryConnections>(this.Functions.ChatRoomVoiceRetryConnections); call(this.ObjectAddress, steamIDchat); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPortTypes(IntPtr thisobj, UInt32 unFlags);
		public void SetPortTypes(UInt32 unFlags) { var call = this.GetFunction<NativeSetPortTypes>(this.Functions.SetPortTypes); call(this.ObjectAddress, unFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeReinitAudio(IntPtr thisobj);
		public void ReinitAudio() { var call = this.GetFunction<NativeReinitAudio>(this.Functions.ReinitAudio); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetInGameVoiceSpeaking(IntPtr thisobj, UInt64 steamIDuser, [MarshalAs(UnmanagedType.I1)] bool bIsSpeaking);
		public void SetInGameVoiceSpeaking(UInt64 steamIDuser, [MarshalAs(UnmanagedType.I1)] bool bIsSpeaking) { var call = this.GetFunction<NativeSetInGameVoiceSpeaking>(this.Functions.SetInGameVoiceSpeaking); call(this.ObjectAddress, steamIDuser, bIsSpeaking); }

        /*virtual bool IsInGameVoiceSpeaking() = 0;*/

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlay(IntPtr thisobj, string pchDialog);
		public void ActivateGameOverlay(string pchDialog) { var call = this.GetFunction<NativeActivateGameOverlay>(this.Functions.ActivateGameOverlay); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchDialog ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlayToUser(IntPtr thisobj, string pchDialog, UInt64 steamID);
		public void ActivateGameOverlayToUser(string pchDialog, UInt64 steamID) { var call = this.GetFunction<NativeActivateGameOverlayToUser>(this.Functions.ActivateGameOverlayToUser); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchDialog ) ), steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlayToWebPage(IntPtr thisobj, string pchUrl);
		public void ActivateGameOverlayToWebPage(string pchUrl) { var call = this.GetFunction<NativeActivateGameOverlayToWebPage>(this.Functions.ActivateGameOverlayToWebPage); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchUrl ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlayToStore(IntPtr thisobj, UInt32 nAppId);
		public void ActivateGameOverlayToStore(UInt32 nAppId) { var call = this.GetFunction<NativeActivateGameOverlayToStore>(this.Functions.ActivateGameOverlayToStore); call(this.ObjectAddress, nAppId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeActivateGameOverlayInviteDialog(IntPtr thisobj, UInt64 steamIDLobby);
		public void ActivateGameOverlayInviteDialog(UInt64 steamIDLobby) { var call = this.GetFunction<NativeActivateGameOverlayInviteDialog>(this.Functions.ActivateGameOverlayInviteDialog); call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeNotifyGameOverlayStateChanged(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bActive);
		public void NotifyGameOverlayStateChanged([MarshalAs(UnmanagedType.I1)] bool bActive) { var call = this.GetFunction<NativeNotifyGameOverlayStateChanged>(this.Functions.NotifyGameOverlayStateChanged); call(this.ObjectAddress, bActive); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeNotifyGameServerChangeRequested(IntPtr thisobj, string pchServerAddress, string pchPassword);
		public void NotifyGameServerChangeRequested(string pchServerAddress, string pchPassword) { var call = this.GetFunction<NativeNotifyGameServerChangeRequested>(this.Functions.NotifyGameServerChangeRequested); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchServerAddress ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPassword ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeNotifyLobbyJoinRequested(IntPtr thisobj, UInt32 nAppId, UInt64 steamIDlobby, UInt64 steamIDfriend);
		[return: MarshalAs(UnmanagedType.I1)] public bool NotifyLobbyJoinRequested(UInt32 nAppId, UInt64 steamIDlobby, UInt64 steamIDfriend) { var call = this.GetFunction<NativeNotifyLobbyJoinRequested>(this.Functions.NotifyLobbyJoinRequested); return call(this.ObjectAddress, nAppId, steamIDlobby, steamIDfriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeNotifyRichPresenceJoinRequested(IntPtr thisobj, UInt32 nAppId, UInt64 steamID, string szUnk);
		[return: MarshalAs(UnmanagedType.I1)] public bool NotifyRichPresenceJoinRequested(UInt32 nAppId, UInt64 steamID, string szUnk) { var call = this.GetFunction<NativeNotifyRichPresenceJoinRequested>(this.Functions.NotifyRichPresenceJoinRequested); return call(this.ObjectAddress, nAppId, steamID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szUnk ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EClanRelationship NativeGetClanRelationship(IntPtr thisobj, UInt64 steamIDclan);
		public EClanRelationship GetClanRelationship(UInt64 steamIDclan) { var call = this.GetFunction<NativeGetClanRelationship>(this.Functions.GetClanRelationship); return call(this.ObjectAddress, steamIDclan); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EClanRank NativeGetFriendClanRank(IntPtr thisobj, UInt64 steamIDuser, UInt64 steamIDclan);
		public EClanRank GetFriendClanRank(UInt64 steamIDuser, UInt64 steamIDclan) { var call = this.GetFunction<NativeGetFriendClanRank>(this.Functions.GetFriendClanRank); return call(this.ObjectAddress, steamIDuser, steamIDclan); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeVoiceIsAvailable(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool VoiceIsAvailable() { var call = this.GetFunction<NativeVoiceIsAvailable>(this.Functions.VoiceIsAvailable); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTestVoiceDisconnect(IntPtr thisobj, Int32 hVoiceCall);
		public void TestVoiceDisconnect(Int32 hVoiceCall) { var call = this.GetFunction<NativeTestVoiceDisconnect>(this.Functions.TestVoiceDisconnect); call(this.ObjectAddress, hVoiceCall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTestChatRoomPeerDisconnect(IntPtr thisobj, UInt64 steamIDchat, UInt64 steamIDuser);
		public void TestChatRoomPeerDisconnect(UInt64 steamIDchat, UInt64 steamIDuser) { var call = this.GetFunction<NativeTestChatRoomPeerDisconnect>(this.Functions.TestChatRoomPeerDisconnect); call(this.ObjectAddress, steamIDchat, steamIDuser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTestVoicePacketLoss(IntPtr thisobj, float flPacketDropFraction);
		public void TestVoicePacketLoss(float flPacketDropFraction) { var call = this.GetFunction<NativeTestVoicePacketLoss>(this.Functions.TestVoicePacketLoss); call(this.ObjectAddress, flPacketDropFraction); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFindFriendVoiceChatHandle(IntPtr thisobj, UInt64 steamID);
		public Int32 FindFriendVoiceChatHandle(UInt64 steamID) { var call = this.GetFunction<NativeFindFriendVoiceChatHandle>(this.Functions.FindFriendVoiceChatHandle); return call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRequestFriendsWhoPlayGame(IntPtr thisobj, UInt64 gameId);
		public void RequestFriendsWhoPlayGame(UInt64 gameId) { var call = this.GetFunction<NativeRequestFriendsWhoPlayGame>(this.Functions.RequestFriendsWhoPlayGame); call(this.ObjectAddress, gameId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetCountFriendsWhoPlayGame(IntPtr thisobj, UInt64 gameId);
		public UInt32 GetCountFriendsWhoPlayGame(UInt64 gameId) { var call = this.GetFunction<NativeGetCountFriendsWhoPlayGame>(this.Functions.GetCountFriendsWhoPlayGame); return call(this.ObjectAddress, gameId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetFriendWhoPlaysGame(IntPtr thisobj, ref UInt64 ret, UInt32 arg1, UInt64 gameId);
		public UInt64 GetFriendWhoPlaysGame(UInt32 arg1, UInt64 gameId) { UInt64 ret = 0; var call = this.GetFunction<NativeGetFriendWhoPlaysGame>(this.Functions.GetFriendWhoPlaysGame); call(this.ObjectAddress, ref ret, arg1, gameId); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPlayedWith(IntPtr thisobj, UInt64 steamId);
		public void SetPlayedWith(UInt64 steamId) { var call = this.GetFunction<NativeSetPlayedWith>(this.Functions.SetPlayedWith); call(this.ObjectAddress, steamId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestClanOfficerList(IntPtr thisobj, UInt64 clanId);
		public UInt64 RequestClanOfficerList(UInt64 clanId) { var call = this.GetFunction<NativeRequestClanOfficerList>(this.Functions.RequestClanOfficerList); return call(this.ObjectAddress, clanId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetClanOwner(IntPtr thisobj, ref UInt64 ret, UInt64 clanId);
		public UInt64 GetClanOwner(UInt64 clanId) { UInt64 ret = 0; var call = this.GetFunction<NativeGetClanOwner>(this.Functions.GetClanOwner); call(this.ObjectAddress, ref ret, clanId); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetClanOfficerCount(IntPtr thisobj, UInt64 clanId);
		public Int32 GetClanOfficerCount(UInt64 clanId) { var call = this.GetFunction<NativeGetClanOfficerCount>(this.Functions.GetClanOfficerCount); return call(this.ObjectAddress, clanId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetClanOfficerByIndex(IntPtr thisobj, ref UInt64 ret, UInt64 clanId, Int32 iIndex);
		public UInt64 GetClanOfficerByIndex(UInt64 clanId, Int32 iIndex) { UInt64 ret = 0; var call = this.GetFunction<NativeGetClanOfficerByIndex>(this.Functions.GetClanOfficerByIndex); call(this.ObjectAddress, ref ret, clanId, iIndex); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetUserRestrictions(IntPtr thisobj);
		public Int32 GetUserRestrictions() { var call = this.GetFunction<NativeGetUserRestrictions>(this.Functions.GetUserRestrictions); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestFriendProfileInfo(IntPtr thisobj, UInt64 friendID);
		public UInt64 RequestFriendProfileInfo(UInt64 friendID) { var call = this.GetFunction<NativeRequestFriendProfileInfo>(this.Functions.RequestFriendProfileInfo); return call(this.ObjectAddress, friendID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendProfileInfo(IntPtr thisobj, UInt64 friendID, string szKey);
		public string GetFriendProfileInfo(UInt64 friendID, string szKey) { var call = this.GetFunction<NativeGetFriendProfileInfo>(this.Functions.GetFriendProfileInfo); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, friendID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeInviteUserToGame(IntPtr thisobj, UInt64 steamID, string szUnk);
		[return: MarshalAs(UnmanagedType.I1)] public bool InviteUserToGame(UInt64 steamID, string szUnk) { var call = this.GetFunction<NativeInviteUserToGame>(this.Functions.InviteUserToGame); return call(this.ObjectAddress, steamID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szUnk ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetOnlineConsoleFriendCount(IntPtr thisobj);
		public Int32 GetOnlineConsoleFriendCount() { var call = this.GetFunction<NativeGetOnlineConsoleFriendCount>(this.Functions.GetOnlineConsoleFriendCount); return call(this.ObjectAddress); }

        /*virtual SteamAPICall_t RequestTrade( CSteamID steamID ) = 0;
        virtual void TradeResponse( unsigned int, bool ) = 0;
        virtual void CancelTradeRequest( CSteamID steamID ) = 0;
        virtual bool HideFriend( CSteamID friendID, bool bHide ) = 0;
        virtual const char * GetFriendFacebookName( CSteamID friendID ) = 0;
        virtual uint64 GetFriendFacebookID( CSteamID friendID ) = 0;*/
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamMatchmakingPlayersResponseVTable
	{
		public IntPtr AddPlayerToList;
		public IntPtr PlayersFailedToRespond;
		public IntPtr PlayersRefreshComplete;
	}
	
	public class ISteamMatchmakingPlayersResponse : NativeWrapper<ISteamMatchmakingPlayersResponseVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddPlayerToList(IntPtr thisobj, string pchName, Int32 nScore, float flTimePlayed);
		public void AddPlayerToList(string pchName, Int32 nScore, float flTimePlayed) { var call = this.GetFunction<NativeAddPlayerToList>(this.Functions.AddPlayerToList); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), nScore, flTimePlayed); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativePlayersFailedToRespond(IntPtr thisobj);
		public void PlayersFailedToRespond() { var call = this.GetFunction<NativePlayersFailedToRespond>(this.Functions.PlayersFailedToRespond); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativePlayersRefreshComplete(IntPtr thisobj);
		public void PlayersRefreshComplete() { var call = this.GetFunction<NativePlayersRefreshComplete>(this.Functions.PlayersRefreshComplete); call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientContentServerVTable
	{
		public IntPtr GetHSteamUser;
		public IntPtr GetSteamID;
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr GetLogonState;
		public IntPtr Connected;
		public IntPtr RaiseConnectionPriority;
		public IntPtr ResetConnectionPriority;
		public IntPtr SetCellID;
		public IntPtr SendClientContentAuthRequest;
		public IntPtr CheckTicket;
	}
	
	public class IClientContentServer : NativeWrapper<IClientContentServerVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetHSteamUser(IntPtr thisobj);
		public Int32 GetHSteamUser() { var call = this.GetFunction<NativeGetHSteamUser>(this.Functions.GetHSteamUser); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetSteamID(IntPtr thisobj, ref UInt64 ret);
		public UInt64 GetSteamID() { UInt64 ret = 0; var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj, UInt32 uContentServerID);
		public void LogOn(UInt32 uContentServerID) { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress, uContentServerID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELogonState NativeGetLogonState(IntPtr thisobj);
		public ELogonState GetLogonState() { var call = this.GetFunction<NativeGetLogonState>(this.Functions.GetLogonState); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeConnected(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Connected() { var call = this.GetFunction<NativeConnected>(this.Functions.Connected); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRaiseConnectionPriority(IntPtr thisobj, EConnectionPriority eConnectionPriority);
		public Int32 RaiseConnectionPriority(EConnectionPriority eConnectionPriority) { var call = this.GetFunction<NativeRaiseConnectionPriority>(this.Functions.RaiseConnectionPriority); return call(this.ObjectAddress, eConnectionPriority); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeResetConnectionPriority(IntPtr thisobj, Int32 hRaiseConnectionPriorityPrev);
		public void ResetConnectionPriority(Int32 hRaiseConnectionPriorityPrev) { var call = this.GetFunction<NativeResetConnectionPriority>(this.Functions.ResetConnectionPriority); call(this.ObjectAddress, hRaiseConnectionPriorityPrev); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetCellID(IntPtr thisobj, UInt32 cellID);
		public void SetCellID(UInt32 cellID) { var call = this.GetFunction<NativeSetCellID>(this.Functions.SetCellID); call(this.ObjectAddress, cellID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendClientContentAuthRequest(IntPtr thisobj, UInt64 steamID, UInt32 unContentID, [MarshalAs(UnmanagedType.I1)] bool bUseToken, UInt64 ulSessionToken, [MarshalAs(UnmanagedType.I1)] bool bTokenPresent);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendClientContentAuthRequest(UInt64 steamID, UInt32 unContentID, [MarshalAs(UnmanagedType.I1)] bool bUseToken, UInt64 ulSessionToken, [MarshalAs(UnmanagedType.I1)] bool bTokenPresent) { var call = this.GetFunction<NativeSendClientContentAuthRequest>(this.Functions.SendClientContentAuthRequest); return call(this.ObjectAddress, steamID, unContentID, bUseToken, ulSessionToken, bTokenPresent); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeCheckTicket(IntPtr thisobj, UInt64 steamID, UInt32 uContentID, byte[] pvTicketData, UInt32 cubTicketLength);
		[return: MarshalAs(UnmanagedType.I1)] public bool CheckTicket(UInt64 steamID, UInt32 uContentID, byte[] pvTicketData, UInt32 cubTicketLength) { var call = this.GetFunction<NativeCheckTicket>(this.Functions.CheckTicket); return call(this.ObjectAddress, steamID, uContentID, pvTicketData, cubTicketLength); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=32)]
	public struct CNatTraversalStat
	{
		public EResult m_eResult;
		public ENatType m_eLocalNatType;
		public ENatType m_eRemoteNatType;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bMultiUserChat;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bRelay;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientUserVTable
	{
		public IntPtr GetHSteamUser;
		public IntPtr LogOn;
		public IntPtr LogOnWithPassword;
		public IntPtr LogOnAndCreateNewSteamAccountIfNeeded;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr GetLogonState;
		public IntPtr Connected;
		public IntPtr TryingToLogin;
		public IntPtr GetSteamID;
		public IntPtr GetConsoleSteamID;
		public IntPtr IsVACBanned;
		public IntPtr RequireShowVACBannedMessage;
		public IntPtr AcknowledgeVACBanning;
		public IntPtr SetSteam2Ticket;
		public IntPtr SetEmail;
		public IntPtr SetConfigString;
		public IntPtr GetConfigString;
		public IntPtr SetConfigInt;
		public IntPtr GetConfigInt;
		public IntPtr GetConfigStoreKeyName;
		public IntPtr InitiateGameConnection;
		public IntPtr InitiateGameConnectionOld;
		public IntPtr TerminateGameConnection;
		public IntPtr SetSelfAsPrimaryChatDestination;
		public IntPtr IsPrimaryChatDestination;
		public IntPtr RequestLegacyCDKey;
		public IntPtr SendGuestPassByEmail;
		public IntPtr SendGuestPassByAccountID;
		public IntPtr AckGuestPass;
		public IntPtr RedeemGuestPass;
		public IntPtr GetGuestPassToGiveCount;
		public IntPtr GetGuestPassToRedeemCount;
		public IntPtr GetGuestPassLastUpdateTime;
		public IntPtr GetGuestPassToGiveInfo;
		public IntPtr GetGuestPassToRedeemInfo;
		public IntPtr GetGuestPassToRedeemSenderAddress;
		public IntPtr GetGuestPassToRedeemSenderName;
		public IntPtr RequestGuestPassTargetList;
		public IntPtr RequestGiftTargetList;
		public IntPtr AcknowledgeMessageByGID;
		public IntPtr SetLanguage;
		public IntPtr TrackAppUsageEvent;
		public IntPtr RaiseConnectionPriority;
		public IntPtr ResetConnectionPriority;
		public IntPtr SetAccountNameFromSteam2;
		public IntPtr SetPasswordFromSteam2;
		public IntPtr SetAccountNameForCachedCredentialLogin;
		public IntPtr SetLoginInformation;
		public IntPtr SetAccountCreationTime;
		public IntPtr DoesTextContainUserPassword;
		public IntPtr obselete_GetCMIPAddress;
		public IntPtr obselete_GetP2PRelayIPAddress;
		public IntPtr RequestWebAuthToken;
		public IntPtr GetLanguage;
		public IntPtr SetCyberCafe;
		public IntPtr CreateAccount;
		public IntPtr CheckPassword;
		public IntPtr ResetPassword;
		public IntPtr TrackNatTraversalStat;
		public IntPtr RefreshSteam2Login;
		public IntPtr RefreshSteam2LoginWithSecureOption;
		public IntPtr Steam2IsSecureComputer;
		public IntPtr GetPackageIDForGuestPassToRedeemByGID;
		public IntPtr TrackSteamUsageEvent;
		public IntPtr TrackSteamGUIUsage;
		public IntPtr SetComputerInUse;
		public IntPtr IsGameRunning;
		public IntPtr GetCurrentSessionToken;
		public IntPtr UpdateAppOwnershipTicket;
		public IntPtr RequestCustomBinary;
		public IntPtr GetCustomBinariesState;
		public IntPtr SetCellID;
		public IntPtr GetUserBaseFolder;
		public IntPtr GetUserDataFolder;
		public IntPtr GetUserConfigFolder;
		public IntPtr GetAccountName;
		public IntPtr RequiresLegacyCDKey;
		public IntPtr GetLegacyCDKey;
		public IntPtr HasLegacyCDKey;
		public IntPtr RemoveLegacyCDKey;
		public IntPtr StartVoiceRecording;
		public IntPtr StopVoiceRecording;
		public IntPtr ResetVoiceRecording;
		public IntPtr GetAvailableVoice;
		public IntPtr GetVoice;
		public IntPtr GetCompressedVoice;
		public IntPtr DecompressVoice;
		public IntPtr GetVoiceOptimalSampleRate;
		public IntPtr IsAnyGameRunning;
		public IntPtr ChangePassword;
		public IntPtr ChangeEmail;
		public IntPtr ChangeSecretQuestionAndAnswer;
		public IntPtr SetSteam2FullASTicket;
		public IntPtr GetEmail;
		public IntPtr RequestForgottenPasswordEmail;
		public IntPtr Test_FakeConnectionTimeout;
		public IntPtr RunInstallScript;
		public IntPtr IsInstallScriptRunning;
		public IntPtr GetInstallScriptString;
		public IntPtr GetInstallScriptState;
		public IntPtr SpawnProcess;
		public IntPtr GetAppOwnershipTicketLength;
		public IntPtr GetAppOwnershipTicketData;
		public IntPtr GetAppOwnershipTicketExtendedData;
		public IntPtr GetAppDecryptionKey;
		public IntPtr GetMarketingMessageCount;
		public IntPtr GetMarketingMessage;
		public IntPtr GetAuthSessionTicket;
		public IntPtr BeginAuthSession;
		public IntPtr EndAuthSession;
		public IntPtr CancelAuthTicket;
		public IntPtr IsUserSubscribedAppInTicket;
		public IntPtr AdvertiseGame;
		public IntPtr RequestEncryptedAppTicket;
		public IntPtr GetEncryptedAppTicket;
		public IntPtr SetAccountLimited;
		public IntPtr IsAccountLimited;
		public IntPtr SendValidationEmail;
		public IntPtr GameConnectTokensAvailable;
		public IntPtr NumGamesRunning;
		public IntPtr GetRunningGameID;
		public IntPtr GetAccountSecurityPolicyFlags;
		public IntPtr RequestChangeEmail;
		public IntPtr ChangePasswordWithCode;
		public IntPtr ChangeEmailWithCode;
		public IntPtr ChangeSecretQuestionAndAnswerWithCode;
		public IntPtr SetClientStat;
		public IntPtr VerifyPassword;
		public IntPtr SupportUser;
		public IntPtr IsAppOverlayEnabled;
		public IntPtr IsBehindNAT;
		public IntPtr GetMicroTxnAppID;
		public IntPtr GetMicroTxnOrderID;
		public IntPtr BGetMicroTxnPrice;
		public IntPtr GetMicroTxnLineItemCount;
		public IntPtr BGetMicroTxnLineItem;
		public IntPtr BIsSandboxMicroTxn;
		public IntPtr AuthorizeMicroTxn;
		public IntPtr NotifyAppMicroTxnAuthResponse;
		public IntPtr BGetWalletBalance;
		public IntPtr RequestMicroTxnInfo;
		public IntPtr BGetAppMinutesPlayed;
		public IntPtr BGetGuideURL;
		public IntPtr GetClientAppListResponse_AddApp;
		public IntPtr GetClientAppListResponse_AddDLC;
		public IntPtr GetClientAppListResponse_Done;
		public IntPtr PostUIResultToClientJob;
		public IntPtr PromptToVerifyEmail;
		public IntPtr PromptToChangePassword;
		public IntPtr AccountLocked;
		public IntPtr AccountShouldShowLockUI;
		public IntPtr AccountLockedByIPT;
		public IntPtr GetCountAuthedComputers;
		public IntPtr AccountCanUseIPT;
		public IntPtr ChangeTwoFactorAuthOptions;
		public IntPtr Set2ndFactorAuthCode;
	}
	
	public class IClientUser : NativeWrapper<IClientUserVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetHSteamUser(IntPtr thisobj);
		public Int32 GetHSteamUser() { var call = this.GetFunction<NativeGetHSteamUser>(this.Functions.GetHSteamUser); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj, Byte unk1, UInt64 steamID);
		public void LogOn(Byte unk1, UInt64 steamID) { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress, unk1, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOnWithPassword(IntPtr thisobj, Byte unk1, string pchLogin, string pchPassword);
		public void LogOnWithPassword(Byte unk1, string pchLogin, string pchPassword) { var call = this.GetFunction<NativeLogOnWithPassword>(this.Functions.LogOnWithPassword); call(this.ObjectAddress, unk1, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchLogin ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPassword ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOnAndCreateNewSteamAccountIfNeeded(IntPtr thisobj, Byte unk1);
		public void LogOnAndCreateNewSteamAccountIfNeeded(Byte unk1) { var call = this.GetFunction<NativeLogOnAndCreateNewSteamAccountIfNeeded>(this.Functions.LogOnAndCreateNewSteamAccountIfNeeded); call(this.ObjectAddress, unk1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELogonState NativeGetLogonState(IntPtr thisobj);
		public ELogonState GetLogonState() { var call = this.GetFunction<NativeGetLogonState>(this.Functions.GetLogonState); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeConnected(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Connected() { var call = this.GetFunction<NativeConnected>(this.Functions.Connected); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeTryingToLogin(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool TryingToLogin() { var call = this.GetFunction<NativeTryingToLogin>(this.Functions.TryingToLogin); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetSteamID(IntPtr thisobj, ref UInt64 ret);
		public UInt64 GetSteamID() { UInt64 ret = 0; var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetConsoleSteamID(IntPtr thisobj, ref UInt64 ret);
		public UInt64 GetConsoleSteamID() { UInt64 ret = 0; var call = this.GetFunction<NativeGetConsoleSteamID>(this.Functions.GetConsoleSteamID); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsVACBanned(IntPtr thisobj, UInt32 nGameID);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsVACBanned(UInt32 nGameID) { var call = this.GetFunction<NativeIsVACBanned>(this.Functions.IsVACBanned); return call(this.ObjectAddress, nGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequireShowVACBannedMessage(IntPtr thisobj, UInt32 nAppID);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequireShowVACBannedMessage(UInt32 nAppID) { var call = this.GetFunction<NativeRequireShowVACBannedMessage>(this.Functions.RequireShowVACBannedMessage); return call(this.ObjectAddress, nAppID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAcknowledgeVACBanning(IntPtr thisobj, UInt32 nAppID);
		public void AcknowledgeVACBanning(UInt32 nAppID) { var call = this.GetFunction<NativeAcknowledgeVACBanning>(this.Functions.AcknowledgeVACBanning); call(this.ObjectAddress, nAppID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetSteam2Ticket(IntPtr thisobj, byte[] pubTicket, Int32 cubTicket);
		public void SetSteam2Ticket(byte[] pubTicket, Int32 cubTicket) { var call = this.GetFunction<NativeSetSteam2Ticket>(this.Functions.SetSteam2Ticket); call(this.ObjectAddress, pubTicket, cubTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetEmail(IntPtr thisobj, string pchEmail);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetEmail(string pchEmail) { var call = this.GetFunction<NativeSetEmail>(this.Functions.SetEmail); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchEmail ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetConfigString(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetConfigString(ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetConfigString>(this.Functions.SetConfigString); return call(this.ObjectAddress, eRegistrySubTree, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetConfigString(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue, Int32 cbValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetConfigString(ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue, Int32 cbValue) { var call = this.GetFunction<NativeGetConfigString>(this.Functions.GetConfigString); return call(this.ObjectAddress, eRegistrySubTree, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) ), cbValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetConfigInt(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, Int32 iValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetConfigInt(ERegistrySubTree eRegistrySubTree, string pchKey, Int32 iValue) { var call = this.GetFunction<NativeSetConfigInt>(this.Functions.SetConfigInt); return call(this.ObjectAddress, eRegistrySubTree, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), iValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetConfigInt(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, ref Int32 pValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetConfigInt(ERegistrySubTree eRegistrySubTree, string pchKey, ref Int32 pValue) { var call = this.GetFunction<NativeGetConfigInt>(this.Functions.GetConfigInt); return call(this.ObjectAddress, eRegistrySubTree, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), ref pValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetConfigStoreKeyName(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, string pchStoreName, Int32 cbStoreName);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetConfigStoreKeyName(ERegistrySubTree eRegistrySubTree, string pchKey, string pchStoreName, Int32 cbStoreName) { var call = this.GetFunction<NativeGetConfigStoreKeyName>(this.Functions.GetConfigStoreKeyName); return call(this.ObjectAddress, eRegistrySubTree, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchStoreName ) ), cbStoreName); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitiateGameConnection(IntPtr thisobj, byte[] pOutputBlob, Int32 cbBlobMax, UInt64 steamIDGS, UInt64 gameID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure);
		public Int32 InitiateGameConnection(byte[] pOutputBlob, Int32 cbBlobMax, UInt64 steamIDGS, UInt64 gameID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure) { var call = this.GetFunction<NativeInitiateGameConnection>(this.Functions.InitiateGameConnection); return call(this.ObjectAddress, pOutputBlob, cbBlobMax, steamIDGS, gameID, unIPServer, usPortServer, bSecure); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitiateGameConnectionOld(IntPtr thisobj, byte[] pOutputBlob, Int32 cbBlobMax, UInt64 steamIDGS, UInt64 gameID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure, byte[] pvSteam2GetEncryptionKey, Int32 cbSteam2GetEncryptionKey);
		public Int32 InitiateGameConnectionOld(byte[] pOutputBlob, Int32 cbBlobMax, UInt64 steamIDGS, UInt64 gameID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure, byte[] pvSteam2GetEncryptionKey, Int32 cbSteam2GetEncryptionKey) { var call = this.GetFunction<NativeInitiateGameConnectionOld>(this.Functions.InitiateGameConnectionOld); return call(this.ObjectAddress, pOutputBlob, cbBlobMax, steamIDGS, gameID, unIPServer, usPortServer, bSecure, pvSteam2GetEncryptionKey, cbSteam2GetEncryptionKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTerminateGameConnection(IntPtr thisobj, UInt32 unIPServer, UInt16 usPortServer);
		public void TerminateGameConnection(UInt32 unIPServer, UInt16 usPortServer) { var call = this.GetFunction<NativeTerminateGameConnection>(this.Functions.TerminateGameConnection); call(this.ObjectAddress, unIPServer, usPortServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetSelfAsPrimaryChatDestination(IntPtr thisobj);
		public void SetSelfAsPrimaryChatDestination() { var call = this.GetFunction<NativeSetSelfAsPrimaryChatDestination>(this.Functions.SetSelfAsPrimaryChatDestination); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsPrimaryChatDestination(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsPrimaryChatDestination() { var call = this.GetFunction<NativeIsPrimaryChatDestination>(this.Functions.IsPrimaryChatDestination); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRequestLegacyCDKey(IntPtr thisobj, UInt32 iAppID);
		public void RequestLegacyCDKey(UInt32 iAppID) { var call = this.GetFunction<NativeRequestLegacyCDKey>(this.Functions.RequestLegacyCDKey); call(this.ObjectAddress, iAppID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendGuestPassByEmail(IntPtr thisobj, string pchEmailAccount, UInt64 gidGuestPassID, [MarshalAs(UnmanagedType.I1)] bool bResending);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendGuestPassByEmail(string pchEmailAccount, UInt64 gidGuestPassID, [MarshalAs(UnmanagedType.I1)] bool bResending) { var call = this.GetFunction<NativeSendGuestPassByEmail>(this.Functions.SendGuestPassByEmail); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchEmailAccount ) ), gidGuestPassID, bResending); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendGuestPassByAccountID(IntPtr thisobj, UInt32 uAccountID, UInt64 gidGuestPassID, [MarshalAs(UnmanagedType.I1)] bool bResending);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendGuestPassByAccountID(UInt32 uAccountID, UInt64 gidGuestPassID, [MarshalAs(UnmanagedType.I1)] bool bResending) { var call = this.GetFunction<NativeSendGuestPassByAccountID>(this.Functions.SendGuestPassByAccountID); return call(this.ObjectAddress, uAccountID, gidGuestPassID, bResending); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAckGuestPass(IntPtr thisobj, string pchGuestPassCode);
		[return: MarshalAs(UnmanagedType.I1)] public bool AckGuestPass(string pchGuestPassCode) { var call = this.GetFunction<NativeAckGuestPass>(this.Functions.AckGuestPass); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchGuestPassCode ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRedeemGuestPass(IntPtr thisobj, string pchGuestPassCode);
		[return: MarshalAs(UnmanagedType.I1)] public bool RedeemGuestPass(string pchGuestPassCode) { var call = this.GetFunction<NativeRedeemGuestPass>(this.Functions.RedeemGuestPass); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchGuestPassCode ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetGuestPassToGiveCount(IntPtr thisobj);
		public UInt32 GetGuestPassToGiveCount() { var call = this.GetFunction<NativeGetGuestPassToGiveCount>(this.Functions.GetGuestPassToGiveCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetGuestPassToRedeemCount(IntPtr thisobj);
		public UInt32 GetGuestPassToRedeemCount() { var call = this.GetFunction<NativeGetGuestPassToRedeemCount>(this.Functions.GetGuestPassToRedeemCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetGuestPassLastUpdateTime(IntPtr thisobj);
		public UInt32 GetGuestPassLastUpdateTime() { var call = this.GetFunction<NativeGetGuestPassLastUpdateTime>(this.Functions.GetGuestPassLastUpdateTime); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetGuestPassToGiveInfo(IntPtr thisobj, UInt32 nPassIndex, ref UInt64 pgidGuestPassID, ref UInt32 pnPackageID, ref UInt32 pRTime32Created, ref UInt32 pRTime32Expiration, ref UInt32 pRTime32Sent, ref UInt32 pRTime32Redeemed, string pchRecipientAddress, Int32 cRecipientAddressSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetGuestPassToGiveInfo(UInt32 nPassIndex, ref UInt64 pgidGuestPassID, ref UInt32 pnPackageID, ref UInt32 pRTime32Created, ref UInt32 pRTime32Expiration, ref UInt32 pRTime32Sent, ref UInt32 pRTime32Redeemed, string pchRecipientAddress, Int32 cRecipientAddressSize) { var call = this.GetFunction<NativeGetGuestPassToGiveInfo>(this.Functions.GetGuestPassToGiveInfo); return call(this.ObjectAddress, nPassIndex, ref pgidGuestPassID, ref pnPackageID, ref pRTime32Created, ref pRTime32Expiration, ref pRTime32Sent, ref pRTime32Redeemed, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchRecipientAddress ) ), cRecipientAddressSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetGuestPassToRedeemInfo(IntPtr thisobj, UInt32 nPassIndex, ref UInt64 pgidGuestPassID, ref UInt32 pnPackageID, ref UInt32 pRTime32Created, ref UInt32 pRTime32Expiration, ref UInt32 pRTime32Sent, ref UInt32 pRTime32Redeemed);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetGuestPassToRedeemInfo(UInt32 nPassIndex, ref UInt64 pgidGuestPassID, ref UInt32 pnPackageID, ref UInt32 pRTime32Created, ref UInt32 pRTime32Expiration, ref UInt32 pRTime32Sent, ref UInt32 pRTime32Redeemed) { var call = this.GetFunction<NativeGetGuestPassToRedeemInfo>(this.Functions.GetGuestPassToRedeemInfo); return call(this.ObjectAddress, nPassIndex, ref pgidGuestPassID, ref pnPackageID, ref pRTime32Created, ref pRTime32Expiration, ref pRTime32Sent, ref pRTime32Redeemed); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetGuestPassToRedeemSenderAddress(IntPtr thisobj, UInt32 nPassIndex, string pchSenderAddress, Int32 cSenderAddressSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetGuestPassToRedeemSenderAddress(UInt32 nPassIndex, string pchSenderAddress, Int32 cSenderAddressSize) { var call = this.GetFunction<NativeGetGuestPassToRedeemSenderAddress>(this.Functions.GetGuestPassToRedeemSenderAddress); return call(this.ObjectAddress, nPassIndex, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchSenderAddress ) ), cSenderAddressSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetGuestPassToRedeemSenderName(IntPtr thisobj, UInt32 nPassIndex, string pchSenderName, Int32 cSenderNameSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetGuestPassToRedeemSenderName(UInt32 nPassIndex, string pchSenderName, Int32 cSenderNameSize) { var call = this.GetFunction<NativeGetGuestPassToRedeemSenderName>(this.Functions.GetGuestPassToRedeemSenderName); return call(this.ObjectAddress, nPassIndex, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchSenderName ) ), cSenderNameSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestGuestPassTargetList(IntPtr thisobj, UInt64 gidGuestPassID);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestGuestPassTargetList(UInt64 gidGuestPassID) { var call = this.GetFunction<NativeRequestGuestPassTargetList>(this.Functions.RequestGuestPassTargetList); return call(this.ObjectAddress, gidGuestPassID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestGiftTargetList(IntPtr thisobj, UInt32 nPackageID);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestGiftTargetList(UInt32 nPackageID) { var call = this.GetFunction<NativeRequestGiftTargetList>(this.Functions.RequestGiftTargetList); return call(this.ObjectAddress, nPackageID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAcknowledgeMessageByGID(IntPtr thisobj, string pchMessageGID);
		public void AcknowledgeMessageByGID(string pchMessageGID) { var call = this.GetFunction<NativeAcknowledgeMessageByGID>(this.Functions.AcknowledgeMessageByGID); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchMessageGID ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLanguage(IntPtr thisobj, string pchLanguage);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLanguage(string pchLanguage) { var call = this.GetFunction<NativeSetLanguage>(this.Functions.SetLanguage); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchLanguage ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTrackAppUsageEvent(IntPtr thisobj, UInt64 gameID, Int32 eAppUsageEvent, string arg3);
		public void TrackAppUsageEvent(UInt64 gameID, Int32 eAppUsageEvent, string arg3) { var call = this.GetFunction<NativeTrackAppUsageEvent>(this.Functions.TrackAppUsageEvent); call(this.ObjectAddress, gameID, eAppUsageEvent, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg3 ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRaiseConnectionPriority(IntPtr thisobj, EConnectionPriority eConnectionPriority);
		public Int32 RaiseConnectionPriority(EConnectionPriority eConnectionPriority) { var call = this.GetFunction<NativeRaiseConnectionPriority>(this.Functions.RaiseConnectionPriority); return call(this.ObjectAddress, eConnectionPriority); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeResetConnectionPriority(IntPtr thisobj, Int32 hRaiseConnectionPriorityPrev);
		public void ResetConnectionPriority(Int32 hRaiseConnectionPriorityPrev) { var call = this.GetFunction<NativeResetConnectionPriority>(this.Functions.ResetConnectionPriority); call(this.ObjectAddress, hRaiseConnectionPriorityPrev); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetAccountNameFromSteam2(IntPtr thisobj, string pchAccountName);
		public void SetAccountNameFromSteam2(string pchAccountName) { var call = this.GetFunction<NativeSetAccountNameFromSteam2>(this.Functions.SetAccountNameFromSteam2); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAccountName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPasswordFromSteam2(IntPtr thisobj, string pchPassword);
		public void SetPasswordFromSteam2(string pchPassword) { var call = this.GetFunction<NativeSetPasswordFromSteam2>(this.Functions.SetPasswordFromSteam2); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPassword ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetAccountNameForCachedCredentialLogin(IntPtr thisobj, string pchAccountName, [MarshalAs(UnmanagedType.I1)] bool bRememberPassword);
		public void SetAccountNameForCachedCredentialLogin(string pchAccountName, [MarshalAs(UnmanagedType.I1)] bool bRememberPassword) { var call = this.GetFunction<NativeSetAccountNameForCachedCredentialLogin>(this.Functions.SetAccountNameForCachedCredentialLogin); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAccountName ) ), bRememberPassword); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLoginInformation(IntPtr thisobj, string pchAccountName, string pchPassword, [MarshalAs(UnmanagedType.I1)] bool bRememberPassword);
		public void SetLoginInformation(string pchAccountName, string pchPassword, [MarshalAs(UnmanagedType.I1)] bool bRememberPassword) { var call = this.GetFunction<NativeSetLoginInformation>(this.Functions.SetLoginInformation); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAccountName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPassword ) ), bRememberPassword); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetAccountCreationTime(IntPtr thisobj, UInt32 rtime32Time);
		public void SetAccountCreationTime(UInt32 rtime32Time) { var call = this.GetFunction<NativeSetAccountCreationTime>(this.Functions.SetAccountCreationTime); call(this.ObjectAddress, rtime32Time); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeDoesTextContainUserPassword(IntPtr thisobj, string pchText);
		[return: MarshalAs(UnmanagedType.I1)] public bool DoesTextContainUserPassword(string pchText) { var call = this.GetFunction<NativeDoesTextContainUserPassword>(this.Functions.DoesTextContainUserPassword); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchText ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 Nativeobselete_GetCMIPAddress(IntPtr thisobj);
		public UInt32 obselete_GetCMIPAddress() { var call = this.GetFunction<Nativeobselete_GetCMIPAddress>(this.Functions.obselete_GetCMIPAddress); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 Nativeobselete_GetP2PRelayIPAddress(IntPtr thisobj);
		public UInt32 obselete_GetP2PRelayIPAddress() { var call = this.GetFunction<Nativeobselete_GetP2PRelayIPAddress>(this.Functions.obselete_GetP2PRelayIPAddress); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestWebAuthToken(IntPtr thisobj);
		public UInt64 RequestWebAuthToken() { var call = this.GetFunction<NativeRequestWebAuthToken>(this.Functions.RequestWebAuthToken); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetLanguage(IntPtr thisobj, string pchLanguage, Int32 cbLanguage);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetLanguage(string pchLanguage, Int32 cbLanguage) { var call = this.GetFunction<NativeGetLanguage>(this.Functions.GetLanguage); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchLanguage ) ), cbLanguage); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetCyberCafe(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bCyberCafe);
		public void SetCyberCafe([MarshalAs(UnmanagedType.I1)] bool bCyberCafe) { var call = this.GetFunction<NativeSetCyberCafe>(this.Functions.SetCyberCafe); call(this.ObjectAddress, bCyberCafe); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCreateAccount(IntPtr thisobj, string pchAccountName, string pchNewPassword, string pchNewEmail, Int32 iQuestion, string pchNewQuestion, string pchNewAnswer);
		public void CreateAccount(string pchAccountName, string pchNewPassword, string pchNewEmail, Int32 iQuestion, string pchNewQuestion, string pchNewAnswer) { var call = this.GetFunction<NativeCreateAccount>(this.Functions.CreateAccount); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAccountName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchNewPassword ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchNewEmail ) ), iQuestion, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchNewQuestion ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchNewAnswer ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCheckPassword(IntPtr thisobj, string pchAccountName, string pchPassword, [MarshalAs(UnmanagedType.I1)] bool bAttemptRecovery);
		public void CheckPassword(string pchAccountName, string pchPassword, [MarshalAs(UnmanagedType.I1)] bool bAttemptRecovery) { var call = this.GetFunction<NativeCheckPassword>(this.Functions.CheckPassword); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAccountName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPassword ) ), bAttemptRecovery); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeResetPassword(IntPtr thisobj, string pchAccountName, string pchOldPassword, string pchNewPassword, string pchValidationCode, string pchAnswer);
		public void ResetPassword(string pchAccountName, string pchOldPassword, string pchNewPassword, string pchValidationCode, string pchAnswer) { var call = this.GetFunction<NativeResetPassword>(this.Functions.ResetPassword); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAccountName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchOldPassword ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchNewPassword ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValidationCode ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAnswer ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTrackNatTraversalStat(IntPtr thisobj, ref CNatTraversalStat pNatStat);
		public void TrackNatTraversalStat(ref CNatTraversalStat pNatStat) { var call = this.GetFunction<NativeTrackNatTraversalStat>(this.Functions.TrackNatTraversalStat); call(this.ObjectAddress, ref pNatStat); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRefreshSteam2Login(IntPtr thisobj);
		public void RefreshSteam2Login() { var call = this.GetFunction<NativeRefreshSteam2Login>(this.Functions.RefreshSteam2Login); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRefreshSteam2LoginWithSecureOption(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bIsSecure);
		public void RefreshSteam2LoginWithSecureOption([MarshalAs(UnmanagedType.I1)] bool bIsSecure) { var call = this.GetFunction<NativeRefreshSteam2LoginWithSecureOption>(this.Functions.RefreshSteam2LoginWithSecureOption); call(this.ObjectAddress, bIsSecure); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSteam2IsSecureComputer(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Steam2IsSecureComputer() { var call = this.GetFunction<NativeSteam2IsSecureComputer>(this.Functions.Steam2IsSecureComputer); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetPackageIDForGuestPassToRedeemByGID(IntPtr thisobj, UInt64 gid);
		public UInt32 GetPackageIDForGuestPassToRedeemByGID(UInt64 gid) { var call = this.GetFunction<NativeGetPackageIDForGuestPassToRedeemByGID>(this.Functions.GetPackageIDForGuestPassToRedeemByGID); return call(this.ObjectAddress, gid); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTrackSteamUsageEvent(IntPtr thisobj, ESteamUsageEvent eSteamUsageEvent, byte[] pubKV, UInt32 cubKV);
		public void TrackSteamUsageEvent(ESteamUsageEvent eSteamUsageEvent, byte[] pubKV, UInt32 cubKV) { var call = this.GetFunction<NativeTrackSteamUsageEvent>(this.Functions.TrackSteamUsageEvent); call(this.ObjectAddress, eSteamUsageEvent, pubKV, cubKV); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTrackSteamGUIUsage(IntPtr thisobj, string arg1);
		public void TrackSteamGUIUsage(string arg1) { var call = this.GetFunction<NativeTrackSteamGUIUsage>(this.Functions.TrackSteamGUIUsage); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg1 ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetComputerInUse(IntPtr thisobj);
		public void SetComputerInUse() { var call = this.GetFunction<NativeSetComputerInUse>(this.Functions.SetComputerInUse); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsGameRunning(IntPtr thisobj, UInt64 gameID);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsGameRunning(UInt64 gameID) { var call = this.GetFunction<NativeIsGameRunning>(this.Functions.IsGameRunning); return call(this.ObjectAddress, gameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetCurrentSessionToken(IntPtr thisobj);
		public UInt64 GetCurrentSessionToken() { var call = this.GetFunction<NativeGetCurrentSessionToken>(this.Functions.GetCurrentSessionToken); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateAppOwnershipTicket(IntPtr thisobj, UInt32 nAppID, [MarshalAs(UnmanagedType.I1)] bool bOnlyUpdateIfStale, [MarshalAs(UnmanagedType.I1)] bool unk);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateAppOwnershipTicket(UInt32 nAppID, [MarshalAs(UnmanagedType.I1)] bool bOnlyUpdateIfStale, [MarshalAs(UnmanagedType.I1)] bool unk) { var call = this.GetFunction<NativeUpdateAppOwnershipTicket>(this.Functions.UpdateAppOwnershipTicket); return call(this.ObjectAddress, nAppID, bOnlyUpdateIfStale, unk); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestCustomBinary(IntPtr thisobj, string pszAbsolutePath, UInt32 nAppID, [MarshalAs(UnmanagedType.I1)] bool bForceUpdate, [MarshalAs(UnmanagedType.I1)] bool bAppLaunchRequest);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestCustomBinary(string pszAbsolutePath, UInt32 nAppID, [MarshalAs(UnmanagedType.I1)] bool bForceUpdate, [MarshalAs(UnmanagedType.I1)] bool bAppLaunchRequest) { var call = this.GetFunction<NativeRequestCustomBinary>(this.Functions.RequestCustomBinary); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pszAbsolutePath ) ), nAppID, bForceUpdate, bAppLaunchRequest); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetCustomBinariesState(IntPtr thisobj, UInt32 unAppID, ref UInt32 punProgress);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetCustomBinariesState(UInt32 unAppID, ref UInt32 punProgress) { var call = this.GetFunction<NativeGetCustomBinariesState>(this.Functions.GetCustomBinariesState); return call(this.ObjectAddress, unAppID, ref punProgress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetCellID(IntPtr thisobj, UInt32 cellID);
		public void SetCellID(UInt32 cellID) { var call = this.GetFunction<NativeSetCellID>(this.Functions.SetCellID); call(this.ObjectAddress, cellID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetUserBaseFolder(IntPtr thisobj);
		public string GetUserBaseFolder() { var call = this.GetFunction<NativeGetUserBaseFolder>(this.Functions.GetUserBaseFolder); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserDataFolder(IntPtr thisobj, UInt64 gameID, string pchBuffer, Int32 cubBuffer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserDataFolder(UInt64 gameID, string pchBuffer, Int32 cubBuffer) { var call = this.GetFunction<NativeGetUserDataFolder>(this.Functions.GetUserDataFolder); return call(this.ObjectAddress, gameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchBuffer ) ), cubBuffer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserConfigFolder(IntPtr thisobj, string pchBuffer, Int32 cubBuffer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserConfigFolder(string pchBuffer, Int32 cubBuffer) { var call = this.GetFunction<NativeGetUserConfigFolder>(this.Functions.GetUserConfigFolder); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchBuffer ) ), cubBuffer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAccountName(IntPtr thisobj, StringBuilder pchAccountName, UInt32 cb);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetAccountName(StringBuilder pchAccountName, UInt32 cb) { var call = this.GetFunction<NativeGetAccountName>(this.Functions.GetAccountName); return call(this.ObjectAddress, pchAccountName, cb); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRequiresLegacyCDKey(IntPtr thisobj, UInt32 arg1);
		public void RequiresLegacyCDKey(UInt32 arg1) { var call = this.GetFunction<NativeRequiresLegacyCDKey>(this.Functions.RequiresLegacyCDKey); call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetLegacyCDKey(IntPtr thisobj, UInt32 nAppID, string pchKeyData, Int32 cbKeyData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetLegacyCDKey(UInt32 nAppID, string pchKeyData, Int32 cbKeyData) { var call = this.GetFunction<NativeGetLegacyCDKey>(this.Functions.GetLegacyCDKey); return call(this.ObjectAddress, nAppID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKeyData ) ), cbKeyData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeHasLegacyCDKey(IntPtr thisobj, UInt32 nAppID);
		[return: MarshalAs(UnmanagedType.I1)] public bool HasLegacyCDKey(UInt32 nAppID) { var call = this.GetFunction<NativeHasLegacyCDKey>(this.Functions.HasLegacyCDKey); return call(this.ObjectAddress, nAppID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRemoveLegacyCDKey(IntPtr thisobj, UInt32 nAppID);
		public void RemoveLegacyCDKey(UInt32 nAppID) { var call = this.GetFunction<NativeRemoveLegacyCDKey>(this.Functions.RemoveLegacyCDKey); call(this.ObjectAddress, nAppID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeStartVoiceRecording(IntPtr thisobj);
		public void StartVoiceRecording() { var call = this.GetFunction<NativeStartVoiceRecording>(this.Functions.StartVoiceRecording); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeStopVoiceRecording(IntPtr thisobj);
		public void StopVoiceRecording() { var call = this.GetFunction<NativeStopVoiceRecording>(this.Functions.StopVoiceRecording); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeResetVoiceRecording(IntPtr thisobj);
		public void ResetVoiceRecording() { var call = this.GetFunction<NativeResetVoiceRecording>(this.Functions.ResetVoiceRecording); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EVoiceResult NativeGetAvailableVoice(IntPtr thisobj, ref UInt32 pcbCompressed, ref UInt32 pcbRaw);
		public EVoiceResult GetAvailableVoice(ref UInt32 pcbCompressed, ref UInt32 pcbRaw) { var call = this.GetFunction<NativeGetAvailableVoice>(this.Functions.GetAvailableVoice); return call(this.ObjectAddress, ref pcbCompressed, ref pcbRaw); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EVoiceResult NativeGetVoice(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bWantCompressed, byte[] pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten, [MarshalAs(UnmanagedType.I1)] bool bWantRaw, byte[] pRawDestBuffer, UInt32 cbRawDestBufferSize, ref UInt32 nRawBytesWritten);
		public EVoiceResult GetVoice([MarshalAs(UnmanagedType.I1)] bool bWantCompressed, byte[] pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten, [MarshalAs(UnmanagedType.I1)] bool bWantRaw, byte[] pRawDestBuffer, UInt32 cbRawDestBufferSize, ref UInt32 nRawBytesWritten) { var call = this.GetFunction<NativeGetVoice>(this.Functions.GetVoice); return call(this.ObjectAddress, bWantCompressed, pDestBuffer, cbDestBufferSize, ref nBytesWritten, bWantRaw, pRawDestBuffer, cbRawDestBufferSize, ref nRawBytesWritten); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EVoiceResult NativeGetCompressedVoice(IntPtr thisobj, byte[] pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten);
		public EVoiceResult GetCompressedVoice(byte[] pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten) { var call = this.GetFunction<NativeGetCompressedVoice>(this.Functions.GetCompressedVoice); return call(this.ObjectAddress, pDestBuffer, cbDestBufferSize, ref nBytesWritten); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EVoiceResult NativeDecompressVoice(IntPtr thisobj, byte[] pCompressed, UInt32 cbCompressed, byte[] pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten, UInt32 nSamplesPerSec);
		public EVoiceResult DecompressVoice(byte[] pCompressed, UInt32 cbCompressed, byte[] pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten, UInt32 nSamplesPerSec) { var call = this.GetFunction<NativeDecompressVoice>(this.Functions.DecompressVoice); return call(this.ObjectAddress, pCompressed, cbCompressed, pDestBuffer, cbDestBufferSize, ref nBytesWritten, nSamplesPerSec); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetVoiceOptimalSampleRate(IntPtr thisobj);
		public UInt32 GetVoiceOptimalSampleRate() { var call = this.GetFunction<NativeGetVoiceOptimalSampleRate>(this.Functions.GetVoiceOptimalSampleRate); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsAnyGameRunning(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsAnyGameRunning() { var call = this.GetFunction<NativeIsAnyGameRunning>(this.Functions.IsAnyGameRunning); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeChangePassword(IntPtr thisobj, string pchOldPassword, string pchNewPassword);
		public void ChangePassword(string pchOldPassword, string pchNewPassword) { var call = this.GetFunction<NativeChangePassword>(this.Functions.ChangePassword); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchOldPassword ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchNewPassword ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeChangeEmail(IntPtr thisobj, string arg1, string pchEmail);
		public void ChangeEmail(string arg1, string pchEmail) { var call = this.GetFunction<NativeChangeEmail>(this.Functions.ChangeEmail); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg1 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchEmail ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeChangeSecretQuestionAndAnswer(IntPtr thisobj, string arg1, Int32 iQuestion, string pchNewQuestion, string pchNewAnswer);
		public void ChangeSecretQuestionAndAnswer(string arg1, Int32 iQuestion, string pchNewQuestion, string pchNewAnswer) { var call = this.GetFunction<NativeChangeSecretQuestionAndAnswer>(this.Functions.ChangeSecretQuestionAndAnswer); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg1 ) ), iQuestion, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchNewQuestion ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchNewAnswer ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetSteam2FullASTicket(IntPtr thisobj, byte[] pubTicket, Int32 cubTicket);
		public void SetSteam2FullASTicket(byte[] pubTicket, Int32 cubTicket) { var call = this.GetFunction<NativeSetSteam2FullASTicket>(this.Functions.SetSteam2FullASTicket); call(this.ObjectAddress, pubTicket, cubTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetEmail(IntPtr thisobj, string pchEmail, Int32 cchEmail);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetEmail(string pchEmail, Int32 cchEmail) { var call = this.GetFunction<NativeGetEmail>(this.Functions.GetEmail); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchEmail ) ), cchEmail); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRequestForgottenPasswordEmail(IntPtr thisobj, string pchAccountName, string pchTriedPassword);
		public void RequestForgottenPasswordEmail(string pchAccountName, string pchTriedPassword) { var call = this.GetFunction<NativeRequestForgottenPasswordEmail>(this.Functions.RequestForgottenPasswordEmail); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAccountName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchTriedPassword ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTest_FakeConnectionTimeout(IntPtr thisobj);
		public void Test_FakeConnectionTimeout() { var call = this.GetFunction<NativeTest_FakeConnectionTimeout>(this.Functions.Test_FakeConnectionTimeout); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRunInstallScript(IntPtr thisobj, ref UInt32 pAppIDs, Int32 cAppIDs, string pchInstallPath, string pchLanguage, [MarshalAs(UnmanagedType.I1)] bool bUninstall);
		[return: MarshalAs(UnmanagedType.I1)] public bool RunInstallScript(ref UInt32 pAppIDs, Int32 cAppIDs, string pchInstallPath, string pchLanguage, [MarshalAs(UnmanagedType.I1)] bool bUninstall) { var call = this.GetFunction<NativeRunInstallScript>(this.Functions.RunInstallScript); return call(this.ObjectAddress, ref pAppIDs, cAppIDs, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchInstallPath ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchLanguage ) ), bUninstall); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeIsInstallScriptRunning(IntPtr thisobj);
		public UInt32 IsInstallScriptRunning() { var call = this.GetFunction<NativeIsInstallScriptRunning>(this.Functions.IsInstallScriptRunning); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetInstallScriptString(IntPtr thisobj, UInt32 nAppID, string pchInstallPath, string pchLanguage, string pchKeyname, string pchKeyvalue, string pchValue, Int32 cchValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetInstallScriptString(UInt32 nAppID, string pchInstallPath, string pchLanguage, string pchKeyname, string pchKeyvalue, string pchValue, Int32 cchValue) { var call = this.GetFunction<NativeGetInstallScriptString>(this.Functions.GetInstallScriptString); return call(this.ObjectAddress, nAppID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchInstallPath ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchLanguage ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKeyname ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKeyvalue ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) ), cchValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetInstallScriptState(IntPtr thisobj, string pchDescription, UInt32 cchDescription, ref UInt32 punNumSteps, ref UInt32 punCurrStep);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetInstallScriptState(string pchDescription, UInt32 cchDescription, ref UInt32 punNumSteps, ref UInt32 punCurrStep) { var call = this.GetFunction<NativeGetInstallScriptState>(this.Functions.GetInstallScriptState); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchDescription ) ), cchDescription, ref punNumSteps, ref punCurrStep); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSpawnProcess(IntPtr thisobj, byte[] lpVACBlob, UInt32 cbBlobSize, string lpApplicationName, string lpCommandLine, UInt32 dwCreationFlags, string lpCurrentDirectory, UInt32 nAppID, string pchGameName, [MarshalAs(UnmanagedType.I1)] bool bAlwaysUseShellExec);
		[return: MarshalAs(UnmanagedType.I1)] public bool SpawnProcess(byte[] lpVACBlob, UInt32 cbBlobSize, string lpApplicationName, string lpCommandLine, UInt32 dwCreationFlags, string lpCurrentDirectory, UInt32 nAppID, string pchGameName, [MarshalAs(UnmanagedType.I1)] bool bAlwaysUseShellExec) { var call = this.GetFunction<NativeSpawnProcess>(this.Functions.SpawnProcess); return call(this.ObjectAddress, lpVACBlob, cbBlobSize, Encoding.Default.GetString( Encoding.UTF8.GetBytes( lpApplicationName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( lpCommandLine ) ), dwCreationFlags, Encoding.Default.GetString( Encoding.UTF8.GetBytes( lpCurrentDirectory ) ), nAppID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchGameName ) ), bAlwaysUseShellExec); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppOwnershipTicketLength(IntPtr thisobj, UInt32 nAppID);
		public UInt32 GetAppOwnershipTicketLength(UInt32 nAppID) { var call = this.GetFunction<NativeGetAppOwnershipTicketLength>(this.Functions.GetAppOwnershipTicketLength); return call(this.ObjectAddress, nAppID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppOwnershipTicketData(IntPtr thisobj, UInt32 nAppID, byte[] pvBuffer, UInt32 cbBufferLength);
		public UInt32 GetAppOwnershipTicketData(UInt32 nAppID, byte[] pvBuffer, UInt32 cbBufferLength) { var call = this.GetFunction<NativeGetAppOwnershipTicketData>(this.Functions.GetAppOwnershipTicketData); return call(this.ObjectAddress, nAppID, pvBuffer, cbBufferLength); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppOwnershipTicketExtendedData(IntPtr thisobj, UInt32 nAppID, byte[] pvBuffer, UInt32 cbBufferLength, ref Int32 arg4, ref Int32 arg5, ref UInt32 ticket_length, ref UInt32 signature_length);
		public UInt32 GetAppOwnershipTicketExtendedData(UInt32 nAppID, byte[] pvBuffer, UInt32 cbBufferLength, ref Int32 arg4, ref Int32 arg5, ref UInt32 ticket_length, ref UInt32 signature_length) { var call = this.GetFunction<NativeGetAppOwnershipTicketExtendedData>(this.Functions.GetAppOwnershipTicketExtendedData); return call(this.ObjectAddress, nAppID, pvBuffer, cbBufferLength, ref arg4, ref arg5, ref ticket_length, ref signature_length); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAppDecryptionKey(IntPtr thisobj, UInt32 nAppID, byte[] pvBuffer, UInt32 cbBufferLength);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetAppDecryptionKey(UInt32 nAppID, byte[] pvBuffer, UInt32 cbBufferLength) { var call = this.GetFunction<NativeGetAppDecryptionKey>(this.Functions.GetAppDecryptionKey); return call(this.ObjectAddress, nAppID, pvBuffer, cbBufferLength); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetMarketingMessageCount(IntPtr thisobj);
		public Int32 GetMarketingMessageCount() { var call = this.GetFunction<NativeGetMarketingMessageCount>(this.Functions.GetMarketingMessageCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetMarketingMessage(IntPtr thisobj, Int32 cMarketingMessage, ref UInt64 gidMarketingMessageID, string pubMsgUrl, Int32 cubMessageUrl, ref EMarketingMessageFlags eMarketingMssageFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetMarketingMessage(Int32 cMarketingMessage, ref UInt64 gidMarketingMessageID, string pubMsgUrl, Int32 cubMessageUrl, ref EMarketingMessageFlags eMarketingMssageFlags) { var call = this.GetFunction<NativeGetMarketingMessage>(this.Functions.GetMarketingMessage); return call(this.ObjectAddress, cMarketingMessage, ref gidMarketingMessageID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pubMsgUrl ) ), cubMessageUrl, ref eMarketingMssageFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAuthSessionTicket(IntPtr thisobj, byte[] pMyAuthTicket, Int32 cbMaxMyAuthTicket, ref UInt32 pcbAuthTicket);
		public UInt32 GetAuthSessionTicket(byte[] pMyAuthTicket, Int32 cbMaxMyAuthTicket, ref UInt32 pcbAuthTicket) { var call = this.GetFunction<NativeGetAuthSessionTicket>(this.Functions.GetAuthSessionTicket); return call(this.ObjectAddress, pMyAuthTicket, cbMaxMyAuthTicket, ref pcbAuthTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EBeginAuthSessionResult NativeBeginAuthSession(IntPtr thisobj, byte[] pTheirAuthTicket, Int32 cbTicket, UInt64 steamID);
		public EBeginAuthSessionResult BeginAuthSession(byte[] pTheirAuthTicket, Int32 cbTicket, UInt64 steamID) { var call = this.GetFunction<NativeBeginAuthSession>(this.Functions.BeginAuthSession); return call(this.ObjectAddress, pTheirAuthTicket, cbTicket, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeEndAuthSession(IntPtr thisobj, UInt64 steamID);
		public void EndAuthSession(UInt64 steamID) { var call = this.GetFunction<NativeEndAuthSession>(this.Functions.EndAuthSession); call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCancelAuthTicket(IntPtr thisobj, UInt32 hAuthTicket);
		public void CancelAuthTicket(UInt32 hAuthTicket) { var call = this.GetFunction<NativeCancelAuthTicket>(this.Functions.CancelAuthTicket); call(this.ObjectAddress, hAuthTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsUserSubscribedAppInTicket(IntPtr thisobj, UInt64 steamID, UInt32 appID);
		public Int32 IsUserSubscribedAppInTicket(UInt64 steamID, UInt32 appID) { var call = this.GetFunction<NativeIsUserSubscribedAppInTicket>(this.Functions.IsUserSubscribedAppInTicket); return call(this.ObjectAddress, steamID, appID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAdvertiseGame(IntPtr thisobj, UInt64 gameID, UInt64 steamIDGameServer, UInt32 arg3, UInt16 usPortServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool AdvertiseGame(UInt64 gameID, UInt64 steamIDGameServer, UInt32 arg3, UInt16 usPortServer) { var call = this.GetFunction<NativeAdvertiseGame>(this.Functions.AdvertiseGame); return call(this.ObjectAddress, gameID, steamIDGameServer, arg3, usPortServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestEncryptedAppTicket(IntPtr thisobj, byte[] pUserData, Int32 cbUserData);
		public UInt64 RequestEncryptedAppTicket(byte[] pUserData, Int32 cbUserData) { var call = this.GetFunction<NativeRequestEncryptedAppTicket>(this.Functions.RequestEncryptedAppTicket); return call(this.ObjectAddress, pUserData, cbUserData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetEncryptedAppTicket(IntPtr thisobj, byte[] pTicket, Int32 cbMaxTicket, ref UInt32 pcbTicket);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetEncryptedAppTicket(byte[] pTicket, Int32 cbMaxTicket, ref UInt32 pcbTicket) { var call = this.GetFunction<NativeGetEncryptedAppTicket>(this.Functions.GetEncryptedAppTicket); return call(this.ObjectAddress, pTicket, cbMaxTicket, ref pcbTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetAccountLimited(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bAccountLimited);
		public void SetAccountLimited([MarshalAs(UnmanagedType.I1)] bool bAccountLimited) { var call = this.GetFunction<NativeSetAccountLimited>(this.Functions.SetAccountLimited); call(this.ObjectAddress, bAccountLimited); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsAccountLimited(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsAccountLimited() { var call = this.GetFunction<NativeIsAccountLimited>(this.Functions.IsAccountLimited); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSendValidationEmail(IntPtr thisobj);
		public void SendValidationEmail() { var call = this.GetFunction<NativeSendValidationEmail>(this.Functions.SendValidationEmail); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGameConnectTokensAvailable(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool GameConnectTokensAvailable() { var call = this.GetFunction<NativeGameConnectTokensAvailable>(this.Functions.GameConnectTokensAvailable); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeNumGamesRunning(IntPtr thisobj);
		public Int32 NumGamesRunning() { var call = this.GetFunction<NativeNumGamesRunning>(this.Functions.NumGamesRunning); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetRunningGameID(IntPtr thisobj, Int32 iGame);
		public UInt64 GetRunningGameID(Int32 iGame) { var call = this.GetFunction<NativeGetRunningGameID>(this.Functions.GetRunningGameID); return call(this.ObjectAddress, iGame); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAccountSecurityPolicyFlags(IntPtr thisobj);
		public UInt32 GetAccountSecurityPolicyFlags() { var call = this.GetFunction<NativeGetAccountSecurityPolicyFlags>(this.Functions.GetAccountSecurityPolicyFlags); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRequestChangeEmail(IntPtr thisobj, string pchPassword, Int32 eRequestType);
		public void RequestChangeEmail(string pchPassword, Int32 eRequestType) { var call = this.GetFunction<NativeRequestChangeEmail>(this.Functions.RequestChangeEmail); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPassword ) ), eRequestType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeChangePasswordWithCode(IntPtr thisobj, string pchOldPassword, string pchCode, string pchNewPassword);
		public void ChangePasswordWithCode(string pchOldPassword, string pchCode, string pchNewPassword) { var call = this.GetFunction<NativeChangePasswordWithCode>(this.Functions.ChangePasswordWithCode); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchOldPassword ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCode ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchNewPassword ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeChangeEmailWithCode(IntPtr thisobj, string pchPassword, string pchCode, string pchEmail);
		public void ChangeEmailWithCode(string pchPassword, string pchCode, string pchEmail) { var call = this.GetFunction<NativeChangeEmailWithCode>(this.Functions.ChangeEmailWithCode); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPassword ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCode ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchEmail ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeChangeSecretQuestionAndAnswerWithCode(IntPtr thisobj, string pchPassword, string pchCode, string pchNewQuestion, string pchNewAnswer);
		public void ChangeSecretQuestionAndAnswerWithCode(string pchPassword, string pchCode, string pchNewQuestion, string pchNewAnswer) { var call = this.GetFunction<NativeChangeSecretQuestionAndAnswerWithCode>(this.Functions.ChangeSecretQuestionAndAnswerWithCode); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPassword ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCode ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchNewQuestion ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchNewAnswer ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetClientStat(IntPtr thisobj, EClientStat eStat, Int64 llValue, UInt32 nAppID, UInt32 nDepotID, UInt32 nCellID);
		public void SetClientStat(EClientStat eStat, Int64 llValue, UInt32 nAppID, UInt32 nDepotID, UInt32 nCellID) { var call = this.GetFunction<NativeSetClientStat>(this.Functions.SetClientStat); call(this.ObjectAddress, eStat, llValue, nAppID, nDepotID, nCellID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeVerifyPassword(IntPtr thisobj, string pchPassword);
		public void VerifyPassword(string pchPassword) { var call = this.GetFunction<NativeVerifyPassword>(this.Functions.VerifyPassword); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPassword ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSupportUser(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool SupportUser() { var call = this.GetFunction<NativeSupportUser>(this.Functions.SupportUser); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsAppOverlayEnabled(IntPtr thisobj, UInt32 arg1);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsAppOverlayEnabled(UInt32 arg1) { var call = this.GetFunction<NativeIsAppOverlayEnabled>(this.Functions.IsAppOverlayEnabled); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsBehindNAT(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsBehindNAT() { var call = this.GetFunction<NativeIsBehindNAT>(this.Functions.IsBehindNAT); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetMicroTxnAppID(IntPtr thisobj, UInt64 uint64);
		public UInt32 GetMicroTxnAppID(UInt64 uint64) { var call = this.GetFunction<NativeGetMicroTxnAppID>(this.Functions.GetMicroTxnAppID); return call(this.ObjectAddress, uint64); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetMicroTxnOrderID(IntPtr thisobj, UInt64 uint64);
		public Int32 GetMicroTxnOrderID(UInt64 uint64) { var call = this.GetFunction<NativeGetMicroTxnOrderID>(this.Functions.GetMicroTxnOrderID); return call(this.ObjectAddress, uint64); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeBGetMicroTxnPrice(IntPtr thisobj, UInt64 uint64, ref Int32 arg2, ref Int32 arg3, [MarshalAs(UnmanagedType.I1)] ref bool arg4);
		[return: MarshalAs(UnmanagedType.I1)] public bool BGetMicroTxnPrice(UInt64 uint64, ref Int32 arg2, ref Int32 arg3, [MarshalAs(UnmanagedType.I1)] ref bool arg4) { var call = this.GetFunction<NativeBGetMicroTxnPrice>(this.Functions.BGetMicroTxnPrice); return call(this.ObjectAddress, uint64, ref arg2, ref arg3, ref arg4); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetMicroTxnLineItemCount(IntPtr thisobj, UInt64 uint64);
		public Int32 GetMicroTxnLineItemCount(UInt64 uint64) { var call = this.GetFunction<NativeGetMicroTxnLineItemCount>(this.Functions.GetMicroTxnLineItemCount); return call(this.ObjectAddress, uint64); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeBGetMicroTxnLineItem(IntPtr thisobj, UInt64 uint64, UInt32 arg2, ref Int32 arg3, ref UInt32 arg4, string arg5, UInt32 arg6);
		[return: MarshalAs(UnmanagedType.I1)] public bool BGetMicroTxnLineItem(UInt64 uint64, UInt32 arg2, ref Int32 arg3, ref UInt32 arg4, string arg5, UInt32 arg6) { var call = this.GetFunction<NativeBGetMicroTxnLineItem>(this.Functions.BGetMicroTxnLineItem); return call(this.ObjectAddress, uint64, arg2, ref arg3, ref arg4, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg5 ) ), arg6); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeBIsSandboxMicroTxn(IntPtr thisobj, UInt64 uint64, UInt32 arg2);
		[return: MarshalAs(UnmanagedType.I1)] public bool BIsSandboxMicroTxn(UInt64 uint64, UInt32 arg2) { var call = this.GetFunction<NativeBIsSandboxMicroTxn>(this.Functions.BIsSandboxMicroTxn); return call(this.ObjectAddress, uint64, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAuthorizeMicroTxn(IntPtr thisobj, UInt64 uint64, Int32 arg2);
		public Int32 AuthorizeMicroTxn(UInt64 uint64, Int32 arg2) { var call = this.GetFunction<NativeAuthorizeMicroTxn>(this.Functions.AuthorizeMicroTxn); return call(this.ObjectAddress, uint64, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeNotifyAppMicroTxnAuthResponse(IntPtr thisobj, UInt32 arg1, UInt64 uint64, [MarshalAs(UnmanagedType.I1)] bool arg3);
		public Int32 NotifyAppMicroTxnAuthResponse(UInt32 arg1, UInt64 uint64, [MarshalAs(UnmanagedType.I1)] bool arg3) { var call = this.GetFunction<NativeNotifyAppMicroTxnAuthResponse>(this.Functions.NotifyAppMicroTxnAuthResponse); return call(this.ObjectAddress, arg1, uint64, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeBGetWalletBalance(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] ref bool arg1, ref Int32 arg2);
		[return: MarshalAs(UnmanagedType.I1)] public bool BGetWalletBalance([MarshalAs(UnmanagedType.I1)] ref bool arg1, ref Int32 arg2) { var call = this.GetFunction<NativeBGetWalletBalance>(this.Functions.BGetWalletBalance); return call(this.ObjectAddress, ref arg1, ref arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRequestMicroTxnInfo(IntPtr thisobj, UInt64 uint64);
		public Int32 RequestMicroTxnInfo(UInt64 uint64) { var call = this.GetFunction<NativeRequestMicroTxnInfo>(this.Functions.RequestMicroTxnInfo); return call(this.ObjectAddress, uint64); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeBGetAppMinutesPlayed(IntPtr thisobj, UInt32 arg1, ref Int32 arg2, ref Int32 arg3);
		[return: MarshalAs(UnmanagedType.I1)] public bool BGetAppMinutesPlayed(UInt32 arg1, ref Int32 arg2, ref Int32 arg3) { var call = this.GetFunction<NativeBGetAppMinutesPlayed>(this.Functions.BGetAppMinutesPlayed); return call(this.ObjectAddress, arg1, ref arg2, ref arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeBGetGuideURL(IntPtr thisobj, UInt32 arg1, string arg2, UInt32 arg3);
		[return: MarshalAs(UnmanagedType.I1)] public bool BGetGuideURL(UInt32 arg1, string arg2, UInt32 arg3) { var call = this.GetFunction<NativeBGetGuideURL>(this.Functions.BGetGuideURL); return call(this.ObjectAddress, arg1, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg2 ) ), arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetClientAppListResponse_AddApp(IntPtr thisobj);
		public Int32 GetClientAppListResponse_AddApp() { var call = this.GetFunction<NativeGetClientAppListResponse_AddApp>(this.Functions.GetClientAppListResponse_AddApp); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetClientAppListResponse_AddDLC(IntPtr thisobj);
		public Int32 GetClientAppListResponse_AddDLC() { var call = this.GetFunction<NativeGetClientAppListResponse_AddDLC>(this.Functions.GetClientAppListResponse_AddDLC); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetClientAppListResponse_Done(IntPtr thisobj);
		public Int32 GetClientAppListResponse_Done() { var call = this.GetFunction<NativeGetClientAppListResponse_Done>(this.Functions.GetClientAppListResponse_Done); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePostUIResultToClientJob(IntPtr thisobj);
		public Int32 PostUIResultToClientJob() { var call = this.GetFunction<NativePostUIResultToClientJob>(this.Functions.PostUIResultToClientJob); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativePromptToVerifyEmail(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool PromptToVerifyEmail() { var call = this.GetFunction<NativePromptToVerifyEmail>(this.Functions.PromptToVerifyEmail); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativePromptToChangePassword(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool PromptToChangePassword() { var call = this.GetFunction<NativePromptToChangePassword>(this.Functions.PromptToChangePassword); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAccountLocked(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool AccountLocked() { var call = this.GetFunction<NativeAccountLocked>(this.Functions.AccountLocked); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAccountShouldShowLockUI(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool AccountShouldShowLockUI() { var call = this.GetFunction<NativeAccountShouldShowLockUI>(this.Functions.AccountShouldShowLockUI); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAccountLockedByIPT(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool AccountLockedByIPT() { var call = this.GetFunction<NativeAccountLockedByIPT>(this.Functions.AccountLockedByIPT); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCountAuthedComputers(IntPtr thisobj);
		public Int32 GetCountAuthedComputers() { var call = this.GetFunction<NativeGetCountAuthedComputers>(this.Functions.GetCountAuthedComputers); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAccountCanUseIPT(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool AccountCanUseIPT() { var call = this.GetFunction<NativeAccountCanUseIPT>(this.Functions.AccountCanUseIPT); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeChangeTwoFactorAuthOptions(IntPtr thisobj, Int32 unk1);
		public Int32 ChangeTwoFactorAuthOptions(Int32 unk1) { var call = this.GetFunction<NativeChangeTwoFactorAuthOptions>(this.Functions.ChangeTwoFactorAuthOptions); return call(this.ObjectAddress, unk1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSet2ndFactorAuthCode(IntPtr thisobj, Int32 unk1);
		public Int32 Set2ndFactorAuthCode(Int32 unk1) { var call = this.GetFunction<NativeSet2ndFactorAuthCode>(this.Functions.Set2ndFactorAuthCode); return call(this.ObjectAddress, unk1); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientGameCoordinatorVTable
	{
		public IntPtr SendMessage;
		public IntPtr IsMessageAvailable;
		public IntPtr RetrieveMessage;
	}
	
	public class IClientGameCoordinator : NativeWrapper<IClientGameCoordinatorVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EGCResults NativeSendMessage(IntPtr thisobj, UInt32 unAppID, UInt32 unMsgType, byte[] pubData, UInt32 cubData);
		public EGCResults SendMessage(UInt32 unAppID, UInt32 unMsgType, byte[] pubData, UInt32 cubData) { var call = this.GetFunction<NativeSendMessage>(this.Functions.SendMessage); return call(this.ObjectAddress, unAppID, unMsgType, pubData, cubData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsMessageAvailable(IntPtr thisobj, UInt32 unAppID, ref UInt32 pcubMsgSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsMessageAvailable(UInt32 unAppID, ref UInt32 pcubMsgSize) { var call = this.GetFunction<NativeIsMessageAvailable>(this.Functions.IsMessageAvailable); return call(this.ObjectAddress, unAppID, ref pcubMsgSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EGCResults NativeRetrieveMessage(IntPtr thisobj, UInt32 unAppID, ref UInt32 punMsgType, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize);
		public EGCResults RetrieveMessage(UInt32 unAppID, ref UInt32 punMsgType, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize) { var call = this.GetFunction<NativeRetrieveMessage>(this.Functions.RetrieveMessage); return call(this.ObjectAddress, unAppID, ref punMsgType, pubDest, cubDest, ref pcubMsgSize); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1,Size=2976)]
	public struct gameserveritem_t
	{
		public servernetadr_t m_NetAdr;
		public Int32 m_nPing;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bHadSuccessfulResponse;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bDoNotRefresh;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 32)]
		public SByte[] m_szGameDir;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 32)]
		public SByte[] m_szMap;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 64)]
		public SByte[] m_szGameDescription;
		public UInt32 m_nAppID;
		public Int32 m_nPlayers;
		public Int32 m_nMaxPlayers;
		public Int32 m_nBotPlayers;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bPassword;
		[MarshalAs(UnmanagedType.I1)]
		public bool m_bSecure;
		public UInt32 m_ulTimeLastPlayed;
		public Int32 m_nServerVersion;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 64)]
		public SByte[] m_szServerName;
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 128)]
		public SByte[] m_szGameTags;
		public UInt64 m_steamID;
	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamMatchmakingServerListResponse002VTable
	{
		public IntPtr ServerResponded;
		public IntPtr ServerFailedToRespond;
		public IntPtr RefreshComplete;
	}
	
	public class ISteamMatchmakingServerListResponse002 : NativeWrapper<ISteamMatchmakingServerListResponse002VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeServerResponded(IntPtr thisobj, byte[] hRequest, Int32 iServer);
		public void ServerResponded(byte[] hRequest, Int32 iServer) { var call = this.GetFunction<NativeServerResponded>(this.Functions.ServerResponded); call(this.ObjectAddress, hRequest, iServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeServerFailedToRespond(IntPtr thisobj, byte[] hRequest, Int32 iServer);
		public void ServerFailedToRespond(byte[] hRequest, Int32 iServer) { var call = this.GetFunction<NativeServerFailedToRespond>(this.Functions.ServerFailedToRespond); call(this.ObjectAddress, hRequest, iServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRefreshComplete(IntPtr thisobj, byte[] hRequest, EMatchMakingServerResponse response);
		public void RefreshComplete(byte[] hRequest, EMatchMakingServerResponse response) { var call = this.GetFunction<NativeRefreshComplete>(this.Functions.RefreshComplete); call(this.ObjectAddress, hRequest, response); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteam004VTable
	{
        public IntPtr DTor;
		public IntPtr ChangePassword;
		public IntPtr GetCurrentEmailAddress;
		public IntPtr ChangePersonalQA;
		public IntPtr ChangeEmailAddress;
		public IntPtr VerifyEmailAddress;
		public IntPtr RequestEmailAddressVerificationEmail;
		public IntPtr ChangeAccountName;
		public IntPtr MountAppFilesystem;
		public IntPtr UnmountAppFilesystem;
		public IntPtr MountFilesystem;
		public IntPtr UnmountFilesystem;
		public IntPtr Stat;
		public IntPtr SetvBuf;
		public IntPtr FlushFile;
		public IntPtr OpenFile;
		public IntPtr OpenFileEx;
		public IntPtr OpenTmpFile;
		public IntPtr ClearError;
		public IntPtr GetVersion;
		public IntPtr GetOfflineStatus;
		public IntPtr ChangeOfflineStatus;
		public IntPtr ProcessCall;
		public IntPtr AbortCall;
		public IntPtr BlockingCall;
		public IntPtr SetMaxStallCount;
		public IntPtr CloseFile;
		public IntPtr ReadFile;
		public IntPtr WriteFile;
		public IntPtr Getc;
		public IntPtr Putc;
		public IntPtr SeekFile;
		public IntPtr TellFile;
		public IntPtr SizeFile;
		public IntPtr FindFirst;
		public IntPtr FindNext;
		public IntPtr FindClose;
		public IntPtr GetLocalFileCopy;
		public IntPtr IsFileImmediatelyAvailable;
		public IntPtr HintResourceNeed;
		public IntPtr ForgetAllHints;
		public IntPtr PauseCachePreloading;
		public IntPtr ResumeCachePreloading;
		public IntPtr WaitForResources;
		public IntPtr StartEngine;
		public IntPtr ShutdownEngine;
		public IntPtr Startup;
		public IntPtr Cleanup;
		public IntPtr NumAppsRunning;
		public IntPtr CreateAccount;
		public IntPtr GenerateSuggestedAccountNames;
		public IntPtr IsLoggedIn;
		public IntPtr Logout;
		public IntPtr IsSecureComputer;
		public IntPtr CreateLogContext;
		public IntPtr Log;
		public IntPtr LogResourceLoadStarted;
		public IntPtr LogResourceLoadFinished;
		public IntPtr RefreshLogin;
		public IntPtr VerifyPassword;
		public IntPtr GetUserType;
		public IntPtr GetAppStats;
		public IntPtr IsAccountNameInUse;
		public IntPtr GetAppIds;
		public IntPtr GetSubscriptionStats;
		public IntPtr RefreshAccountInfo;
		public IntPtr Subscribe;
		public IntPtr Unsubscribe;
		public IntPtr GetSubscriptionReceipt;
		public IntPtr GetAccountStatus;
		public IntPtr SetUser;
		public IntPtr GetUser;
		public IntPtr Login;
		public IntPtr AckSubscriptionReceipt;
		public IntPtr IsAppSubscribed;
		public IntPtr GetSubscriptionIds;
		public IntPtr EnumerateSubscription;
		public IntPtr EnumerateSubscriptionDiscount;
		public IntPtr EnumerateSubscriptionDiscountQualifier;
		public IntPtr EnumerateApp;
		public IntPtr EnumerateAppLaunchOption;
		public IntPtr DeleteAccount;
		public IntPtr EnumerateAppIcon;
		public IntPtr LaunchApp;
		public IntPtr GetCacheFilePath;
		public IntPtr EnumerateAppVersion;
		public IntPtr EnumerateAppDependency;
		public IntPtr StartLoadingCache;
		public IntPtr InsertAppDependency;
		public IntPtr RemoveAppDependency;
		public IntPtr FindApp;
		public IntPtr GetAppDependencies;
		public IntPtr IsSubscribed;
		public IntPtr GetAppUserDefinedInfo;
		public IntPtr WaitForAppReadyToLaunch;
		public IntPtr IsCacheLoadingEnabled;
		public IntPtr StopLoadingCache;
		public IntPtr GetEncryptedUserIDTicket;
		public IntPtr FlushCache;
		public IntPtr RepairOrDecryptCaches;
		public IntPtr LoadCacheFromDir;
		public IntPtr GetCacheDefaultDirectory;
		public IntPtr SetCacheDefaultDirectory;
		public IntPtr GetAppDir;
		public IntPtr MoveApp;
		public IntPtr GetAppCacheSize;
		public IntPtr SetAppCacheSize;
		public IntPtr SetAppVersion;
		public IntPtr Uninstall;
		public IntPtr SetNotificationCallback;
		public IntPtr ChangeForgottenPassword;
		public IntPtr RequestForgottenPasswordEmail;
		public IntPtr RequestAccountsByEmailAddressEmail;
		public IntPtr RequestAccountsByCdKeyEmail;
		public IntPtr GetNumAccountsWithEmailAddress;
		public IntPtr UpdateAccountBillingInfo;
		public IntPtr UpdateSubscriptionBillingInfo;
		public IntPtr GetSponsorUrl;
		public IntPtr GetContentServerInfo;
		public IntPtr GetAppUpdateStats;
		public IntPtr GetTotalUpdateStats;
		public IntPtr CreateCachePreloaders;
		public IntPtr Win32SetMiniDumpComment;
		public IntPtr Win32SetMiniDumpSourceControlId;
		public IntPtr Win32SetMiniDumpEnableFullMemory;
		public IntPtr Win32WriteMiniDump;
		public IntPtr GetCurrentAppId;
		public IntPtr GetAppPurchaseCountry;
	}
	
	public class ISteam004 : NativeWrapper<ISteam004VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangePassword(IntPtr thisobj, string cszCurrentPassphrase, string cszNewPassphrase, ref TSteamError pError);
		public UInt32 ChangePassword(string cszCurrentPassphrase, string cszNewPassphrase, ref TSteamError pError) { var call = this.GetFunction<NativeChangePassword>(this.Functions.ChangePassword); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszCurrentPassphrase ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszNewPassphrase ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCurrentEmailAddress(IntPtr thisobj, string szEmailaddress, UInt32 uBufSize, ref UInt32 puEmailaddressChars, ref TSteamError pError);
		public Int32 GetCurrentEmailAddress(string szEmailaddress, UInt32 uBufSize, ref UInt32 puEmailaddressChars, ref TSteamError pError) { var call = this.GetFunction<NativeGetCurrentEmailAddress>(this.Functions.GetCurrentEmailAddress); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szEmailaddress ) ), uBufSize, ref puEmailaddressChars, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangePersonalQA(IntPtr thisobj, string cszCurrentPassphrase, string cszNewPersonalQuestion, string cszNewAnswerToQuestion, ref TSteamError pError);
		public UInt32 ChangePersonalQA(string cszCurrentPassphrase, string cszNewPersonalQuestion, string cszNewAnswerToQuestion, ref TSteamError pError) { var call = this.GetFunction<NativeChangePersonalQA>(this.Functions.ChangePersonalQA); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszCurrentPassphrase ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszNewPersonalQuestion ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszNewAnswerToQuestion ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangeEmailAddress(IntPtr thisobj, string cszNewEmailAddress, ref TSteamError pError);
		public UInt32 ChangeEmailAddress(string cszNewEmailAddress, ref TSteamError pError) { var call = this.GetFunction<NativeChangeEmailAddress>(this.Functions.ChangeEmailAddress); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszNewEmailAddress ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeVerifyEmailAddress(IntPtr thisobj, string cszEmailAddress, ref TSteamError pError);
		public UInt32 VerifyEmailAddress(string cszEmailAddress, ref TSteamError pError) { var call = this.GetFunction<NativeVerifyEmailAddress>(this.Functions.VerifyEmailAddress); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszEmailAddress ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestEmailAddressVerificationEmail(IntPtr thisobj, ref TSteamError pError);
		public UInt32 RequestEmailAddressVerificationEmail(ref TSteamError pError) { var call = this.GetFunction<NativeRequestEmailAddressVerificationEmail>(this.Functions.RequestEmailAddressVerificationEmail); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangeAccountName(IntPtr thisobj, string cszCurrentAccountName, string cszNewAccountName, ref TSteamError pError);
		public UInt32 ChangeAccountName(string cszCurrentAccountName, string cszNewAccountName, ref TSteamError pError) { var call = this.GetFunction<NativeChangeAccountName>(this.Functions.ChangeAccountName); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszCurrentAccountName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszNewAccountName ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeMountAppFilesystem(IntPtr thisobj, ref TSteamError pError);
		public Int32 MountAppFilesystem(ref TSteamError pError) { var call = this.GetFunction<NativeMountAppFilesystem>(this.Functions.MountAppFilesystem); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeUnmountAppFilesystem(IntPtr thisobj, ref TSteamError pError);
		public Int32 UnmountAppFilesystem(ref TSteamError pError) { var call = this.GetFunction<NativeUnmountAppFilesystem>(this.Functions.UnmountAppFilesystem); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeMountFilesystem(IntPtr thisobj, UInt32 uAppId, string szMountPath, ref TSteamError pError);
		public Int32 MountFilesystem(UInt32 uAppId, string szMountPath, ref TSteamError pError) { var call = this.GetFunction<NativeMountFilesystem>(this.Functions.MountFilesystem); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szMountPath ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeUnmountFilesystem(IntPtr thisobj, UInt32 uAppId, ref TSteamError pError);
		public Int32 UnmountFilesystem(UInt32 uAppId, ref TSteamError pError) { var call = this.GetFunction<NativeUnmountFilesystem>(this.Functions.UnmountFilesystem); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeStat(IntPtr thisobj, string cszName, ref TSteamElemInfo pInfo, ref TSteamError pError);
		public Int32 Stat(string cszName, ref TSteamElemInfo pInfo, ref TSteamError pError) { var call = this.GetFunction<NativeStat>(this.Functions.Stat); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszName ) ), ref pInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetvBuf(IntPtr thisobj, UInt32 hFile, byte[] pBuf, ESteamBufferMethod eMethod, UInt32 uBytes, ref TSteamError pError);
		public Int32 SetvBuf(UInt32 hFile, byte[] pBuf, ESteamBufferMethod eMethod, UInt32 uBytes, ref TSteamError pError) { var call = this.GetFunction<NativeSetvBuf>(this.Functions.SetvBuf); return call(this.ObjectAddress, hFile, pBuf, eMethod, uBytes, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFlushFile(IntPtr thisobj, UInt32 hFile, ref TSteamError pError);
		public Int32 FlushFile(UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativeFlushFile>(this.Functions.FlushFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeOpenFile(IntPtr thisobj, string cszName, string cszMode, ref TSteamError pError);
		public UInt32 OpenFile(string cszName, string cszMode, ref TSteamError pError) { var call = this.GetFunction<NativeOpenFile>(this.Functions.OpenFile); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszMode ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeOpenFileEx(IntPtr thisobj, string cszFileName, string cszMode, ref UInt32 puSize, ref TSteamError pError);
		public UInt32 OpenFileEx(string cszFileName, string cszMode, ref UInt32 puSize, ref TSteamError pError) { var call = this.GetFunction<NativeOpenFileEx>(this.Functions.OpenFileEx); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszFileName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszMode ) ), ref puSize, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeOpenTmpFile(IntPtr thisobj, ref TSteamError pError);
		public UInt32 OpenTmpFile(ref TSteamError pError) { var call = this.GetFunction<NativeOpenTmpFile>(this.Functions.OpenTmpFile); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeClearError(IntPtr thisobj, ref TSteamError pError);
		public void ClearError(ref TSteamError pError) { var call = this.GetFunction<NativeClearError>(this.Functions.ClearError); call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetVersion(IntPtr thisobj, string szVersion, UInt32 uVersionBufSize);
		public Int32 GetVersion(string szVersion, UInt32 uVersionBufSize) { var call = this.GetFunction<NativeGetVersion>(this.Functions.GetVersion); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szVersion ) ), uVersionBufSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetOfflineStatus(IntPtr thisobj, ref TSteamOfflineStatus pSteamOfflineStatus, ref TSteamError pError);
		public Int32 GetOfflineStatus(ref TSteamOfflineStatus pSteamOfflineStatus, ref TSteamError pError) { var call = this.GetFunction<NativeGetOfflineStatus>(this.Functions.GetOfflineStatus); return call(this.ObjectAddress, ref pSteamOfflineStatus, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeChangeOfflineStatus(IntPtr thisobj, ref TSteamOfflineStatus pSteamOfflineStatus, ref TSteamError pError);
		public Int32 ChangeOfflineStatus(ref TSteamOfflineStatus pSteamOfflineStatus, ref TSteamError pError) { var call = this.GetFunction<NativeChangeOfflineStatus>(this.Functions.ChangeOfflineStatus); return call(this.ObjectAddress, ref pSteamOfflineStatus, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeProcessCall(IntPtr thisobj, UInt32 handle, ref TSteamProgress pProgress, ref TSteamError pError);
		public Int32 ProcessCall(UInt32 handle, ref TSteamProgress pProgress, ref TSteamError pError) { var call = this.GetFunction<NativeProcessCall>(this.Functions.ProcessCall); return call(this.ObjectAddress, handle, ref pProgress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAbortCall(IntPtr thisobj, UInt32 handle, ref TSteamError pError);
		public Int32 AbortCall(UInt32 handle, ref TSteamError pError) { var call = this.GetFunction<NativeAbortCall>(this.Functions.AbortCall); return call(this.ObjectAddress, handle, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeBlockingCall(IntPtr thisobj, UInt32 handle, UInt32 uiProcessTickMS, ref TSteamError pError);
		public Int32 BlockingCall(UInt32 handle, UInt32 uiProcessTickMS, ref TSteamError pError) { var call = this.GetFunction<NativeBlockingCall>(this.Functions.BlockingCall); return call(this.ObjectAddress, handle, uiProcessTickMS, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetMaxStallCount(IntPtr thisobj, UInt32 uNumStalls, ref TSteamError pError);
		public Int32 SetMaxStallCount(UInt32 uNumStalls, ref TSteamError pError) { var call = this.GetFunction<NativeSetMaxStallCount>(this.Functions.SetMaxStallCount); return call(this.ObjectAddress, uNumStalls, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCloseFile(IntPtr thisobj, UInt32 hFile, ref TSteamError pError);
		public Int32 CloseFile(UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativeCloseFile>(this.Functions.CloseFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeReadFile(IntPtr thisobj, byte[] pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSteamError pError);
		public UInt32 ReadFile(byte[] pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativeReadFile>(this.Functions.ReadFile); return call(this.ObjectAddress, pBuf, uSize, uCount, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeWriteFile(IntPtr thisobj, byte[] pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSteamError pError);
		public UInt32 WriteFile(byte[] pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativeWriteFile>(this.Functions.WriteFile); return call(this.ObjectAddress, pBuf, uSize, uCount, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetc(IntPtr thisobj, UInt32 hFile, ref TSteamError pError);
		public Int32 Getc(UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativeGetc>(this.Functions.Getc); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePutc(IntPtr thisobj, Int32 cChar, UInt32 hFile, ref TSteamError pError);
		public Int32 Putc(Int32 cChar, UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativePutc>(this.Functions.Putc); return call(this.ObjectAddress, cChar, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSeekFile(IntPtr thisobj, UInt32 hFile, Int32 lOffset, ESteamSeekMethod sm, ref TSteamError pError);
		public Int32 SeekFile(UInt32 hFile, Int32 lOffset, ESteamSeekMethod sm, ref TSteamError pError) { var call = this.GetFunction<NativeSeekFile>(this.Functions.SeekFile); return call(this.ObjectAddress, hFile, lOffset, sm, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeTellFile(IntPtr thisobj, UInt32 hFile, ref TSteamError pError);
		public Int32 TellFile(UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativeTellFile>(this.Functions.TellFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSizeFile(IntPtr thisobj, UInt32 hFile, ref TSteamError pError);
		public Int32 SizeFile(UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativeSizeFile>(this.Functions.SizeFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeFindFirst(IntPtr thisobj, string cszPattern, ESteamFindFilter eFilter, ref TSteamElemInfo pFindInfo, ref TSteamError pError);
		public UInt32 FindFirst(string cszPattern, ESteamFindFilter eFilter, ref TSteamElemInfo pFindInfo, ref TSteamError pError) { var call = this.GetFunction<NativeFindFirst>(this.Functions.FindFirst); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPattern ) ), eFilter, ref pFindInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFindNext(IntPtr thisobj, UInt32 hFind, ref TSteamElemInfo pFindInfo, ref TSteamError pError);
		public Int32 FindNext(UInt32 hFind, ref TSteamElemInfo pFindInfo, ref TSteamError pError) { var call = this.GetFunction<NativeFindNext>(this.Functions.FindNext); return call(this.ObjectAddress, hFind, ref pFindInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFindClose(IntPtr thisobj, UInt32 hFind, ref TSteamError pError);
		public Int32 FindClose(UInt32 hFind, ref TSteamError pError) { var call = this.GetFunction<NativeFindClose>(this.Functions.FindClose); return call(this.ObjectAddress, hFind, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLocalFileCopy(IntPtr thisobj, string cszName, ref TSteamError pError);
		public Int32 GetLocalFileCopy(string cszName, ref TSteamError pError) { var call = this.GetFunction<NativeGetLocalFileCopy>(this.Functions.GetLocalFileCopy); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszName ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsFileImmediatelyAvailable(IntPtr thisobj, string cszName, ref TSteamError pError);
		public Int32 IsFileImmediatelyAvailable(string cszName, ref TSteamError pError) { var call = this.GetFunction<NativeIsFileImmediatelyAvailable>(this.Functions.IsFileImmediatelyAvailable); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszName ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeHintResourceNeed(IntPtr thisobj, string cszHintList, Int32 bForgetEverything, ref TSteamError pError);
		public Int32 HintResourceNeed(string cszHintList, Int32 bForgetEverything, ref TSteamError pError) { var call = this.GetFunction<NativeHintResourceNeed>(this.Functions.HintResourceNeed); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszHintList ) ), bForgetEverything, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeForgetAllHints(IntPtr thisobj, ref TSteamError pError);
		public Int32 ForgetAllHints(ref TSteamError pError) { var call = this.GetFunction<NativeForgetAllHints>(this.Functions.ForgetAllHints); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePauseCachePreloading(IntPtr thisobj, ref TSteamError pError);
		public Int32 PauseCachePreloading(ref TSteamError pError) { var call = this.GetFunction<NativePauseCachePreloading>(this.Functions.PauseCachePreloading); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeResumeCachePreloading(IntPtr thisobj, ref TSteamError pError);
		public Int32 ResumeCachePreloading(ref TSteamError pError) { var call = this.GetFunction<NativeResumeCachePreloading>(this.Functions.ResumeCachePreloading); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeWaitForResources(IntPtr thisobj, string cszMasterList, ref TSteamError pError);
		public UInt32 WaitForResources(string cszMasterList, ref TSteamError pError) { var call = this.GetFunction<NativeWaitForResources>(this.Functions.WaitForResources); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszMasterList ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeStartEngine(IntPtr thisobj, ref TSteamError pError);
		public Int32 StartEngine(ref TSteamError pError) { var call = this.GetFunction<NativeStartEngine>(this.Functions.StartEngine); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeShutdownEngine(IntPtr thisobj, ref TSteamError pError);
		public Int32 ShutdownEngine(ref TSteamError pError) { var call = this.GetFunction<NativeShutdownEngine>(this.Functions.ShutdownEngine); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeStartup(IntPtr thisobj, UInt32 uUsingMask, ref TSteamError pError);
		public Int32 Startup(UInt32 uUsingMask, ref TSteamError pError) { var call = this.GetFunction<NativeStartup>(this.Functions.Startup); return call(this.ObjectAddress, uUsingMask, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCleanup(IntPtr thisobj, ref TSteamError pError);
		public Int32 Cleanup(ref TSteamError pError) { var call = this.GetFunction<NativeCleanup>(this.Functions.Cleanup); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeNumAppsRunning(IntPtr thisobj, ref TSteamError pError);
		public Int32 NumAppsRunning(ref TSteamError pError) { var call = this.GetFunction<NativeNumAppsRunning>(this.Functions.NumAppsRunning); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateAccount(IntPtr thisobj, string cszUser, string cszPassphrase, string cszCreationKey, string cszPersonalQuestion, string cszAnswerToQuestion, string cszArg6, ref Int32 pbCreated, ref TSteamError pError);
		public UInt32 CreateAccount(string cszUser, string cszPassphrase, string cszCreationKey, string cszPersonalQuestion, string cszAnswerToQuestion, string cszArg6, ref Int32 pbCreated, ref TSteamError pError) { var call = this.GetFunction<NativeCreateAccount>(this.Functions.CreateAccount); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszUser ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPassphrase ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszCreationKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPersonalQuestion ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszAnswerToQuestion ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg6 ) ), ref pbCreated, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGenerateSuggestedAccountNames(IntPtr thisobj, string cszArg1, string cszArg2, string szArg3, UInt32 uArg4, ref UInt32 puArg5, ref TSteamError pError);
		public UInt32 GenerateSuggestedAccountNames(string cszArg1, string cszArg2, string szArg3, UInt32 uArg4, ref UInt32 puArg5, ref TSteamError pError) { var call = this.GetFunction<NativeGenerateSuggestedAccountNames>(this.Functions.GenerateSuggestedAccountNames); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg2 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( szArg3 ) ), uArg4, ref puArg5, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsLoggedIn(IntPtr thisobj, ref Int32 pbIsLoggedIn, ref TSteamError pError);
		public Int32 IsLoggedIn(ref Int32 pbIsLoggedIn, ref TSteamError pError) { var call = this.GetFunction<NativeIsLoggedIn>(this.Functions.IsLoggedIn); return call(this.ObjectAddress, ref pbIsLoggedIn, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLogout(IntPtr thisobj, ref TSteamError pError);
		public UInt32 Logout(ref TSteamError pError) { var call = this.GetFunction<NativeLogout>(this.Functions.Logout); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsSecureComputer(IntPtr thisobj, ref Int32 pbIsSecure, ref TSteamError pError);
		public Int32 IsSecureComputer(ref Int32 pbIsSecure, ref TSteamError pError) { var call = this.GetFunction<NativeIsSecureComputer>(this.Functions.IsSecureComputer); return call(this.ObjectAddress, ref pbIsSecure, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateLogContext(IntPtr thisobj, string cszName);
		public UInt32 CreateLogContext(string cszName) { var call = this.GetFunction<NativeCreateLogContext>(this.Functions.CreateLogContext); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeLog(IntPtr thisobj, UInt32 hContext, string cszMsg);
		public Int32 Log(UInt32 hContext, string cszMsg) { var call = this.GetFunction<NativeLog>(this.Functions.Log); return call(this.ObjectAddress, hContext, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszMsg ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogResourceLoadStarted(IntPtr thisobj, string cszMsg);
		public void LogResourceLoadStarted(string cszMsg) { var call = this.GetFunction<NativeLogResourceLoadStarted>(this.Functions.LogResourceLoadStarted); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszMsg ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogResourceLoadFinished(IntPtr thisobj, string cszMsg);
		public void LogResourceLoadFinished(string cszMsg) { var call = this.GetFunction<NativeLogResourceLoadFinished>(this.Functions.LogResourceLoadFinished); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszMsg ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRefreshLogin(IntPtr thisobj, string cszPassphrase, Int32 bIsSecureComputer, ref TSteamError pError);
		public UInt32 RefreshLogin(string cszPassphrase, Int32 bIsSecureComputer, ref TSteamError pError) { var call = this.GetFunction<NativeRefreshLogin>(this.Functions.RefreshLogin); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPassphrase ) ), bIsSecureComputer, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeVerifyPassword(IntPtr thisobj, string cszArg1, ref Int32 piArg2, ref TSteamError pError);
		public Int32 VerifyPassword(string cszArg1, ref Int32 piArg2, ref TSteamError pError) { var call = this.GetFunction<NativeVerifyPassword>(this.Functions.VerifyPassword); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), ref piArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetUserType(IntPtr thisobj, ref UInt32 puArg1, ref TSteamError pError);
		public Int32 GetUserType(ref UInt32 puArg1, ref TSteamError pError) { var call = this.GetFunction<NativeGetUserType>(this.Functions.GetUserType); return call(this.ObjectAddress, ref puArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppStats(IntPtr thisobj, ref TSteamAppStats pAppStats, ref TSteamError pError);
		public Int32 GetAppStats(ref TSteamAppStats pAppStats, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppStats>(this.Functions.GetAppStats); return call(this.ObjectAddress, ref pAppStats, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeIsAccountNameInUse(IntPtr thisobj, string cszArg1, ref Int32 piArg2, ref TSteamError pError);
		public UInt32 IsAccountNameInUse(string cszArg1, ref Int32 piArg2, ref TSteamError pError) { var call = this.GetFunction<NativeIsAccountNameInUse>(this.Functions.IsAccountNameInUse); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), ref piArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppIds(IntPtr thisobj, ref UInt32 puIds, UInt32 uMaxIds, ref TSteamError pError);
		public Int32 GetAppIds(ref UInt32 puIds, UInt32 uMaxIds, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppIds>(this.Functions.GetAppIds); return call(this.ObjectAddress, ref puIds, uMaxIds, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionStats(IntPtr thisobj, ref TSteamSubscriptionStats pSubscriptionStats, ref TSteamError pError);
		public Int32 GetSubscriptionStats(ref TSteamSubscriptionStats pSubscriptionStats, ref TSteamError pError) { var call = this.GetFunction<NativeGetSubscriptionStats>(this.Functions.GetSubscriptionStats); return call(this.ObjectAddress, ref pSubscriptionStats, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRefreshAccountInfo(IntPtr thisobj, ref TSteamError pError);
		public UInt32 RefreshAccountInfo(ref TSteamError pError) { var call = this.GetFunction<NativeRefreshAccountInfo>(this.Functions.RefreshAccountInfo); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSubscribe(IntPtr thisobj, UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSteamError pError);
		public UInt32 Subscribe(UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSteamError pError) { var call = this.GetFunction<NativeSubscribe>(this.Functions.Subscribe); return call(this.ObjectAddress, uSubscriptionId, ref pSubscriptionBillingInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUnsubscribe(IntPtr thisobj, UInt32 uSubscriptionId, ref TSteamError pError);
		public UInt32 Unsubscribe(UInt32 uSubscriptionId, ref TSteamError pError) { var call = this.GetFunction<NativeUnsubscribe>(this.Functions.Unsubscribe); return call(this.ObjectAddress, uSubscriptionId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionReceipt(IntPtr thisobj, UInt32 arg1, ref TSteamSubscriptionReceipt pSteamSubscriptionReceipt, ref TSteamError pError);
		public Int32 GetSubscriptionReceipt(UInt32 arg1, ref TSteamSubscriptionReceipt pSteamSubscriptionReceipt, ref TSteamError pError) { var call = this.GetFunction<NativeGetSubscriptionReceipt>(this.Functions.GetSubscriptionReceipt); return call(this.ObjectAddress, arg1, ref pSteamSubscriptionReceipt, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAccountStatus(IntPtr thisobj, ref UInt32 puArg1, ref TSteamError pError);
		public Int32 GetAccountStatus(ref UInt32 puArg1, ref TSteamError pError) { var call = this.GetFunction<NativeGetAccountStatus>(this.Functions.GetAccountStatus); return call(this.ObjectAddress, ref puArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSetUser(IntPtr thisobj, string cszUser, ref Int32 pbUserSet, ref TSteamError pError);
		public UInt32 SetUser(string cszUser, ref Int32 pbUserSet, ref TSteamError pError) { var call = this.GetFunction<NativeSetUser>(this.Functions.SetUser); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszUser ) ), ref pbUserSet, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetUser(IntPtr thisobj, string szUser, UInt32 uBufSize, ref UInt32 puUserChars, ref TSteamGlobalUserID pSteamGlobalUserID, ref TSteamError pError);
		public Int32 GetUser(string szUser, UInt32 uBufSize, ref UInt32 puUserChars, ref TSteamGlobalUserID pSteamGlobalUserID, ref TSteamError pError) { var call = this.GetFunction<NativeGetUser>(this.Functions.GetUser); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szUser ) ), uBufSize, ref puUserChars, ref pSteamGlobalUserID, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLogin(IntPtr thisobj, string cszUser, string cszPassphrase, Int32 bIsSecureComputer, ref TSteamError pError);
		public UInt32 Login(string cszUser, string cszPassphrase, Int32 bIsSecureComputer, ref TSteamError pError) { var call = this.GetFunction<NativeLogin>(this.Functions.Login); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszUser ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPassphrase ) ), bIsSecureComputer, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeAckSubscriptionReceipt(IntPtr thisobj, UInt32 uArg1, ref TSteamError pError);
		public UInt32 AckSubscriptionReceipt(UInt32 uArg1, ref TSteamError pError) { var call = this.GetFunction<NativeAckSubscriptionReceipt>(this.Functions.AckSubscriptionReceipt); return call(this.ObjectAddress, uArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsAppSubscribed(IntPtr thisobj, UInt32 uAppId, ref Int32 pbIsAppSubscribed, ref Int32 pReserved, ref TSteamError pError);
		public Int32 IsAppSubscribed(UInt32 uAppId, ref Int32 pbIsAppSubscribed, ref Int32 pReserved, ref TSteamError pError) { var call = this.GetFunction<NativeIsAppSubscribed>(this.Functions.IsAppSubscribed); return call(this.ObjectAddress, uAppId, ref pbIsAppSubscribed, ref pReserved, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionIds(IntPtr thisobj, ref UInt32 puIds, UInt32 uMaxIds, ref TSteamError pError);
		public Int32 GetSubscriptionIds(ref UInt32 puIds, UInt32 uMaxIds, ref TSteamError pError) { var call = this.GetFunction<NativeGetSubscriptionIds>(this.Functions.GetSubscriptionIds); return call(this.ObjectAddress, ref puIds, uMaxIds, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateSubscription(IntPtr thisobj, UInt32 uSubscriptionId, ref TSteamSubscription pSubscription, ref TSteamError pError);
		public Int32 EnumerateSubscription(UInt32 uSubscriptionId, ref TSteamSubscription pSubscription, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateSubscription>(this.Functions.EnumerateSubscription); return call(this.ObjectAddress, uSubscriptionId, ref pSubscription, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateSubscriptionDiscount(IntPtr thisobj, UInt32 uSubscriptionId, UInt32 uDiscountIdx, ref TSteamSubscriptionDiscount pSteamSubscriptionDiscount, ref TSteamError pError);
		public Int32 EnumerateSubscriptionDiscount(UInt32 uSubscriptionId, UInt32 uDiscountIdx, ref TSteamSubscriptionDiscount pSteamSubscriptionDiscount, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateSubscriptionDiscount>(this.Functions.EnumerateSubscriptionDiscount); return call(this.ObjectAddress, uSubscriptionId, uDiscountIdx, ref pSteamSubscriptionDiscount, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateSubscriptionDiscountQualifier(IntPtr thisobj, UInt32 uSubscriptionId, UInt32 uDiscountIdx, UInt32 uQualifierIdx, ref TSteamDiscountQualifier pSteamDiscountQualifier, ref TSteamError pError);
		public Int32 EnumerateSubscriptionDiscountQualifier(UInt32 uSubscriptionId, UInt32 uDiscountIdx, UInt32 uQualifierIdx, ref TSteamDiscountQualifier pSteamDiscountQualifier, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateSubscriptionDiscountQualifier>(this.Functions.EnumerateSubscriptionDiscountQualifier); return call(this.ObjectAddress, uSubscriptionId, uDiscountIdx, uQualifierIdx, ref pSteamDiscountQualifier, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateApp(IntPtr thisobj, UInt32 uAppId, ref TSteamApp pApp, ref TSteamError pError);
		public Int32 EnumerateApp(UInt32 uAppId, ref TSteamApp pApp, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateApp>(this.Functions.EnumerateApp); return call(this.ObjectAddress, uAppId, ref pApp, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppLaunchOption(IntPtr thisobj, UInt32 uAppId, UInt32 uLaunchOptionIndex, ref TSteamAppLaunchOption pLaunchOption, ref TSteamError pError);
		public Int32 EnumerateAppLaunchOption(UInt32 uAppId, UInt32 uLaunchOptionIndex, ref TSteamAppLaunchOption pLaunchOption, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateAppLaunchOption>(this.Functions.EnumerateAppLaunchOption); return call(this.ObjectAddress, uAppId, uLaunchOptionIndex, ref pLaunchOption, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeDeleteAccount(IntPtr thisobj, ref TSteamError pError);
		public UInt32 DeleteAccount(ref TSteamError pError) { var call = this.GetFunction<NativeDeleteAccount>(this.Functions.DeleteAccount); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppIcon(IntPtr thisobj, UInt32 uAppId, UInt32 uIconIndex, byte[] pIconData, UInt32 uIconDataBufSize, ref UInt32 puSizeOfIconData, ref TSteamError pError);
		public Int32 EnumerateAppIcon(UInt32 uAppId, UInt32 uIconIndex, byte[] pIconData, UInt32 uIconDataBufSize, ref UInt32 puSizeOfIconData, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateAppIcon>(this.Functions.EnumerateAppIcon); return call(this.ObjectAddress, uAppId, uIconIndex, pIconData, uIconDataBufSize, ref puSizeOfIconData, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLaunchApp(IntPtr thisobj, UInt32 uAppId, UInt32 uLaunchOption, string cszArgs, ref TSteamError pError);
		public UInt32 LaunchApp(UInt32 uAppId, UInt32 uLaunchOption, string cszArgs, ref TSteamError pError) { var call = this.GetFunction<NativeLaunchApp>(this.Functions.LaunchApp); return call(this.ObjectAddress, uAppId, uLaunchOption, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArgs ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCacheFilePath(IntPtr thisobj, UInt32 uAppId, string szFilePath, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSteamError pError);
		public Int32 GetCacheFilePath(UInt32 uAppId, string szFilePath, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSteamError pError) { var call = this.GetFunction<NativeGetCacheFilePath>(this.Functions.GetCacheFilePath); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szFilePath ) ), uBufferLength, ref puRecievedLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppVersion(IntPtr thisobj, UInt32 uAppId, UInt32 uVersionIndex, ref TSteamAppVersion pAppVersion, ref TSteamError pError);
		public Int32 EnumerateAppVersion(UInt32 uAppId, UInt32 uVersionIndex, ref TSteamAppVersion pAppVersion, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateAppVersion>(this.Functions.EnumerateAppVersion); return call(this.ObjectAddress, uAppId, uVersionIndex, ref pAppVersion, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppDependency(IntPtr thisobj, UInt32 AppId, UInt32 uDependency, ref TSteamAppDependencyInfo pDependencyInfo, ref TSteamError pError);
		public Int32 EnumerateAppDependency(UInt32 AppId, UInt32 uDependency, ref TSteamAppDependencyInfo pDependencyInfo, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateAppDependency>(this.Functions.EnumerateAppDependency); return call(this.ObjectAddress, AppId, uDependency, ref pDependencyInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeStartLoadingCache(IntPtr thisobj, UInt32 uAppId, ref TSteamError pError);
		public UInt32 StartLoadingCache(UInt32 uAppId, ref TSteamError pError) { var call = this.GetFunction<NativeStartLoadingCache>(this.Functions.StartLoadingCache); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInsertAppDependency(IntPtr thisobj, UInt32 uAppId, UInt32 uFileSystemIndex, ref TSteamAppDependencyInfo pDependencyInfo, ref TSteamError pError);
		public Int32 InsertAppDependency(UInt32 uAppId, UInt32 uFileSystemIndex, ref TSteamAppDependencyInfo pDependencyInfo, ref TSteamError pError) { var call = this.GetFunction<NativeInsertAppDependency>(this.Functions.InsertAppDependency); return call(this.ObjectAddress, uAppId, uFileSystemIndex, ref pDependencyInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRemoveAppDependency(IntPtr thisobj, UInt32 uAppId, UInt32 uFileSystemIndex, ref TSteamError pError);
		public Int32 RemoveAppDependency(UInt32 uAppId, UInt32 uFileSystemIndex, ref TSteamError pError) { var call = this.GetFunction<NativeRemoveAppDependency>(this.Functions.RemoveAppDependency); return call(this.ObjectAddress, uAppId, uFileSystemIndex, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFindApp(IntPtr thisobj, string cszArg1, ref UInt32 puArg2, ref TSteamError pError);
		public Int32 FindApp(string cszArg1, ref UInt32 puArg2, ref TSteamError pError) { var call = this.GetFunction<NativeFindApp>(this.Functions.FindApp); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), ref puArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppDependencies(IntPtr thisobj, UInt32 uAppId, ref UInt32 puDependecies, UInt32 uBufferLength, ref TSteamError pError);
		public Int32 GetAppDependencies(UInt32 uAppId, ref UInt32 puDependecies, UInt32 uBufferLength, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppDependencies>(this.Functions.GetAppDependencies); return call(this.ObjectAddress, uAppId, ref puDependecies, uBufferLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsSubscribed(IntPtr thisobj, UInt32 uSubscriptionId, ref Int32 pbIsSubscribed, ref Int32 pReserved, ref TSteamError pError);
		public Int32 IsSubscribed(UInt32 uSubscriptionId, ref Int32 pbIsSubscribed, ref Int32 pReserved, ref TSteamError pError) { var call = this.GetFunction<NativeIsSubscribed>(this.Functions.IsSubscribed); return call(this.ObjectAddress, uSubscriptionId, ref pbIsSubscribed, ref pReserved, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppUserDefinedInfo(IntPtr thisobj, UInt32 uAppId, string cszPropertyName, string szPropertyValue, UInt32 uBufSize, ref UInt32 puPropertyValueLength, ref TSteamError pError);
		public Int32 GetAppUserDefinedInfo(UInt32 uAppId, string cszPropertyName, string szPropertyValue, UInt32 uBufSize, ref UInt32 puPropertyValueLength, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppUserDefinedInfo>(this.Functions.GetAppUserDefinedInfo); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPropertyName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( szPropertyValue ) ), uBufSize, ref puPropertyValueLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeWaitForAppReadyToLaunch(IntPtr thisobj, UInt32 uAppId, ref TSteamError pError);
		public UInt32 WaitForAppReadyToLaunch(UInt32 uAppId, ref TSteamError pError) { var call = this.GetFunction<NativeWaitForAppReadyToLaunch>(this.Functions.WaitForAppReadyToLaunch); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsCacheLoadingEnabled(IntPtr thisobj, UInt32 uAppId, ref Int32 pbIsLoading, ref TSteamError pError);
		public Int32 IsCacheLoadingEnabled(UInt32 uAppId, ref Int32 pbIsLoading, ref TSteamError pError) { var call = this.GetFunction<NativeIsCacheLoadingEnabled>(this.Functions.IsCacheLoadingEnabled); return call(this.ObjectAddress, uAppId, ref pbIsLoading, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeStopLoadingCache(IntPtr thisobj, UInt32 uAppId, ref TSteamError pError);
		public UInt32 StopLoadingCache(UInt32 uAppId, ref TSteamError pError) { var call = this.GetFunction<NativeStopLoadingCache>(this.Functions.StopLoadingCache); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ESteamError NativeGetEncryptedUserIDTicket(IntPtr thisobj, byte[] pEncryptionKeyReceivedFromAppServer, UInt32 uEncryptionKeyLength, byte[] pOutputBuffer, UInt32 uSizeOfOutputBuffer, ref UInt32 pReceiveSizeOfEncryptedTicket, ref TSteamError pError);
		public ESteamError GetEncryptedUserIDTicket(byte[] pEncryptionKeyReceivedFromAppServer, UInt32 uEncryptionKeyLength, byte[] pOutputBuffer, UInt32 uSizeOfOutputBuffer, ref UInt32 pReceiveSizeOfEncryptedTicket, ref TSteamError pError) { var call = this.GetFunction<NativeGetEncryptedUserIDTicket>(this.Functions.GetEncryptedUserIDTicket); return call(this.ObjectAddress, pEncryptionKeyReceivedFromAppServer, uEncryptionKeyLength, pOutputBuffer, uSizeOfOutputBuffer, ref pReceiveSizeOfEncryptedTicket, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeFlushCache(IntPtr thisobj, UInt32 uAppId, ref TSteamError pError);
		public UInt32 FlushCache(UInt32 uAppId, ref TSteamError pError) { var call = this.GetFunction<NativeFlushCache>(this.Functions.FlushCache); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRepairOrDecryptCaches(IntPtr thisobj, UInt32 uAppId, Int32 iArg2, ref TSteamError pError);
		public UInt32 RepairOrDecryptCaches(UInt32 uAppId, Int32 iArg2, ref TSteamError pError) { var call = this.GetFunction<NativeRepairOrDecryptCaches>(this.Functions.RepairOrDecryptCaches); return call(this.ObjectAddress, uAppId, iArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLoadCacheFromDir(IntPtr thisobj, UInt32 uAppId, string cszPath, ref TSteamError pError);
		public UInt32 LoadCacheFromDir(UInt32 uAppId, string cszPath, ref TSteamError pError) { var call = this.GetFunction<NativeLoadCacheFromDir>(this.Functions.LoadCacheFromDir); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPath ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCacheDefaultDirectory(IntPtr thisobj, string szPath, ref TSteamError pError);
		public Int32 GetCacheDefaultDirectory(string szPath, ref TSteamError pError) { var call = this.GetFunction<NativeGetCacheDefaultDirectory>(this.Functions.GetCacheDefaultDirectory); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szPath ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetCacheDefaultDirectory(IntPtr thisobj, string cszPath, ref TSteamError pError);
		public Int32 SetCacheDefaultDirectory(string cszPath, ref TSteamError pError) { var call = this.GetFunction<NativeSetCacheDefaultDirectory>(this.Functions.SetCacheDefaultDirectory); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPath ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppDir(IntPtr thisobj, UInt32 uAppId, string szAppDir, ref TSteamError pError);
		public Int32 GetAppDir(UInt32 uAppId, string szAppDir, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppDir>(this.Functions.GetAppDir); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szAppDir ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeMoveApp(IntPtr thisobj, UInt32 uAppId, string szPath, ref TSteamError pError);
		public UInt32 MoveApp(UInt32 uAppId, string szPath, ref TSteamError pError) { var call = this.GetFunction<NativeMoveApp>(this.Functions.MoveApp); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szPath ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppCacheSize(IntPtr thisobj, UInt32 uAppId, ref UInt32 puCacheSizeInMb, ref TSteamError pError);
		public UInt32 GetAppCacheSize(UInt32 uAppId, ref UInt32 puCacheSizeInMb, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppCacheSize>(this.Functions.GetAppCacheSize); return call(this.ObjectAddress, uAppId, ref puCacheSizeInMb, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSetAppCacheSize(IntPtr thisobj, UInt32 uAppId, UInt32 uCacheSizeInMb, ref TSteamError pError);
		public UInt32 SetAppCacheSize(UInt32 uAppId, UInt32 uCacheSizeInMb, ref TSteamError pError) { var call = this.GetFunction<NativeSetAppCacheSize>(this.Functions.SetAppCacheSize); return call(this.ObjectAddress, uAppId, uCacheSizeInMb, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSetAppVersion(IntPtr thisobj, UInt32 uAppId, UInt32 uAppVersionId, ref TSteamError pError);
		public UInt32 SetAppVersion(UInt32 uAppId, UInt32 uAppVersionId, ref TSteamError pError) { var call = this.GetFunction<NativeSetAppVersion>(this.Functions.SetAppVersion); return call(this.ObjectAddress, uAppId, uAppVersionId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUninstall(IntPtr thisobj, ref TSteamError pError);
		public UInt32 Uninstall(ref TSteamError pError) { var call = this.GetFunction<NativeUninstall>(this.Functions.Uninstall); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetNotificationCallback(IntPtr thisobj, ref IntPtr pCallbackFunction, ref TSteamError pError);
		public Int32 SetNotificationCallback(ref IntPtr pCallbackFunction, ref TSteamError pError) { var call = this.GetFunction<NativeSetNotificationCallback>(this.Functions.SetNotificationCallback); return call(this.ObjectAddress, ref pCallbackFunction, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangeForgottenPassword(IntPtr thisobj, string cszArg1, string cszArg2, string cszArg3, string cszArg4, ref Int32 piArg5, ref TSteamError pError);
		public UInt32 ChangeForgottenPassword(string cszArg1, string cszArg2, string cszArg3, string cszArg4, ref Int32 piArg5, ref TSteamError pError) { var call = this.GetFunction<NativeChangeForgottenPassword>(this.Functions.ChangeForgottenPassword); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg2 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg3 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg4 ) ), ref piArg5, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestForgottenPasswordEmail(IntPtr thisobj, string cszArg1, string szArg2, ref TSteamError pError);
		public UInt32 RequestForgottenPasswordEmail(string cszArg1, string szArg2, ref TSteamError pError) { var call = this.GetFunction<NativeRequestForgottenPasswordEmail>(this.Functions.RequestForgottenPasswordEmail); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( szArg2 ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestAccountsByEmailAddressEmail(IntPtr thisobj, string cszArg1, ref TSteamError pError);
		public UInt32 RequestAccountsByEmailAddressEmail(string cszArg1, ref TSteamError pError) { var call = this.GetFunction<NativeRequestAccountsByEmailAddressEmail>(this.Functions.RequestAccountsByEmailAddressEmail); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestAccountsByCdKeyEmail(IntPtr thisobj, string cszArg1, ref TSteamError pError);
		public UInt32 RequestAccountsByCdKeyEmail(string cszArg1, ref TSteamError pError) { var call = this.GetFunction<NativeRequestAccountsByCdKeyEmail>(this.Functions.RequestAccountsByCdKeyEmail); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumAccountsWithEmailAddress(IntPtr thisobj, string cszArg1, ref UInt32 puArg2, ref TSteamError pError);
		public UInt32 GetNumAccountsWithEmailAddress(string cszArg1, ref UInt32 puArg2, ref TSteamError pError) { var call = this.GetFunction<NativeGetNumAccountsWithEmailAddress>(this.Functions.GetNumAccountsWithEmailAddress); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), ref puArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUpdateAccountBillingInfo(IntPtr thisobj, ref TSteamPaymentCardInfo pPaymentCardInfo, ref TSteamError pError);
		public UInt32 UpdateAccountBillingInfo(ref TSteamPaymentCardInfo pPaymentCardInfo, ref TSteamError pError) { var call = this.GetFunction<NativeUpdateAccountBillingInfo>(this.Functions.UpdateAccountBillingInfo); return call(this.ObjectAddress, ref pPaymentCardInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUpdateSubscriptionBillingInfo(IntPtr thisobj, UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSteamError pError);
		public UInt32 UpdateSubscriptionBillingInfo(UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSteamError pError) { var call = this.GetFunction<NativeUpdateSubscriptionBillingInfo>(this.Functions.UpdateSubscriptionBillingInfo); return call(this.ObjectAddress, uSubscriptionId, ref pSubscriptionBillingInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSponsorUrl(IntPtr thisobj, UInt32 uAppId, string szUrl, UInt32 uBufSize, ref UInt32 pUrlChars, ref TSteamError pError);
		public Int32 GetSponsorUrl(UInt32 uAppId, string szUrl, UInt32 uBufSize, ref UInt32 pUrlChars, ref TSteamError pError) { var call = this.GetFunction<NativeGetSponsorUrl>(this.Functions.GetSponsorUrl); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szUrl ) ), uBufSize, ref pUrlChars, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetContentServerInfo(IntPtr thisobj, UInt32 uArg1, ref UInt32 puArg2, ref UInt32 puArg3, ref TSteamError pError);
		public Int32 GetContentServerInfo(UInt32 uArg1, ref UInt32 puArg2, ref UInt32 puArg3, ref TSteamError pError) { var call = this.GetFunction<NativeGetContentServerInfo>(this.Functions.GetContentServerInfo); return call(this.ObjectAddress, uArg1, ref puArg2, ref puArg3, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppUpdateStats(IntPtr thisobj, UInt32 uAppId, ESteamAppUpdateStatsQueryType eSteamAppUpdateStatsQueryType, ref TSteamUpdateStats pUpdateStats, ref TSteamError pError);
		public UInt32 GetAppUpdateStats(UInt32 uAppId, ESteamAppUpdateStatsQueryType eSteamAppUpdateStatsQueryType, ref TSteamUpdateStats pUpdateStats, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppUpdateStats>(this.Functions.GetAppUpdateStats); return call(this.ObjectAddress, uAppId, eSteamAppUpdateStatsQueryType, ref pUpdateStats, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetTotalUpdateStats(IntPtr thisobj, ref TSteamUpdateStats pUpdateStats, ref TSteamError pError);
		public Int32 GetTotalUpdateStats(ref TSteamUpdateStats pUpdateStats, ref TSteamError pError) { var call = this.GetFunction<NativeGetTotalUpdateStats>(this.Functions.GetTotalUpdateStats); return call(this.ObjectAddress, ref pUpdateStats, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateCachePreloaders(IntPtr thisobj, ref TSteamError pError);
		public UInt32 CreateCachePreloaders(ref TSteamError pError) { var call = this.GetFunction<NativeCreateCachePreloaders>(this.Functions.CreateCachePreloaders); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeWin32SetMiniDumpComment(IntPtr thisobj, string cszComment);
		public void Win32SetMiniDumpComment(string cszComment) { var call = this.GetFunction<NativeWin32SetMiniDumpComment>(this.Functions.Win32SetMiniDumpComment); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszComment ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeWin32SetMiniDumpSourceControlId(IntPtr thisobj, UInt32 uSourceControlId);
		public void Win32SetMiniDumpSourceControlId(UInt32 uSourceControlId) { var call = this.GetFunction<NativeWin32SetMiniDumpSourceControlId>(this.Functions.Win32SetMiniDumpSourceControlId); call(this.ObjectAddress, uSourceControlId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeWin32SetMiniDumpEnableFullMemory(IntPtr thisobj);
		public void Win32SetMiniDumpEnableFullMemory() { var call = this.GetFunction<NativeWin32SetMiniDumpEnableFullMemory>(this.Functions.Win32SetMiniDumpEnableFullMemory); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeWin32WriteMiniDump(IntPtr thisobj, string arg1, string arg2, string arg3, string arg4, UInt32 arg5);
		public void Win32WriteMiniDump(string arg1, string arg2, string arg3, string arg4, UInt32 arg5) { var call = this.GetFunction<NativeWin32WriteMiniDump>(this.Functions.Win32WriteMiniDump); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg1 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg2 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg3 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg4 ) ), arg5); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCurrentAppId(IntPtr thisobj, ref UInt32 puAppId, ref TSteamError pError);
		public Int32 GetCurrentAppId(ref UInt32 puAppId, ref TSteamError pError) { var call = this.GetFunction<NativeGetCurrentAppId>(this.Functions.GetCurrentAppId); return call(this.ObjectAddress, ref puAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppPurchaseCountry(IntPtr thisobj, UInt32 uAppId, string szCountryCode, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSteamError pError);
		public Int32 GetAppPurchaseCountry(UInt32 uAppId, string szCountryCode, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppPurchaseCountry>(this.Functions.GetAppPurchaseCountry); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szCountryCode ) ), uBufferLength, ref puRecievedLength, ref pError); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteam006VTable
	{
        public IntPtr DTor;
		public IntPtr ChangePassword;
		public IntPtr GetCurrentEmailAddress;
		public IntPtr ChangePersonalQA;
		public IntPtr ChangeEmailAddress;
		public IntPtr VerifyEmailAddress;
		public IntPtr RequestEmailAddressVerificationEmail;
		public IntPtr ChangeAccountName;
		public IntPtr MountAppFilesystem;
		public IntPtr UnmountAppFilesystem;
		public IntPtr MountFilesystem;
		public IntPtr UnmountFilesystem;
		public IntPtr Stat;
		public IntPtr SetvBuf;
		public IntPtr FlushFile;
		public IntPtr OpenFile;
		public IntPtr OpenFileEx;
		public IntPtr OpenTmpFile;
		public IntPtr ClearError;
		public IntPtr GetVersion;
		public IntPtr GetOfflineStatus;
		public IntPtr ChangeOfflineStatus;
		public IntPtr ProcessCall;
		public IntPtr AbortCall;
		public IntPtr BlockingCall;
		public IntPtr SetMaxStallCount;
		public IntPtr CloseFile;
		public IntPtr ReadFile;
		public IntPtr WriteFile;
		public IntPtr Getc;
		public IntPtr Putc;
		public IntPtr SeekFile;
		public IntPtr TellFile;
		public IntPtr SizeFile;
		public IntPtr FindFirst;
		public IntPtr FindNext;
		public IntPtr FindClose;
		public IntPtr GetLocalFileCopy;
		public IntPtr IsFileImmediatelyAvailable;
		public IntPtr HintResourceNeed;
		public IntPtr ForgetAllHints;
		public IntPtr PauseCachePreloading;
		public IntPtr ResumeCachePreloading;
		public IntPtr WaitForResources;
		public IntPtr StartEngine;
		public IntPtr ShutdownEngine;
		public IntPtr Startup;
		public IntPtr Cleanup;
		public IntPtr NumAppsRunning;
		public IntPtr CreateAccount;
		public IntPtr GenerateSuggestedAccountNames;
		public IntPtr IsLoggedIn;
		public IntPtr Logout;
		public IntPtr IsSecureComputer;
		public IntPtr CreateLogContext;
		public IntPtr Log;
		public IntPtr LogResourceLoadStarted;
		public IntPtr LogResourceLoadFinished;
		public IntPtr RefreshLogin;
		public IntPtr VerifyPassword;
		public IntPtr GetUserType;
		public IntPtr GetAppStats;
		public IntPtr IsAccountNameInUse;
		public IntPtr GetAppIds;
		public IntPtr GetSubscriptionStats;
		public IntPtr RefreshAccountInfo;
		public IntPtr Subscribe;
		public IntPtr Unsubscribe;
		public IntPtr GetSubscriptionReceipt;
		public IntPtr GetAccountStatus;
		public IntPtr SetUser;
		public IntPtr GetUser;
		public IntPtr Login;
		public IntPtr AckSubscriptionReceipt;
		public IntPtr IsAppSubscribed;
		public IntPtr GetSubscriptionIds;
		public IntPtr EnumerateSubscription;
		public IntPtr EnumerateSubscriptionDiscount;
		public IntPtr EnumerateSubscriptionDiscountQualifier;
		public IntPtr EnumerateApp;
		public IntPtr EnumerateAppLaunchOption;
		public IntPtr DeleteAccount;
		public IntPtr EnumerateAppIcon;
		public IntPtr LaunchApp;
		public IntPtr GetCacheFilePath;
		public IntPtr EnumerateAppVersion;
		public IntPtr EnumerateAppDependency;
		public IntPtr StartLoadingCache;
		public IntPtr InsertAppDependency;
		public IntPtr RemoveAppDependency;
		public IntPtr FindApp;
		public IntPtr GetAppDependencies;
		public IntPtr IsSubscribed;
		public IntPtr GetAppUserDefinedInfo;
		public IntPtr WaitForAppReadyToLaunch;
		public IntPtr IsCacheLoadingEnabled;
		public IntPtr StopLoadingCache;
		public IntPtr GetEncryptedUserIDTicket;
		public IntPtr FlushCache;
		public IntPtr RepairOrDecryptCaches;
		public IntPtr LoadCacheFromDir;
		public IntPtr GetCacheDefaultDirectory;
		public IntPtr SetCacheDefaultDirectory;
		public IntPtr GetAppDir;
		public IntPtr MoveApp;
		public IntPtr GetAppCacheSize;
		public IntPtr SetAppCacheSize;
		public IntPtr SetAppVersion;
		public IntPtr Uninstall;
		public IntPtr SetNotificationCallback;
		public IntPtr ChangeForgottenPassword;
		public IntPtr RequestForgottenPasswordEmail;
		public IntPtr RequestAccountsByEmailAddressEmail;
		public IntPtr RequestAccountsByCdKeyEmail;
		public IntPtr GetNumAccountsWithEmailAddress;
		public IntPtr UpdateAccountBillingInfo;
		public IntPtr UpdateSubscriptionBillingInfo;
		public IntPtr GetSponsorUrl;
		public IntPtr GetContentServerInfo;
		public IntPtr GetAppUpdateStats;
		public IntPtr GetTotalUpdateStats;
		public IntPtr CreateCachePreloaders;
		public IntPtr Win32SetMiniDumpComment;
		public IntPtr Win32SetMiniDumpSourceControlId;
		public IntPtr Win32SetMiniDumpEnableFullMemory;
		public IntPtr Win32WriteMiniDump;
		public IntPtr GetCurrentAppId;
		public IntPtr GetAppPurchaseCountry;
		public IntPtr GetLocalClientVersion;
		public IntPtr IsFileNeededByCache;
		public IntPtr LoadFileToCache;
		public IntPtr GetCacheDecryptionKey;
		public IntPtr GetSubscriptionExtendedInfo;
		public IntPtr GetSubscriptionPurchaseCountry;
		public IntPtr GetAppUserDefinedRecord;
		public IntPtr FindServersNumServers;
		public IntPtr FindServersIterateServer;
		public IntPtr FindServersGetErrorString;
		public IntPtr CheckAppOwnership;
		public IntPtr GetCachePercentFragmentation;
		public IntPtr DefragCaches;
		public IntPtr IsFileNeededByApp;
		public IntPtr WaitForAppResources;
		public IntPtr ForceCellId;
		public IntPtr GetAppDLCStatus;
		public IntPtr StartEngineEx;
	}
	
	public class ISteam006 : NativeWrapper<ISteam006VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangePassword(IntPtr thisobj, string cszCurrentPassphrase, string cszNewPassphrase, ref TSteamError pError);
		public UInt32 ChangePassword(string cszCurrentPassphrase, string cszNewPassphrase, ref TSteamError pError) { var call = this.GetFunction<NativeChangePassword>(this.Functions.ChangePassword); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszCurrentPassphrase ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszNewPassphrase ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCurrentEmailAddress(IntPtr thisobj, string szEmailaddress, UInt32 uBufSize, ref UInt32 puEmailaddressChars, ref TSteamError pError);
		public Int32 GetCurrentEmailAddress(string szEmailaddress, UInt32 uBufSize, ref UInt32 puEmailaddressChars, ref TSteamError pError) { var call = this.GetFunction<NativeGetCurrentEmailAddress>(this.Functions.GetCurrentEmailAddress); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szEmailaddress ) ), uBufSize, ref puEmailaddressChars, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangePersonalQA(IntPtr thisobj, string cszCurrentPassphrase, string cszNewPersonalQuestion, string cszNewAnswerToQuestion, ref TSteamError pError);
		public UInt32 ChangePersonalQA(string cszCurrentPassphrase, string cszNewPersonalQuestion, string cszNewAnswerToQuestion, ref TSteamError pError) { var call = this.GetFunction<NativeChangePersonalQA>(this.Functions.ChangePersonalQA); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszCurrentPassphrase ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszNewPersonalQuestion ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszNewAnswerToQuestion ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangeEmailAddress(IntPtr thisobj, string cszNewEmailAddress, ref TSteamError pError);
		public UInt32 ChangeEmailAddress(string cszNewEmailAddress, ref TSteamError pError) { var call = this.GetFunction<NativeChangeEmailAddress>(this.Functions.ChangeEmailAddress); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszNewEmailAddress ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeVerifyEmailAddress(IntPtr thisobj, string cszEmailAddress, ref TSteamError pError);
		public UInt32 VerifyEmailAddress(string cszEmailAddress, ref TSteamError pError) { var call = this.GetFunction<NativeVerifyEmailAddress>(this.Functions.VerifyEmailAddress); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszEmailAddress ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestEmailAddressVerificationEmail(IntPtr thisobj, ref TSteamError pError);
		public UInt32 RequestEmailAddressVerificationEmail(ref TSteamError pError) { var call = this.GetFunction<NativeRequestEmailAddressVerificationEmail>(this.Functions.RequestEmailAddressVerificationEmail); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangeAccountName(IntPtr thisobj, string cszCurrentAccountName, string cszNewAccountName, ref TSteamError pError);
		public UInt32 ChangeAccountName(string cszCurrentAccountName, string cszNewAccountName, ref TSteamError pError) { var call = this.GetFunction<NativeChangeAccountName>(this.Functions.ChangeAccountName); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszCurrentAccountName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszNewAccountName ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeMountAppFilesystem(IntPtr thisobj, ref TSteamError pError);
		public Int32 MountAppFilesystem(ref TSteamError pError) { var call = this.GetFunction<NativeMountAppFilesystem>(this.Functions.MountAppFilesystem); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeUnmountAppFilesystem(IntPtr thisobj, ref TSteamError pError);
		public Int32 UnmountAppFilesystem(ref TSteamError pError) { var call = this.GetFunction<NativeUnmountAppFilesystem>(this.Functions.UnmountAppFilesystem); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeMountFilesystem(IntPtr thisobj, UInt32 uAppId, string szMountPath, ref TSteamError pError);
		public UInt32 MountFilesystem(UInt32 uAppId, string szMountPath, ref TSteamError pError) { var call = this.GetFunction<NativeMountFilesystem>(this.Functions.MountFilesystem); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szMountPath ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeUnmountFilesystem(IntPtr thisobj, UInt32 hFile, ref TSteamError pError);
		public Int32 UnmountFilesystem(UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativeUnmountFilesystem>(this.Functions.UnmountFilesystem); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeStat(IntPtr thisobj, string cszName, ref TSteamElemInfo pInfo, ref TSteamError pError);
		public Int32 Stat(string cszName, ref TSteamElemInfo pInfo, ref TSteamError pError) { var call = this.GetFunction<NativeStat>(this.Functions.Stat); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszName ) ), ref pInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetvBuf(IntPtr thisobj, UInt32 hFile, byte[] pBuf, ESteamBufferMethod eMethod, UInt32 uBytes, ref TSteamError pError);
		public Int32 SetvBuf(UInt32 hFile, byte[] pBuf, ESteamBufferMethod eMethod, UInt32 uBytes, ref TSteamError pError) { var call = this.GetFunction<NativeSetvBuf>(this.Functions.SetvBuf); return call(this.ObjectAddress, hFile, pBuf, eMethod, uBytes, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFlushFile(IntPtr thisobj, UInt32 hFile, ref TSteamError pError);
		public Int32 FlushFile(UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativeFlushFile>(this.Functions.FlushFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeOpenFile(IntPtr thisobj, string cszName, string cszMode, ref TSteamError pError);
		public UInt32 OpenFile(string cszName, string cszMode, ref TSteamError pError) { var call = this.GetFunction<NativeOpenFile>(this.Functions.OpenFile); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszMode ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeOpenFileEx(IntPtr thisobj, string cszFileName, string cszMode, Int32 iArg3, ref UInt32 puSize, ref Int32 piArg5, ref TSteamError pError);
		public UInt32 OpenFileEx(string cszFileName, string cszMode, Int32 iArg3, ref UInt32 puSize, ref Int32 piArg5, ref TSteamError pError) { var call = this.GetFunction<NativeOpenFileEx>(this.Functions.OpenFileEx); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszFileName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszMode ) ), iArg3, ref puSize, ref piArg5, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeOpenTmpFile(IntPtr thisobj, ref TSteamError pError);
		public UInt32 OpenTmpFile(ref TSteamError pError) { var call = this.GetFunction<NativeOpenTmpFile>(this.Functions.OpenTmpFile); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeClearError(IntPtr thisobj, ref TSteamError pError);
		public void ClearError(ref TSteamError pError) { var call = this.GetFunction<NativeClearError>(this.Functions.ClearError); call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetVersion(IntPtr thisobj, string szVersion, UInt32 uVersionBufSize);
		public Int32 GetVersion(string szVersion, UInt32 uVersionBufSize) { var call = this.GetFunction<NativeGetVersion>(this.Functions.GetVersion); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szVersion ) ), uVersionBufSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetOfflineStatus(IntPtr thisobj, ref TSteamOfflineStatus pSteamOfflineStatus, ref TSteamError pError);
		public Int32 GetOfflineStatus(ref TSteamOfflineStatus pSteamOfflineStatus, ref TSteamError pError) { var call = this.GetFunction<NativeGetOfflineStatus>(this.Functions.GetOfflineStatus); return call(this.ObjectAddress, ref pSteamOfflineStatus, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeChangeOfflineStatus(IntPtr thisobj, ref TSteamOfflineStatus pSteamOfflineStatus, ref TSteamError pError);
		public Int32 ChangeOfflineStatus(ref TSteamOfflineStatus pSteamOfflineStatus, ref TSteamError pError) { var call = this.GetFunction<NativeChangeOfflineStatus>(this.Functions.ChangeOfflineStatus); return call(this.ObjectAddress, ref pSteamOfflineStatus, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeProcessCall(IntPtr thisobj, UInt32 handle, ref TSteamProgress pProgress, ref TSteamError pError);
		public Int32 ProcessCall(UInt32 handle, ref TSteamProgress pProgress, ref TSteamError pError) { var call = this.GetFunction<NativeProcessCall>(this.Functions.ProcessCall); return call(this.ObjectAddress, handle, ref pProgress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAbortCall(IntPtr thisobj, UInt32 handle, ref TSteamError pError);
		public Int32 AbortCall(UInt32 handle, ref TSteamError pError) { var call = this.GetFunction<NativeAbortCall>(this.Functions.AbortCall); return call(this.ObjectAddress, handle, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeBlockingCall(IntPtr thisobj, UInt32 handle, UInt32 uiProcessTickMS, ref TSteamError pError);
		public Int32 BlockingCall(UInt32 handle, UInt32 uiProcessTickMS, ref TSteamError pError) { var call = this.GetFunction<NativeBlockingCall>(this.Functions.BlockingCall); return call(this.ObjectAddress, handle, uiProcessTickMS, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetMaxStallCount(IntPtr thisobj, UInt32 uNumStalls, ref TSteamError pError);
		public Int32 SetMaxStallCount(UInt32 uNumStalls, ref TSteamError pError) { var call = this.GetFunction<NativeSetMaxStallCount>(this.Functions.SetMaxStallCount); return call(this.ObjectAddress, uNumStalls, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCloseFile(IntPtr thisobj, UInt32 hFile, ref TSteamError pError);
		public Int32 CloseFile(UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativeCloseFile>(this.Functions.CloseFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeReadFile(IntPtr thisobj, byte[] pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSteamError pError);
		public UInt32 ReadFile(byte[] pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativeReadFile>(this.Functions.ReadFile); return call(this.ObjectAddress, pBuf, uSize, uCount, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeWriteFile(IntPtr thisobj, byte[] pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSteamError pError);
		public UInt32 WriteFile(byte[] pBuf, UInt32 uSize, UInt32 uCount, UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativeWriteFile>(this.Functions.WriteFile); return call(this.ObjectAddress, pBuf, uSize, uCount, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetc(IntPtr thisobj, UInt32 hFile, ref TSteamError pError);
		public Int32 Getc(UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativeGetc>(this.Functions.Getc); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePutc(IntPtr thisobj, Int32 cChar, UInt32 hFile, ref TSteamError pError);
		public Int32 Putc(Int32 cChar, UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativePutc>(this.Functions.Putc); return call(this.ObjectAddress, cChar, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSeekFile(IntPtr thisobj, UInt32 hFile, Int32 lOffset, ESteamSeekMethod sm, ref TSteamError pError);
		public Int32 SeekFile(UInt32 hFile, Int32 lOffset, ESteamSeekMethod sm, ref TSteamError pError) { var call = this.GetFunction<NativeSeekFile>(this.Functions.SeekFile); return call(this.ObjectAddress, hFile, lOffset, sm, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeTellFile(IntPtr thisobj, UInt32 hFile, ref TSteamError pError);
		public Int32 TellFile(UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativeTellFile>(this.Functions.TellFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSizeFile(IntPtr thisobj, UInt32 hFile, ref TSteamError pError);
		public Int32 SizeFile(UInt32 hFile, ref TSteamError pError) { var call = this.GetFunction<NativeSizeFile>(this.Functions.SizeFile); return call(this.ObjectAddress, hFile, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeFindFirst(IntPtr thisobj, string cszPattern, ESteamFindFilter eFilter, ref TSteamElemInfo pFindInfo, ref TSteamError pError);
		public UInt32 FindFirst(string cszPattern, ESteamFindFilter eFilter, ref TSteamElemInfo pFindInfo, ref TSteamError pError) { var call = this.GetFunction<NativeFindFirst>(this.Functions.FindFirst); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPattern ) ), eFilter, ref pFindInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFindNext(IntPtr thisobj, UInt32 hFind, ref TSteamElemInfo pFindInfo, ref TSteamError pError);
		public Int32 FindNext(UInt32 hFind, ref TSteamElemInfo pFindInfo, ref TSteamError pError) { var call = this.GetFunction<NativeFindNext>(this.Functions.FindNext); return call(this.ObjectAddress, hFind, ref pFindInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFindClose(IntPtr thisobj, UInt32 hFind, ref TSteamError pError);
		public Int32 FindClose(UInt32 hFind, ref TSteamError pError) { var call = this.GetFunction<NativeFindClose>(this.Functions.FindClose); return call(this.ObjectAddress, hFind, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLocalFileCopy(IntPtr thisobj, string cszName, ref TSteamError pError);
		public Int32 GetLocalFileCopy(string cszName, ref TSteamError pError) { var call = this.GetFunction<NativeGetLocalFileCopy>(this.Functions.GetLocalFileCopy); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszName ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsFileImmediatelyAvailable(IntPtr thisobj, string cszName, ref TSteamError pError);
		public Int32 IsFileImmediatelyAvailable(string cszName, ref TSteamError pError) { var call = this.GetFunction<NativeIsFileImmediatelyAvailable>(this.Functions.IsFileImmediatelyAvailable); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszName ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeHintResourceNeed(IntPtr thisobj, string cszHintList, Int32 bForgetEverything, ref TSteamError pError);
		public Int32 HintResourceNeed(string cszHintList, Int32 bForgetEverything, ref TSteamError pError) { var call = this.GetFunction<NativeHintResourceNeed>(this.Functions.HintResourceNeed); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszHintList ) ), bForgetEverything, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeForgetAllHints(IntPtr thisobj, ref TSteamError pError);
		public Int32 ForgetAllHints(ref TSteamError pError) { var call = this.GetFunction<NativeForgetAllHints>(this.Functions.ForgetAllHints); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePauseCachePreloading(IntPtr thisobj, ref TSteamError pError);
		public Int32 PauseCachePreloading(ref TSteamError pError) { var call = this.GetFunction<NativePauseCachePreloading>(this.Functions.PauseCachePreloading); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeResumeCachePreloading(IntPtr thisobj, ref TSteamError pError);
		public Int32 ResumeCachePreloading(ref TSteamError pError) { var call = this.GetFunction<NativeResumeCachePreloading>(this.Functions.ResumeCachePreloading); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeWaitForResources(IntPtr thisobj, string cszMasterList, ref TSteamError pError);
		public UInt32 WaitForResources(string cszMasterList, ref TSteamError pError) { var call = this.GetFunction<NativeWaitForResources>(this.Functions.WaitForResources); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszMasterList ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeStartEngine(IntPtr thisobj, ref TSteamError pError);
		public Int32 StartEngine(ref TSteamError pError) { var call = this.GetFunction<NativeStartEngine>(this.Functions.StartEngine); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeShutdownEngine(IntPtr thisobj, ref TSteamError pError);
		public Int32 ShutdownEngine(ref TSteamError pError) { var call = this.GetFunction<NativeShutdownEngine>(this.Functions.ShutdownEngine); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeStartup(IntPtr thisobj, UInt32 uUsingMask, ref TSteamError pError);
		public Int32 Startup(UInt32 uUsingMask, ref TSteamError pError) { var call = this.GetFunction<NativeStartup>(this.Functions.Startup); return call(this.ObjectAddress, uUsingMask, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCleanup(IntPtr thisobj, ref TSteamError pError);
		public Int32 Cleanup(ref TSteamError pError) { var call = this.GetFunction<NativeCleanup>(this.Functions.Cleanup); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeNumAppsRunning(IntPtr thisobj, ref TSteamError pError);
		public UInt32 NumAppsRunning(ref TSteamError pError) { var call = this.GetFunction<NativeNumAppsRunning>(this.Functions.NumAppsRunning); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateAccount(IntPtr thisobj, string cszUser, string cszPassphrase, string cszCreationKey, string cszPersonalQuestion, string cszAnswerToQuestion, string cszArg6, ref Int32 pbCreated, ref TSteamError pError);
		public UInt32 CreateAccount(string cszUser, string cszPassphrase, string cszCreationKey, string cszPersonalQuestion, string cszAnswerToQuestion, string cszArg6, ref Int32 pbCreated, ref TSteamError pError) { var call = this.GetFunction<NativeCreateAccount>(this.Functions.CreateAccount); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszUser ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPassphrase ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszCreationKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPersonalQuestion ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszAnswerToQuestion ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg6 ) ), ref pbCreated, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGenerateSuggestedAccountNames(IntPtr thisobj, string cszArg1, string cszArg2, string szArg3, UInt32 uArg4, ref UInt32 puArg5, ref TSteamError pError);
		public UInt32 GenerateSuggestedAccountNames(string cszArg1, string cszArg2, string szArg3, UInt32 uArg4, ref UInt32 puArg5, ref TSteamError pError) { var call = this.GetFunction<NativeGenerateSuggestedAccountNames>(this.Functions.GenerateSuggestedAccountNames); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg2 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( szArg3 ) ), uArg4, ref puArg5, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsLoggedIn(IntPtr thisobj, ref Int32 pbIsLoggedIn, ref TSteamError pError);
		public Int32 IsLoggedIn(ref Int32 pbIsLoggedIn, ref TSteamError pError) { var call = this.GetFunction<NativeIsLoggedIn>(this.Functions.IsLoggedIn); return call(this.ObjectAddress, ref pbIsLoggedIn, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLogout(IntPtr thisobj, ref TSteamError pError);
		public UInt32 Logout(ref TSteamError pError) { var call = this.GetFunction<NativeLogout>(this.Functions.Logout); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsSecureComputer(IntPtr thisobj, ref Int32 pbIsSecure, ref TSteamError pError);
		public Int32 IsSecureComputer(ref Int32 pbIsSecure, ref TSteamError pError) { var call = this.GetFunction<NativeIsSecureComputer>(this.Functions.IsSecureComputer); return call(this.ObjectAddress, ref pbIsSecure, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateLogContext(IntPtr thisobj, string cszName);
		public UInt32 CreateLogContext(string cszName) { var call = this.GetFunction<NativeCreateLogContext>(this.Functions.CreateLogContext); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeLog(IntPtr thisobj, UInt32 hContext, string cszMsg);
		public Int32 Log(UInt32 hContext, string cszMsg) { var call = this.GetFunction<NativeLog>(this.Functions.Log); return call(this.ObjectAddress, hContext, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszMsg ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogResourceLoadStarted(IntPtr thisobj, string cszMsg);
		public void LogResourceLoadStarted(string cszMsg) { var call = this.GetFunction<NativeLogResourceLoadStarted>(this.Functions.LogResourceLoadStarted); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszMsg ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogResourceLoadFinished(IntPtr thisobj, string cszMsg);
		public void LogResourceLoadFinished(string cszMsg) { var call = this.GetFunction<NativeLogResourceLoadFinished>(this.Functions.LogResourceLoadFinished); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszMsg ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRefreshLogin(IntPtr thisobj, string cszPassphrase, Int32 bIsSecureComputer, ref TSteamError pError);
		public UInt32 RefreshLogin(string cszPassphrase, Int32 bIsSecureComputer, ref TSteamError pError) { var call = this.GetFunction<NativeRefreshLogin>(this.Functions.RefreshLogin); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPassphrase ) ), bIsSecureComputer, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeVerifyPassword(IntPtr thisobj, string cszArg1, ref Int32 piArg2, ref TSteamError pError);
		public Int32 VerifyPassword(string cszArg1, ref Int32 piArg2, ref TSteamError pError) { var call = this.GetFunction<NativeVerifyPassword>(this.Functions.VerifyPassword); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), ref piArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetUserType(IntPtr thisobj, ref UInt32 puArg1, ref TSteamError pError);
		public Int32 GetUserType(ref UInt32 puArg1, ref TSteamError pError) { var call = this.GetFunction<NativeGetUserType>(this.Functions.GetUserType); return call(this.ObjectAddress, ref puArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppStats(IntPtr thisobj, ref TSteamAppStats pAppStats, ref TSteamError pError);
		public Int32 GetAppStats(ref TSteamAppStats pAppStats, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppStats>(this.Functions.GetAppStats); return call(this.ObjectAddress, ref pAppStats, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeIsAccountNameInUse(IntPtr thisobj, string cszUser, ref Int32 pbInUse, ref TSteamError pError);
		public UInt32 IsAccountNameInUse(string cszUser, ref Int32 pbInUse, ref TSteamError pError) { var call = this.GetFunction<NativeIsAccountNameInUse>(this.Functions.IsAccountNameInUse); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszUser ) ), ref pbInUse, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppIds(IntPtr thisobj, UInt32[] puIds, UInt32 uMaxIds, ref TSteamError pError);
		public Int32 GetAppIds( UInt32[] puIds, UInt32 uMaxIds, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppIds>(this.Functions.GetAppIds); return call(this.ObjectAddress, puIds, uMaxIds, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionStats(IntPtr thisobj, ref TSteamSubscriptionStats pSubscriptionStats, ref TSteamError pError);
		public Int32 GetSubscriptionStats(ref TSteamSubscriptionStats pSubscriptionStats, ref TSteamError pError) { var call = this.GetFunction<NativeGetSubscriptionStats>(this.Functions.GetSubscriptionStats); return call(this.ObjectAddress, ref pSubscriptionStats, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRefreshAccountInfo(IntPtr thisobj, Int32 arg1, ref TSteamError pError);
		public UInt32 RefreshAccountInfo(Int32 arg1, ref TSteamError pError) { var call = this.GetFunction<NativeRefreshAccountInfo>(this.Functions.RefreshAccountInfo); return call(this.ObjectAddress, arg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSubscribe(IntPtr thisobj, UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSteamError pError);
		public UInt32 Subscribe(UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSteamError pError) { var call = this.GetFunction<NativeSubscribe>(this.Functions.Subscribe); return call(this.ObjectAddress, uSubscriptionId, ref pSubscriptionBillingInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUnsubscribe(IntPtr thisobj, UInt32 uSubscriptionId, ref TSteamError pError);
		public UInt32 Unsubscribe(UInt32 uSubscriptionId, ref TSteamError pError) { var call = this.GetFunction<NativeUnsubscribe>(this.Functions.Unsubscribe); return call(this.ObjectAddress, uSubscriptionId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionReceipt(IntPtr thisobj, UInt32 arg1, ref TSteamSubscriptionReceipt pSteamSubscriptionReceipt, ref TSteamError pError);
		public Int32 GetSubscriptionReceipt(UInt32 arg1, ref TSteamSubscriptionReceipt pSteamSubscriptionReceipt, ref TSteamError pError) { var call = this.GetFunction<NativeGetSubscriptionReceipt>(this.Functions.GetSubscriptionReceipt); return call(this.ObjectAddress, arg1, ref pSteamSubscriptionReceipt, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAccountStatus(IntPtr thisobj, ref UInt32 puArg1, ref TSteamError pError);
		public Int32 GetAccountStatus(ref UInt32 puArg1, ref TSteamError pError) { var call = this.GetFunction<NativeGetAccountStatus>(this.Functions.GetAccountStatus); return call(this.ObjectAddress, ref puArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSetUser(IntPtr thisobj, string cszUser, ref Int32 pbUserSet, ref TSteamError pError);
		public UInt32 SetUser(string cszUser, ref Int32 pbUserSet, ref TSteamError pError) { var call = this.GetFunction<NativeSetUser>(this.Functions.SetUser); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszUser ) ), ref pbUserSet, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetUser(IntPtr thisobj, string szUser, UInt32 uBufSize, ref UInt32 puUserChars, ref TSteamGlobalUserID pSteamGlobalUserID, ref TSteamError pError);
		public Int32 GetUser(string szUser, UInt32 uBufSize, ref UInt32 puUserChars, ref TSteamGlobalUserID pSteamGlobalUserID, ref TSteamError pError) { var call = this.GetFunction<NativeGetUser>(this.Functions.GetUser); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szUser ) ), uBufSize, ref puUserChars, ref pSteamGlobalUserID, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLogin(IntPtr thisobj, string cszUser, string cszPassphrase, Int32 bIsSecureComputer, ref TSteamError pError);
		public UInt32 Login(string cszUser, string cszPassphrase, Int32 bIsSecureComputer, ref TSteamError pError) { var call = this.GetFunction<NativeLogin>(this.Functions.Login); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszUser ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPassphrase ) ), bIsSecureComputer, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeAckSubscriptionReceipt(IntPtr thisobj, UInt32 uArg1, ref TSteamError pError);
		public UInt32 AckSubscriptionReceipt(UInt32 uArg1, ref TSteamError pError) { var call = this.GetFunction<NativeAckSubscriptionReceipt>(this.Functions.AckSubscriptionReceipt); return call(this.ObjectAddress, uArg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsAppSubscribed(IntPtr thisobj, UInt32 uAppId, ref Int32 pbIsAppSubscribed, ref Int32 pReserved, ref TSteamError pError);
		public Int32 IsAppSubscribed(UInt32 uAppId, ref Int32 pbIsAppSubscribed, ref Int32 pReserved, ref TSteamError pError) { var call = this.GetFunction<NativeIsAppSubscribed>(this.Functions.IsAppSubscribed); return call(this.ObjectAddress, uAppId, ref pbIsAppSubscribed, ref pReserved, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionIds(IntPtr thisobj, ref UInt32 puIds, UInt32 uMaxIds, ref TSteamError pError);
		public Int32 GetSubscriptionIds(ref UInt32 puIds, UInt32 uMaxIds, ref TSteamError pError) { var call = this.GetFunction<NativeGetSubscriptionIds>(this.Functions.GetSubscriptionIds); return call(this.ObjectAddress, ref puIds, uMaxIds, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateSubscription(IntPtr thisobj, UInt32 uSubscriptionId, ref TSteamSubscription pSubscription, ref TSteamError pError);
		public Int32 EnumerateSubscription(UInt32 uSubscriptionId, ref TSteamSubscription pSubscription, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateSubscription>(this.Functions.EnumerateSubscription); return call(this.ObjectAddress, uSubscriptionId, ref pSubscription, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateSubscriptionDiscount(IntPtr thisobj, UInt32 uSubscriptionId, UInt32 uDiscountIdx, ref TSteamSubscriptionDiscount pSteamSubscriptionDiscount, ref TSteamError pError);
		public Int32 EnumerateSubscriptionDiscount(UInt32 uSubscriptionId, UInt32 uDiscountIdx, ref TSteamSubscriptionDiscount pSteamSubscriptionDiscount, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateSubscriptionDiscount>(this.Functions.EnumerateSubscriptionDiscount); return call(this.ObjectAddress, uSubscriptionId, uDiscountIdx, ref pSteamSubscriptionDiscount, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateSubscriptionDiscountQualifier(IntPtr thisobj, UInt32 uSubscriptionId, UInt32 uDiscountIdx, UInt32 uQualifierIdx, ref TSteamDiscountQualifier pSteamDiscountQualifier, ref TSteamError pError);
		public Int32 EnumerateSubscriptionDiscountQualifier(UInt32 uSubscriptionId, UInt32 uDiscountIdx, UInt32 uQualifierIdx, ref TSteamDiscountQualifier pSteamDiscountQualifier, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateSubscriptionDiscountQualifier>(this.Functions.EnumerateSubscriptionDiscountQualifier); return call(this.ObjectAddress, uSubscriptionId, uDiscountIdx, uQualifierIdx, ref pSteamDiscountQualifier, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateApp(IntPtr thisobj, UInt32 uAppId, ref TSteamApp pApp, ref TSteamError pError);
		public Int32 EnumerateApp(UInt32 uAppId, ref TSteamApp pApp, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateApp>(this.Functions.EnumerateApp); return call(this.ObjectAddress, uAppId, ref pApp, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppLaunchOption(IntPtr thisobj, UInt32 uAppId, UInt32 uLaunchOptionIndex, ref TSteamAppLaunchOption pLaunchOption, ref TSteamError pError);
		public Int32 EnumerateAppLaunchOption(UInt32 uAppId, UInt32 uLaunchOptionIndex, ref TSteamAppLaunchOption pLaunchOption, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateAppLaunchOption>(this.Functions.EnumerateAppLaunchOption); return call(this.ObjectAddress, uAppId, uLaunchOptionIndex, ref pLaunchOption, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeDeleteAccount(IntPtr thisobj, ref TSteamError pError);
		public UInt32 DeleteAccount(ref TSteamError pError) { var call = this.GetFunction<NativeDeleteAccount>(this.Functions.DeleteAccount); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppIcon(IntPtr thisobj, UInt32 uAppId, UInt32 uIconIndex, byte[] pIconData, UInt32 uIconDataBufSize, ref UInt32 puSizeOfIconData, ref TSteamError pError);
		public Int32 EnumerateAppIcon(UInt32 uAppId, UInt32 uIconIndex, byte[] pIconData, UInt32 uIconDataBufSize, ref UInt32 puSizeOfIconData, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateAppIcon>(this.Functions.EnumerateAppIcon); return call(this.ObjectAddress, uAppId, uIconIndex, pIconData, uIconDataBufSize, ref puSizeOfIconData, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLaunchApp(IntPtr thisobj, UInt32 uAppId, UInt32 uLaunchOption, string cszArgs, ref TSteamError pError);
		public UInt32 LaunchApp(UInt32 uAppId, UInt32 uLaunchOption, string cszArgs, ref TSteamError pError) { var call = this.GetFunction<NativeLaunchApp>(this.Functions.LaunchApp); return call(this.ObjectAddress, uAppId, uLaunchOption, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArgs ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCacheFilePath(IntPtr thisobj, UInt32 uAppId, string szFilePath, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSteamError pError);
		public Int32 GetCacheFilePath(UInt32 uAppId, string szFilePath, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSteamError pError) { var call = this.GetFunction<NativeGetCacheFilePath>(this.Functions.GetCacheFilePath); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szFilePath ) ), uBufferLength, ref puRecievedLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppVersion(IntPtr thisobj, UInt32 uAppId, UInt32 uVersionIndex, ref TSteamAppVersion pAppVersion, ref TSteamError pError);
		public Int32 EnumerateAppVersion(UInt32 uAppId, UInt32 uVersionIndex, ref TSteamAppVersion pAppVersion, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateAppVersion>(this.Functions.EnumerateAppVersion); return call(this.ObjectAddress, uAppId, uVersionIndex, ref pAppVersion, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeEnumerateAppDependency(IntPtr thisobj, UInt32 uAppId, UInt32 uDependency, ref TSteamAppDependencyInfo pDependencyInfo, ref TSteamError pError);
		public Int32 EnumerateAppDependency(UInt32 uAppId, UInt32 uDependency, ref TSteamAppDependencyInfo pDependencyInfo, ref TSteamError pError) { var call = this.GetFunction<NativeEnumerateAppDependency>(this.Functions.EnumerateAppDependency); return call(this.ObjectAddress, uAppId, uDependency, ref pDependencyInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeStartLoadingCache(IntPtr thisobj, UInt32 uAppId, ref TSteamError pError);
		public UInt32 StartLoadingCache(UInt32 uAppId, ref TSteamError pError) { var call = this.GetFunction<NativeStartLoadingCache>(this.Functions.StartLoadingCache); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInsertAppDependency(IntPtr thisobj, UInt32 uAppId, UInt32 uFileSystemIndex, ref TSteamAppDependencyInfo pDependencyInfo, ref TSteamError pError);
		public Int32 InsertAppDependency(UInt32 uAppId, UInt32 uFileSystemIndex, ref TSteamAppDependencyInfo pDependencyInfo, ref TSteamError pError) { var call = this.GetFunction<NativeInsertAppDependency>(this.Functions.InsertAppDependency); return call(this.ObjectAddress, uAppId, uFileSystemIndex, ref pDependencyInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRemoveAppDependency(IntPtr thisobj, UInt32 uAppId, UInt32 uFileSystemIndex, ref TSteamError pError);
		public Int32 RemoveAppDependency(UInt32 uAppId, UInt32 uFileSystemIndex, ref TSteamError pError) { var call = this.GetFunction<NativeRemoveAppDependency>(this.Functions.RemoveAppDependency); return call(this.ObjectAddress, uAppId, uFileSystemIndex, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFindApp(IntPtr thisobj, string cszArg1, ref UInt32 arg2, ref TSteamError pError);
		public Int32 FindApp(string cszArg1, ref UInt32 arg2, ref TSteamError pError) { var call = this.GetFunction<NativeFindApp>(this.Functions.FindApp); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), ref arg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppDependencies(IntPtr thisobj, UInt32 uAppId, UInt32[] puDependecies, UInt32 uBufferLength, ref TSteamError pError);
		public Int32 GetAppDependencies(UInt32 uAppId, UInt32[] puDependecies, UInt32 uBufferLength, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppDependencies>(this.Functions.GetAppDependencies); return call(this.ObjectAddress, uAppId, puDependecies, uBufferLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsSubscribed(IntPtr thisobj, UInt32 uSubscriptionId, ref Int32 pbIsSubscribed, ref Int32 pReserved, ref TSteamError pError);
		public Int32 IsSubscribed(UInt32 uSubscriptionId, ref Int32 pbIsSubscribed, ref Int32 pReserved, ref TSteamError pError) { var call = this.GetFunction<NativeIsSubscribed>(this.Functions.IsSubscribed); return call(this.ObjectAddress, uSubscriptionId, ref pbIsSubscribed, ref pReserved, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppUserDefinedInfo(IntPtr thisobj, UInt32 uAppId, string cszPropertyName, string szPropertyValue, UInt32 uBufSize, ref UInt32 puPropertyValueLength, ref TSteamError pError);
		public Int32 GetAppUserDefinedInfo(UInt32 uAppId, string cszPropertyName, string szPropertyValue, UInt32 uBufSize, ref UInt32 puPropertyValueLength, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppUserDefinedInfo>(this.Functions.GetAppUserDefinedInfo); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPropertyName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( szPropertyValue ) ), uBufSize, ref puPropertyValueLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeWaitForAppReadyToLaunch(IntPtr thisobj, UInt32 uAppId, ref TSteamError pError);
		public UInt32 WaitForAppReadyToLaunch(UInt32 uAppId, ref TSteamError pError) { var call = this.GetFunction<NativeWaitForAppReadyToLaunch>(this.Functions.WaitForAppReadyToLaunch); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsCacheLoadingEnabled(IntPtr thisobj, UInt32 uAppId, ref Int32 pbIsLoading, ref TSteamError pError);
		public Int32 IsCacheLoadingEnabled(UInt32 uAppId, ref Int32 pbIsLoading, ref TSteamError pError) { var call = this.GetFunction<NativeIsCacheLoadingEnabled>(this.Functions.IsCacheLoadingEnabled); return call(this.ObjectAddress, uAppId, ref pbIsLoading, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeStopLoadingCache(IntPtr thisobj, UInt32 uAppId, ref TSteamError pError);
		public UInt32 StopLoadingCache(UInt32 uAppId, ref TSteamError pError) { var call = this.GetFunction<NativeStopLoadingCache>(this.Functions.StopLoadingCache); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ESteamError NativeGetEncryptedUserIDTicket(IntPtr thisobj, byte[] pEncryptionKeyReceivedFromAppServer, UInt32 uEncryptionKeyLength, byte[] pOutputBuffer, UInt32 uSizeOfOutputBuffer, ref UInt32 pReceiveSizeOfEncryptedTicket, ref TSteamError pError);
		public ESteamError GetEncryptedUserIDTicket(byte[] pEncryptionKeyReceivedFromAppServer, UInt32 uEncryptionKeyLength, byte[] pOutputBuffer, UInt32 uSizeOfOutputBuffer, ref UInt32 pReceiveSizeOfEncryptedTicket, ref TSteamError pError) { var call = this.GetFunction<NativeGetEncryptedUserIDTicket>(this.Functions.GetEncryptedUserIDTicket); return call(this.ObjectAddress, pEncryptionKeyReceivedFromAppServer, uEncryptionKeyLength, pOutputBuffer, uSizeOfOutputBuffer, ref pReceiveSizeOfEncryptedTicket, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeFlushCache(IntPtr thisobj, UInt32 uAppId, ref TSteamError pError);
		public UInt32 FlushCache(UInt32 uAppId, ref TSteamError pError) { var call = this.GetFunction<NativeFlushCache>(this.Functions.FlushCache); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRepairOrDecryptCaches(IntPtr thisobj, UInt32 uAppId, Int32 iArg2, ref TSteamError pError);
		public UInt32 RepairOrDecryptCaches(UInt32 uAppId, Int32 iArg2, ref TSteamError pError) { var call = this.GetFunction<NativeRepairOrDecryptCaches>(this.Functions.RepairOrDecryptCaches); return call(this.ObjectAddress, uAppId, iArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeLoadCacheFromDir(IntPtr thisobj, UInt32 uAppId, string cszPath, ref TSteamError pError);
		public UInt32 LoadCacheFromDir(UInt32 uAppId, string cszPath, ref TSteamError pError) { var call = this.GetFunction<NativeLoadCacheFromDir>(this.Functions.LoadCacheFromDir); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPath ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCacheDefaultDirectory(IntPtr thisobj, string szPath, ref TSteamError pError);
		public Int32 GetCacheDefaultDirectory(string szPath, ref TSteamError pError) { var call = this.GetFunction<NativeGetCacheDefaultDirectory>(this.Functions.GetCacheDefaultDirectory); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szPath ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetCacheDefaultDirectory(IntPtr thisobj, string cszPath, ref TSteamError pError);
		public Int32 SetCacheDefaultDirectory(string cszPath, ref TSteamError pError) { var call = this.GetFunction<NativeSetCacheDefaultDirectory>(this.Functions.SetCacheDefaultDirectory); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszPath ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppDir(IntPtr thisobj, UInt32 uAppId, string szAppDir, ref TSteamError pError);
		public Int32 GetAppDir(UInt32 uAppId, string szAppDir, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppDir>(this.Functions.GetAppDir); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szAppDir ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeMoveApp(IntPtr thisobj, UInt32 uAppId, string szPath, ref TSteamError pError);
		public UInt32 MoveApp(UInt32 uAppId, string szPath, ref TSteamError pError) { var call = this.GetFunction<NativeMoveApp>(this.Functions.MoveApp); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szPath ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppCacheSize(IntPtr thisobj, UInt32 uAppId, ref UInt32 puCacheSizeInMb, ref TSteamError pError);
		public UInt32 GetAppCacheSize(UInt32 uAppId, ref UInt32 puCacheSizeInMb, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppCacheSize>(this.Functions.GetAppCacheSize); return call(this.ObjectAddress, uAppId, ref puCacheSizeInMb, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSetAppCacheSize(IntPtr thisobj, UInt32 uAppId, UInt32 uCacheSizeInMb, ref TSteamError pError);
		public UInt32 SetAppCacheSize(UInt32 uAppId, UInt32 uCacheSizeInMb, ref TSteamError pError) { var call = this.GetFunction<NativeSetAppCacheSize>(this.Functions.SetAppCacheSize); return call(this.ObjectAddress, uAppId, uCacheSizeInMb, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSetAppVersion(IntPtr thisobj, UInt32 uAppId, UInt32 uAppVersionId, ref TSteamError pError);
		public UInt32 SetAppVersion(UInt32 uAppId, UInt32 uAppVersionId, ref TSteamError pError) { var call = this.GetFunction<NativeSetAppVersion>(this.Functions.SetAppVersion); return call(this.ObjectAddress, uAppId, uAppVersionId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUninstall(IntPtr thisobj, ref TSteamError pError);
		public UInt32 Uninstall(ref TSteamError pError) { var call = this.GetFunction<NativeUninstall>(this.Functions.Uninstall); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetNotificationCallback(IntPtr thisobj, ref IntPtr pCallbackFunction, ref TSteamError pError);
		public Int32 SetNotificationCallback(ref IntPtr pCallbackFunction, ref TSteamError pError) { var call = this.GetFunction<NativeSetNotificationCallback>(this.Functions.SetNotificationCallback); return call(this.ObjectAddress, ref pCallbackFunction, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeChangeForgottenPassword(IntPtr thisobj, string cszArg1, string cszArg2, string cszArg3, string cszArg4, ref Int32 piArg5, ref TSteamError pError);
		public UInt32 ChangeForgottenPassword(string cszArg1, string cszArg2, string cszArg3, string cszArg4, ref Int32 piArg5, ref TSteamError pError) { var call = this.GetFunction<NativeChangeForgottenPassword>(this.Functions.ChangeForgottenPassword); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg2 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg3 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg4 ) ), ref piArg5, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestForgottenPasswordEmail(IntPtr thisobj, string cszArg1, string szArg2, ref TSteamError pError);
		public UInt32 RequestForgottenPasswordEmail(string cszArg1, string szArg2, ref TSteamError pError) { var call = this.GetFunction<NativeRequestForgottenPasswordEmail>(this.Functions.RequestForgottenPasswordEmail); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( szArg2 ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestAccountsByEmailAddressEmail(IntPtr thisobj, string cszArg1, ref TSteamError pError);
		public UInt32 RequestAccountsByEmailAddressEmail(string cszArg1, ref TSteamError pError) { var call = this.GetFunction<NativeRequestAccountsByEmailAddressEmail>(this.Functions.RequestAccountsByEmailAddressEmail); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeRequestAccountsByCdKeyEmail(IntPtr thisobj, string cszArg1, ref TSteamError pError);
		public UInt32 RequestAccountsByCdKeyEmail(string cszArg1, ref TSteamError pError) { var call = this.GetFunction<NativeRequestAccountsByCdKeyEmail>(this.Functions.RequestAccountsByCdKeyEmail); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumAccountsWithEmailAddress(IntPtr thisobj, string cszArg1, ref UInt32 puArg2, ref TSteamError pError);
		public UInt32 GetNumAccountsWithEmailAddress(string cszArg1, ref UInt32 puArg2, ref TSteamError pError) { var call = this.GetFunction<NativeGetNumAccountsWithEmailAddress>(this.Functions.GetNumAccountsWithEmailAddress); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg1 ) ), ref puArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUpdateAccountBillingInfo(IntPtr thisobj, ref TSteamPaymentCardInfo pPaymentCardInfo, ref TSteamError pError);
		public UInt32 UpdateAccountBillingInfo(ref TSteamPaymentCardInfo pPaymentCardInfo, ref TSteamError pError) { var call = this.GetFunction<NativeUpdateAccountBillingInfo>(this.Functions.UpdateAccountBillingInfo); return call(this.ObjectAddress, ref pPaymentCardInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUpdateSubscriptionBillingInfo(IntPtr thisobj, UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSteamError pError);
		public UInt32 UpdateSubscriptionBillingInfo(UInt32 uSubscriptionId, ref TSteamSubscriptionBillingInfo pSubscriptionBillingInfo, ref TSteamError pError) { var call = this.GetFunction<NativeUpdateSubscriptionBillingInfo>(this.Functions.UpdateSubscriptionBillingInfo); return call(this.ObjectAddress, uSubscriptionId, ref pSubscriptionBillingInfo, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSponsorUrl(IntPtr thisobj, UInt32 uAppId, string szUrl, UInt32 uBufSize, ref UInt32 pUrlChars, ref TSteamError pError);
		public Int32 GetSponsorUrl(UInt32 uAppId, string szUrl, UInt32 uBufSize, ref UInt32 pUrlChars, ref TSteamError pError) { var call = this.GetFunction<NativeGetSponsorUrl>(this.Functions.GetSponsorUrl); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szUrl ) ), uBufSize, ref pUrlChars, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetContentServerInfo(IntPtr thisobj, UInt32 uArg1, ref UInt32 puArg2, ref UInt32 puArg3, ref TSteamError pError);
		public Int32 GetContentServerInfo(UInt32 uArg1, ref UInt32 puArg2, ref UInt32 puArg3, ref TSteamError pError) { var call = this.GetFunction<NativeGetContentServerInfo>(this.Functions.GetContentServerInfo); return call(this.ObjectAddress, uArg1, ref puArg2, ref puArg3, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppUpdateStats(IntPtr thisobj, UInt32 uAppId, ESteamAppUpdateStatsQueryType eSteamAppUpdateStatsQueryType, ref TSteamUpdateStats pUpdateStats, ref TSteamError pError);
		public UInt32 GetAppUpdateStats(UInt32 uAppId, ESteamAppUpdateStatsQueryType eSteamAppUpdateStatsQueryType, ref TSteamUpdateStats pUpdateStats, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppUpdateStats>(this.Functions.GetAppUpdateStats); return call(this.ObjectAddress, uAppId, eSteamAppUpdateStatsQueryType, ref pUpdateStats, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetTotalUpdateStats(IntPtr thisobj, ref TSteamUpdateStats arg1, ref TSteamError pError);
		public Int32 GetTotalUpdateStats(ref TSteamUpdateStats arg1, ref TSteamError pError) { var call = this.GetFunction<NativeGetTotalUpdateStats>(this.Functions.GetTotalUpdateStats); return call(this.ObjectAddress, ref arg1, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateCachePreloaders(IntPtr thisobj, ref TSteamError pError);
		public UInt32 CreateCachePreloaders(ref TSteamError pError) { var call = this.GetFunction<NativeCreateCachePreloaders>(this.Functions.CreateCachePreloaders); return call(this.ObjectAddress, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeWin32SetMiniDumpComment(IntPtr thisobj, string cszComment);
		public void Win32SetMiniDumpComment(string cszComment) { var call = this.GetFunction<NativeWin32SetMiniDumpComment>(this.Functions.Win32SetMiniDumpComment); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszComment ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeWin32SetMiniDumpSourceControlId(IntPtr thisobj, UInt32 uSourceControlId);
		public void Win32SetMiniDumpSourceControlId(UInt32 uSourceControlId) { var call = this.GetFunction<NativeWin32SetMiniDumpSourceControlId>(this.Functions.Win32SetMiniDumpSourceControlId); call(this.ObjectAddress, uSourceControlId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeWin32SetMiniDumpEnableFullMemory(IntPtr thisobj);
		public void Win32SetMiniDumpEnableFullMemory() { var call = this.GetFunction<NativeWin32SetMiniDumpEnableFullMemory>(this.Functions.Win32SetMiniDumpEnableFullMemory); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeWin32WriteMiniDump(IntPtr thisobj, string arg1, string arg2, string arg3, string arg4, UInt32 arg5);
		public void Win32WriteMiniDump(string arg1, string arg2, string arg3, string arg4, UInt32 arg5) { var call = this.GetFunction<NativeWin32WriteMiniDump>(this.Functions.Win32WriteMiniDump); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg1 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg2 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg3 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg4 ) ), arg5); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCurrentAppId(IntPtr thisobj, ref UInt32 puAppId, ref TSteamError pError);
		public Int32 GetCurrentAppId(ref UInt32 puAppId, ref TSteamError pError) { var call = this.GetFunction<NativeGetCurrentAppId>(this.Functions.GetCurrentAppId); return call(this.ObjectAddress, ref puAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppPurchaseCountry(IntPtr thisobj, UInt32 uAppId, string szCountryCode, UInt32 uBufferLength, ref Int32 puRecievedLength, ref TSteamError pError);
		public Int32 GetAppPurchaseCountry(UInt32 uAppId, string szCountryCode, UInt32 uBufferLength, ref Int32 puRecievedLength, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppPurchaseCountry>(this.Functions.GetAppPurchaseCountry); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szCountryCode ) ), uBufferLength, ref puRecievedLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLocalClientVersion(IntPtr thisobj, ref UInt32 puArg1, ref UInt32 puArg2, ref TSteamError pError);
		public Int32 GetLocalClientVersion(ref UInt32 puArg1, ref UInt32 puArg2, ref TSteamError pError) { var call = this.GetFunction<NativeGetLocalClientVersion>(this.Functions.GetLocalClientVersion); return call(this.ObjectAddress, ref puArg1, ref puArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsFileNeededByCache(IntPtr thisobj, UInt32 uAppId, string cszFileName, UInt32 uArg3, ref TSteamError pError);
		public Int32 IsFileNeededByCache(UInt32 uAppId, string cszFileName, UInt32 uArg3, ref TSteamError pError) { var call = this.GetFunction<NativeIsFileNeededByCache>(this.Functions.IsFileNeededByCache); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszFileName ) ), uArg3, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeLoadFileToCache(IntPtr thisobj, UInt32 uArg1, string cszArg2, byte[] pcvArg3, UInt32 uArg4, UInt32 uArg5, ref TSteamError pError);
		public Int32 LoadFileToCache(UInt32 uArg1, string cszArg2, byte[] pcvArg3, UInt32 uArg4, UInt32 uArg5, ref TSteamError pError) { var call = this.GetFunction<NativeLoadFileToCache>(this.Functions.LoadFileToCache); return call(this.ObjectAddress, uArg1, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszArg2 ) ), pcvArg3, uArg4, uArg5, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCacheDecryptionKey(IntPtr thisobj, UInt32 uAppId, string szCacheDecryptionKey, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSteamError pError);
		public Int32 GetCacheDecryptionKey(UInt32 uAppId, string szCacheDecryptionKey, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSteamError pError) { var call = this.GetFunction<NativeGetCacheDecryptionKey>(this.Functions.GetCacheDecryptionKey); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szCacheDecryptionKey ) ), uBufferLength, ref puRecievedLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionExtendedInfo(IntPtr thisobj, UInt32 uSubscriptionId, string cszKeyName, string szKeyValue, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSteamError pError);
		public Int32 GetSubscriptionExtendedInfo(UInt32 uSubscriptionId, string cszKeyName, string szKeyValue, UInt32 uBufferLength, ref UInt32 puRecievedLength, ref TSteamError pError) { var call = this.GetFunction<NativeGetSubscriptionExtendedInfo>(this.Functions.GetSubscriptionExtendedInfo); return call(this.ObjectAddress, uSubscriptionId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszKeyName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( szKeyValue ) ), uBufferLength, ref puRecievedLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSubscriptionPurchaseCountry(IntPtr thisobj, UInt32 uSubscriptionId, string szCountry, UInt32 arg3, ref Int32 piRecievedLength, ref TSteamError pError);
		public Int32 GetSubscriptionPurchaseCountry(UInt32 uSubscriptionId, string szCountry, UInt32 arg3, ref Int32 piRecievedLength, ref TSteamError pError) { var call = this.GetFunction<NativeGetSubscriptionPurchaseCountry>(this.Functions.GetSubscriptionPurchaseCountry); return call(this.ObjectAddress, uSubscriptionId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szCountry ) ), arg3, ref piRecievedLength, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppUserDefinedRecord(IntPtr thisobj, UInt32 uAppId, ref byte[] AddEntryToKeyValueFunc, byte[] pvCKeyValue, ref TSteamError pError);
		public Int32 GetAppUserDefinedRecord(UInt32 uAppId, ref byte[] AddEntryToKeyValueFunc, byte[] pvCKeyValue, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppUserDefinedRecord>(this.Functions.GetAppUserDefinedRecord); return call(this.ObjectAddress, uAppId, ref AddEntryToKeyValueFunc, pvCKeyValue, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFindServersNumServers(IntPtr thisobj, ESteamServerType eSteamServerType);
		public Int32 FindServersNumServers(ESteamServerType eSteamServerType) { var call = this.GetFunction<NativeFindServersNumServers>(this.Functions.FindServersNumServers); return call(this.ObjectAddress, eSteamServerType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFindServersIterateServer(IntPtr thisobj, ESteamServerType eSteamServerType, UInt32 uIndex, string szServerAddress, Int32 iServerAddressChars);
		public Int32 FindServersIterateServer(ESteamServerType eSteamServerType, UInt32 uIndex, string szServerAddress, Int32 iServerAddressChars) { var call = this.GetFunction<NativeFindServersIterateServer>(this.Functions.FindServersIterateServer); return call(this.ObjectAddress, eSteamServerType, uIndex, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szServerAddress ) ), iServerAddressChars); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeFindServersGetErrorString(IntPtr thisobj);
		public string FindServersGetErrorString() { var call = this.GetFunction<NativeFindServersGetErrorString>(this.Functions.FindServersGetErrorString); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCheckAppOwnership(IntPtr thisobj, UInt32 uAppId, ref Int32 pbOwned, ref TSteamGlobalUserID pSteamGlobalUserID, ref TSteamError pError);
		public Int32 CheckAppOwnership(UInt32 uAppId, ref Int32 pbOwned, ref TSteamGlobalUserID pSteamGlobalUserID, ref TSteamError pError) { var call = this.GetFunction<NativeCheckAppOwnership>(this.Functions.CheckAppOwnership); return call(this.ObjectAddress, uAppId, ref pbOwned, ref pSteamGlobalUserID, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetCachePercentFragmentation(IntPtr thisobj, UInt32 uAppId, ref UInt32 puPercentFragmented, ref TSteamError pError);
		public UInt32 GetCachePercentFragmentation(UInt32 uAppId, ref UInt32 puPercentFragmented, ref TSteamError pError) { var call = this.GetFunction<NativeGetCachePercentFragmentation>(this.Functions.GetCachePercentFragmentation); return call(this.ObjectAddress, uAppId, ref puPercentFragmented, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeDefragCaches(IntPtr thisobj, UInt32 uAppId, ref TSteamError pError);
		public UInt32 DefragCaches(UInt32 uAppId, ref TSteamError pError) { var call = this.GetFunction<NativeDefragCaches>(this.Functions.DefragCaches); return call(this.ObjectAddress, uAppId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsFileNeededByApp(IntPtr thisobj, UInt32 uAppId, string cszFileName, UInt32 uArg1, ref UInt32 puArg2, ref TSteamError pError);
		public Int32 IsFileNeededByApp(UInt32 uAppId, string cszFileName, UInt32 uArg1, ref UInt32 puArg2, ref TSteamError pError) { var call = this.GetFunction<NativeIsFileNeededByApp>(this.Functions.IsFileNeededByApp); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszFileName ) ), uArg1, ref puArg2, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeWaitForAppResources(IntPtr thisobj, UInt32 uAppId, string cszMasterList, ref TSteamError pError);
		public UInt32 WaitForAppResources(UInt32 uAppId, string cszMasterList, ref TSteamError pError) { var call = this.GetFunction<NativeWaitForAppResources>(this.Functions.WaitForAppResources); return call(this.ObjectAddress, uAppId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( cszMasterList ) ), ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeForceCellId(IntPtr thisobj, UInt32 uCellId, ref TSteamError pError);
		public Int32 ForceCellId(UInt32 uCellId, ref TSteamError pError) { var call = this.GetFunction<NativeForceCellId>(this.Functions.ForceCellId); return call(this.ObjectAddress, uCellId, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppDLCStatus(IntPtr thisobj, UInt32 nAppID, UInt32 nDlcId, ref Int32 pbOwned, ref TSteamError pError);
		public Int32 GetAppDLCStatus(UInt32 nAppID, UInt32 nDlcId, ref Int32 pbOwned, ref TSteamError pError) { var call = this.GetFunction<NativeGetAppDLCStatus>(this.Functions.GetAppDLCStatus); return call(this.ObjectAddress, nAppID, nDlcId, ref pbOwned, ref pError); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeStartEngineEx(IntPtr thisobj, ref TSteamError pError, [MarshalAs(UnmanagedType.I1)] bool a1, [MarshalAs(UnmanagedType.I1)] bool a2);
		public Int32 StartEngineEx(ref TSteamError pError, [MarshalAs(UnmanagedType.I1)] bool a1, [MarshalAs(UnmanagedType.I1)] bool a2) { var call = this.GetFunction<NativeStartEngineEx>(this.Functions.StartEngineEx); return call(this.ObjectAddress, ref pError, a1, a2); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUserStats001VTable
	{
		public IntPtr GetNumStats;
		public IntPtr GetStatName;
		public IntPtr GetStatType;
		public IntPtr GetNumAchievements;
		public IntPtr GetAchievementName;
		public IntPtr GetNumGroupAchievements;
		public IntPtr GetGroupAchievementName;
		public IntPtr RequestCurrentStats;
		public IntPtr GetStat;
		public IntPtr GetStat1;
		public IntPtr SetStat;
		public IntPtr SetStat1;
		public IntPtr UpdateAvgRateStat;
		public IntPtr GetAchievement;
		public IntPtr GetGroupAchievement;
		public IntPtr SetAchievement;
		public IntPtr SetGroupAchievement;
		public IntPtr StoreStats;
		public IntPtr ClearAchievement;
		public IntPtr ClearGroupAchievement;
		public IntPtr GetAchievementIcon;
		public IntPtr GetAchievementDisplayAttribute;
	}
	
	public class ISteamUserStats001 : NativeWrapper<ISteamUserStats001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumStats(IntPtr thisobj, UInt64 nGameID);
		public UInt32 GetNumStats(UInt64 nGameID) { var call = this.GetFunction<NativeGetNumStats>(this.Functions.GetNumStats); return call(this.ObjectAddress, nGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetStatName(IntPtr thisobj, UInt64 nGameID, UInt32 iStat);
		public string GetStatName(UInt64 nGameID, UInt32 iStat) { var call = this.GetFunction<NativeGetStatName>(this.Functions.GetStatName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, nGameID, iStat) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ESteamUserStatType NativeGetStatType(IntPtr thisobj, UInt64 nGameID, string pchName);
		public ESteamUserStatType GetStatType(UInt64 nGameID, string pchName) { var call = this.GetFunction<NativeGetStatType>(this.Functions.GetStatType); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumAchievements(IntPtr thisobj, UInt64 nGameID);
		public UInt32 GetNumAchievements(UInt64 nGameID) { var call = this.GetFunction<NativeGetNumAchievements>(this.Functions.GetNumAchievements); return call(this.ObjectAddress, nGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetAchievementName(IntPtr thisobj, UInt64 nGameID, UInt32 iAchievement);
		public string GetAchievementName(UInt64 nGameID, UInt32 iAchievement) { var call = this.GetFunction<NativeGetAchievementName>(this.Functions.GetAchievementName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, nGameID, iAchievement) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumGroupAchievements(IntPtr thisobj, UInt64 CGameID);
		public UInt32 GetNumGroupAchievements(UInt64 CGameID) { var call = this.GetFunction<NativeGetNumGroupAchievements>(this.Functions.GetNumGroupAchievements); return call(this.ObjectAddress, CGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetGroupAchievementName(IntPtr thisobj, UInt64 CGameID, UInt32 iAchievement);
		public string GetGroupAchievementName(UInt64 CGameID, UInt32 iAchievement) { var call = this.GetFunction<NativeGetGroupAchievementName>(this.Functions.GetGroupAchievementName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, CGameID, iAchievement) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestCurrentStats(IntPtr thisobj, UInt64 nGameID);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestCurrentStats(UInt64 nGameID) { var call = this.GetFunction<NativeRequestCurrentStats>(this.Functions.RequestCurrentStats); return call(this.ObjectAddress, nGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat(IntPtr thisobj, UInt64 nGameID, string pchName, ref Int32 pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(UInt64 nGameID, string pchName, ref Int32 pData) { var call = this.GetFunction<NativeGetStat>(this.Functions.GetStat); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat1(IntPtr thisobj, UInt64 nGameID, string pchName, ref float pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(UInt64 nGameID, string pchName, ref float pData) { var call = this.GetFunction<NativeGetStat1>(this.Functions.GetStat1); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat(IntPtr thisobj, UInt64 nGameID, string pchName, Int32 nData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(UInt64 nGameID, string pchName, Int32 nData) { var call = this.GetFunction<NativeSetStat>(this.Functions.SetStat); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), nData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat1(IntPtr thisobj, UInt64 nGameID, string pchName, float fData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(UInt64 nGameID, string pchName, float fData) { var call = this.GetFunction<NativeSetStat1>(this.Functions.SetStat1); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), fData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateAvgRateStat(IntPtr thisobj, UInt64 nGameID, string pchName, float arg3, double dSessionLength);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateAvgRateStat(UInt64 nGameID, string pchName, float arg3, double dSessionLength) { var call = this.GetFunction<NativeUpdateAvgRateStat>(this.Functions.UpdateAvgRateStat); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), arg3, dSessionLength); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAchievement(IntPtr thisobj, UInt64 nGameID, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetAchievement(UInt64 nGameID, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved) { var call = this.GetFunction<NativeGetAchievement>(this.Functions.GetAchievement); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pbAchieved); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetGroupAchievement(IntPtr thisobj, UInt64 nGameID, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetGroupAchievement(UInt64 nGameID, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved) { var call = this.GetFunction<NativeGetGroupAchievement>(this.Functions.GetGroupAchievement); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pbAchieved); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetAchievement(IntPtr thisobj, UInt64 nGameID, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetAchievement(UInt64 nGameID, string pchName) { var call = this.GetFunction<NativeSetAchievement>(this.Functions.SetAchievement); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetGroupAchievement(IntPtr thisobj, UInt64 nGameID, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetGroupAchievement(UInt64 nGameID, string pchName) { var call = this.GetFunction<NativeSetGroupAchievement>(this.Functions.SetGroupAchievement); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeStoreStats(IntPtr thisobj, UInt64 nGameID);
		[return: MarshalAs(UnmanagedType.I1)] public bool StoreStats(UInt64 nGameID) { var call = this.GetFunction<NativeStoreStats>(this.Functions.StoreStats); return call(this.ObjectAddress, nGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeClearAchievement(IntPtr thisobj, UInt64 nGameID, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool ClearAchievement(UInt64 nGameID, string pchName) { var call = this.GetFunction<NativeClearAchievement>(this.Functions.ClearAchievement); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeClearGroupAchievement(IntPtr thisobj, UInt64 nGameID, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool ClearGroupAchievement(UInt64 nGameID, string pchName) { var call = this.GetFunction<NativeClearGroupAchievement>(this.Functions.ClearGroupAchievement); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAchievementIcon(IntPtr thisobj, UInt64 nGameID, string pchName);
		public Int32 GetAchievementIcon(UInt64 nGameID, string pchName) { var call = this.GetFunction<NativeGetAchievementIcon>(this.Functions.GetAchievementIcon); return call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetAchievementDisplayAttribute(IntPtr thisobj, UInt64 nGameID, string pchName, string pchKey);
		public string GetAchievementDisplayAttribute(UInt64 nGameID, string pchName, string pchKey) { var call = this.GetFunction<NativeGetAchievementDisplayAttribute>(this.Functions.GetAchievementDisplayAttribute); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, nGameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUserStats004VTable
	{
		public IntPtr RequestCurrentStats;
		public IntPtr GetStat;
		public IntPtr GetStat1;
		public IntPtr SetStat;
		public IntPtr SetStat1;
		public IntPtr UpdateAvgRateStat;
		public IntPtr GetAchievement;
		public IntPtr SetAchievement;
		public IntPtr ClearAchievement;
		public IntPtr StoreStats;
		public IntPtr GetAchievementIcon;
		public IntPtr GetAchievementDisplayAttribute;
		public IntPtr IndicateAchievementProgress;
		public IntPtr RequestUserStats;
		public IntPtr GetUserStat;
		public IntPtr GetUserStat1;
		public IntPtr GetUserAchievement;
		public IntPtr ResetAllStats;
	}
	
	public class ISteamUserStats004 : NativeWrapper<ISteamUserStats004VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestCurrentStats(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestCurrentStats() { var call = this.GetFunction<NativeRequestCurrentStats>(this.Functions.RequestCurrentStats); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat(IntPtr thisobj, string pchName, ref Int32 pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(string pchName, ref Int32 pData) { var call = this.GetFunction<NativeGetStat>(this.Functions.GetStat); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat1(IntPtr thisobj, string pchName, ref float pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(string pchName, ref float pData) { var call = this.GetFunction<NativeGetStat1>(this.Functions.GetStat1); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat(IntPtr thisobj, string pchName, Int32 nData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(string pchName, Int32 nData) { var call = this.GetFunction<NativeSetStat>(this.Functions.SetStat); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), nData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat1(IntPtr thisobj, string pchName, float fData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(string pchName, float fData) { var call = this.GetFunction<NativeSetStat1>(this.Functions.SetStat1); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), fData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateAvgRateStat(IntPtr thisobj, string pchName, float arg2, double dSessionLength);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateAvgRateStat(string pchName, float arg2, double dSessionLength) { var call = this.GetFunction<NativeUpdateAvgRateStat>(this.Functions.UpdateAvgRateStat); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), arg2, dSessionLength); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAchievement(IntPtr thisobj, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetAchievement(string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved) { var call = this.GetFunction<NativeGetAchievement>(this.Functions.GetAchievement); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pbAchieved); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetAchievement(IntPtr thisobj, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetAchievement(string pchName) { var call = this.GetFunction<NativeSetAchievement>(this.Functions.SetAchievement); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeClearAchievement(IntPtr thisobj, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool ClearAchievement(string pchName) { var call = this.GetFunction<NativeClearAchievement>(this.Functions.ClearAchievement); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeStoreStats(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool StoreStats() { var call = this.GetFunction<NativeStoreStats>(this.Functions.StoreStats); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAchievementIcon(IntPtr thisobj, string pchName);
		public Int32 GetAchievementIcon(string pchName) { var call = this.GetFunction<NativeGetAchievementIcon>(this.Functions.GetAchievementIcon); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetAchievementDisplayAttribute(IntPtr thisobj, string pchName, string pchKey);
		public string GetAchievementDisplayAttribute(string pchName, string pchKey) { var call = this.GetFunction<NativeGetAchievementDisplayAttribute>(this.Functions.GetAchievementDisplayAttribute); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIndicateAchievementProgress(IntPtr thisobj, string pchName, UInt32 nCurProgress, UInt32 nMaxProgress);
		[return: MarshalAs(UnmanagedType.I1)] public bool IndicateAchievementProgress(string pchName, UInt32 nCurProgress, UInt32 nMaxProgress) { var call = this.GetFunction<NativeIndicateAchievementProgress>(this.Functions.IndicateAchievementProgress); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), nCurProgress, nMaxProgress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestUserStats(IntPtr thisobj, UInt64 steamIDUser);
		public UInt64 RequestUserStats(UInt64 steamIDUser) { var call = this.GetFunction<NativeRequestUserStats>(this.Functions.RequestUserStats); return call(this.ObjectAddress, steamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserStat(IntPtr thisobj, UInt64 steamIDUser, string pchName, ref Int32 pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserStat(UInt64 steamIDUser, string pchName, ref Int32 pData) { var call = this.GetFunction<NativeGetUserStat>(this.Functions.GetUserStat); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserStat1(IntPtr thisobj, UInt64 steamIDUser, string pchName, ref float pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserStat(UInt64 steamIDUser, string pchName, ref float pData) { var call = this.GetFunction<NativeGetUserStat1>(this.Functions.GetUserStat1); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserAchievement(IntPtr thisobj, UInt64 steamIDUser, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserAchievement(UInt64 steamIDUser, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved) { var call = this.GetFunction<NativeGetUserAchievement>(this.Functions.GetUserAchievement); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pbAchieved); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeResetAllStats(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bAchievementsToo);
		[return: MarshalAs(UnmanagedType.I1)] public bool ResetAllStats([MarshalAs(UnmanagedType.I1)] bool bAchievementsToo) { var call = this.GetFunction<NativeResetAllStats>(this.Functions.ResetAllStats); return call(this.ObjectAddress, bAchievementsToo); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUserStats005VTable
	{
		public IntPtr RequestCurrentStats;
		public IntPtr GetStat;
		public IntPtr GetStat1;
		public IntPtr SetStat;
		public IntPtr SetStat1;
		public IntPtr UpdateAvgRateStat;
		public IntPtr GetAchievement;
		public IntPtr SetAchievement;
		public IntPtr ClearAchievement;
		public IntPtr StoreStats;
		public IntPtr GetAchievementIcon;
		public IntPtr GetAchievementDisplayAttribute;
		public IntPtr IndicateAchievementProgress;
		public IntPtr RequestUserStats;
		public IntPtr GetUserStat;
		public IntPtr GetUserStat1;
		public IntPtr GetUserAchievement;
		public IntPtr ResetAllStats;
		public IntPtr FindOrCreateLeaderboard;
		public IntPtr FindLeaderboard;
		public IntPtr GetLeaderboardName;
		public IntPtr GetLeaderboardEntryCount;
		public IntPtr GetLeaderboardSortMethod;
		public IntPtr GetLeaderboardDisplayType;
		public IntPtr DownloadLeaderboardEntries;
		public IntPtr GetDownloadedLeaderboardEntry;
		public IntPtr UploadLeaderboardScore;
	}
	
	public class ISteamUserStats005 : NativeWrapper<ISteamUserStats005VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestCurrentStats(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestCurrentStats() { var call = this.GetFunction<NativeRequestCurrentStats>(this.Functions.RequestCurrentStats); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat(IntPtr thisobj, string pchName, ref Int32 pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(string pchName, ref Int32 pData) { var call = this.GetFunction<NativeGetStat>(this.Functions.GetStat); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat1(IntPtr thisobj, string pchName, ref float pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(string pchName, ref float pData) { var call = this.GetFunction<NativeGetStat1>(this.Functions.GetStat1); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat(IntPtr thisobj, string pchName, Int32 nData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(string pchName, Int32 nData) { var call = this.GetFunction<NativeSetStat>(this.Functions.SetStat); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), nData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat1(IntPtr thisobj, string pchName, float fData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(string pchName, float fData) { var call = this.GetFunction<NativeSetStat1>(this.Functions.SetStat1); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), fData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateAvgRateStat(IntPtr thisobj, string pchName, float flCountThisSession, double dSessionLength);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateAvgRateStat(string pchName, float flCountThisSession, double dSessionLength) { var call = this.GetFunction<NativeUpdateAvgRateStat>(this.Functions.UpdateAvgRateStat); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), flCountThisSession, dSessionLength); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAchievement(IntPtr thisobj, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetAchievement(string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved) { var call = this.GetFunction<NativeGetAchievement>(this.Functions.GetAchievement); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pbAchieved); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetAchievement(IntPtr thisobj, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetAchievement(string pchName) { var call = this.GetFunction<NativeSetAchievement>(this.Functions.SetAchievement); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeClearAchievement(IntPtr thisobj, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool ClearAchievement(string pchName) { var call = this.GetFunction<NativeClearAchievement>(this.Functions.ClearAchievement); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeStoreStats(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool StoreStats() { var call = this.GetFunction<NativeStoreStats>(this.Functions.StoreStats); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAchievementIcon(IntPtr thisobj, string pchName);
		public Int32 GetAchievementIcon(string pchName) { var call = this.GetFunction<NativeGetAchievementIcon>(this.Functions.GetAchievementIcon); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetAchievementDisplayAttribute(IntPtr thisobj, string pchName, string pchKey);
		public string GetAchievementDisplayAttribute(string pchName, string pchKey) { var call = this.GetFunction<NativeGetAchievementDisplayAttribute>(this.Functions.GetAchievementDisplayAttribute); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIndicateAchievementProgress(IntPtr thisobj, string pchName, UInt32 nCurProgress, UInt32 nMaxProgress);
		[return: MarshalAs(UnmanagedType.I1)] public bool IndicateAchievementProgress(string pchName, UInt32 nCurProgress, UInt32 nMaxProgress) { var call = this.GetFunction<NativeIndicateAchievementProgress>(this.Functions.IndicateAchievementProgress); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), nCurProgress, nMaxProgress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestUserStats(IntPtr thisobj, UInt64 steamIDUser);
		public UInt64 RequestUserStats(UInt64 steamIDUser) { var call = this.GetFunction<NativeRequestUserStats>(this.Functions.RequestUserStats); return call(this.ObjectAddress, steamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserStat(IntPtr thisobj, UInt64 steamIDUser, string pchName, ref Int32 pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserStat(UInt64 steamIDUser, string pchName, ref Int32 pData) { var call = this.GetFunction<NativeGetUserStat>(this.Functions.GetUserStat); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserStat1(IntPtr thisobj, UInt64 steamIDUser, string pchName, ref float pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserStat(UInt64 steamIDUser, string pchName, ref float pData) { var call = this.GetFunction<NativeGetUserStat1>(this.Functions.GetUserStat1); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserAchievement(IntPtr thisobj, UInt64 steamIDUser, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserAchievement(UInt64 steamIDUser, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved) { var call = this.GetFunction<NativeGetUserAchievement>(this.Functions.GetUserAchievement); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pbAchieved); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeResetAllStats(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bAchievementsToo);
		[return: MarshalAs(UnmanagedType.I1)] public bool ResetAllStats([MarshalAs(UnmanagedType.I1)] bool bAchievementsToo) { var call = this.GetFunction<NativeResetAllStats>(this.Functions.ResetAllStats); return call(this.ObjectAddress, bAchievementsToo); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeFindOrCreateLeaderboard(IntPtr thisobj, string pchLeaderboardName, ELeaderboardSortMethod eLeaderboardSortMethod, ELeaderboardDisplayType eLeaderboardDisplayType);
		public UInt64 FindOrCreateLeaderboard(string pchLeaderboardName, ELeaderboardSortMethod eLeaderboardSortMethod, ELeaderboardDisplayType eLeaderboardDisplayType) { var call = this.GetFunction<NativeFindOrCreateLeaderboard>(this.Functions.FindOrCreateLeaderboard); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchLeaderboardName ) ), eLeaderboardSortMethod, eLeaderboardDisplayType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeFindLeaderboard(IntPtr thisobj, string pchLeaderboardName);
		public UInt64 FindLeaderboard(string pchLeaderboardName) { var call = this.GetFunction<NativeFindLeaderboard>(this.Functions.FindLeaderboard); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchLeaderboardName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLeaderboardName(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public string GetLeaderboardName(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardName>(this.Functions.GetLeaderboardName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, hSteamLeaderboard) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLeaderboardEntryCount(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public Int32 GetLeaderboardEntryCount(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardEntryCount>(this.Functions.GetLeaderboardEntryCount); return call(this.ObjectAddress, hSteamLeaderboard); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELeaderboardSortMethod NativeGetLeaderboardSortMethod(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public ELeaderboardSortMethod GetLeaderboardSortMethod(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardSortMethod>(this.Functions.GetLeaderboardSortMethod); return call(this.ObjectAddress, hSteamLeaderboard); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELeaderboardDisplayType NativeGetLeaderboardDisplayType(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public ELeaderboardDisplayType GetLeaderboardDisplayType(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardDisplayType>(this.Functions.GetLeaderboardDisplayType); return call(this.ObjectAddress, hSteamLeaderboard); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeDownloadLeaderboardEntries(IntPtr thisobj, UInt64 hSteamLeaderboard, ELeaderboardDataRequest eLeaderboardDataRequest, Int32 nRangeStart, Int32 nRangeEnd);
		public UInt64 DownloadLeaderboardEntries(UInt64 hSteamLeaderboard, ELeaderboardDataRequest eLeaderboardDataRequest, Int32 nRangeStart, Int32 nRangeEnd) { var call = this.GetFunction<NativeDownloadLeaderboardEntries>(this.Functions.DownloadLeaderboardEntries); return call(this.ObjectAddress, hSteamLeaderboard, eLeaderboardDataRequest, nRangeStart, nRangeEnd); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetDownloadedLeaderboardEntry(IntPtr thisobj, UInt64 hSteamLeaderboardEntries, Int32 index, ref LeaderboardEntry001_t pLeaderboardEntry, ref Int32 pDetails, Int32 cDetailsMax);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetDownloadedLeaderboardEntry(UInt64 hSteamLeaderboardEntries, Int32 index, ref LeaderboardEntry001_t pLeaderboardEntry, ref Int32 pDetails, Int32 cDetailsMax) { var call = this.GetFunction<NativeGetDownloadedLeaderboardEntry>(this.Functions.GetDownloadedLeaderboardEntry); return call(this.ObjectAddress, hSteamLeaderboardEntries, index, ref pLeaderboardEntry, ref pDetails, cDetailsMax); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeUploadLeaderboardScore(IntPtr thisobj, UInt64 hSteamLeaderboard, Int32 nScore, ref Int32 pScoreDetails, Int32 cScoreDetailsCount);
		public UInt64 UploadLeaderboardScore(UInt64 hSteamLeaderboard, Int32 nScore, ref Int32 pScoreDetails, Int32 cScoreDetailsCount) { var call = this.GetFunction<NativeUploadLeaderboardScore>(this.Functions.UploadLeaderboardScore); return call(this.ObjectAddress, hSteamLeaderboard, nScore, ref pScoreDetails, cScoreDetailsCount); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUserStats007VTable
	{
		public IntPtr RequestCurrentStats;
		public IntPtr GetStat;
		public IntPtr GetStat1;
		public IntPtr SetStat;
		public IntPtr SetStat1;
		public IntPtr UpdateAvgRateStat;
		public IntPtr GetAchievement;
		public IntPtr SetAchievement;
		public IntPtr ClearAchievement;
		public IntPtr GetAchievementAndUnlockTime;
		public IntPtr StoreStats;
		public IntPtr GetAchievementIcon;
		public IntPtr GetAchievementDisplayAttribute;
		public IntPtr IndicateAchievementProgress;
		public IntPtr RequestUserStats;
		public IntPtr GetUserStat;
		public IntPtr GetUserStat1;
		public IntPtr GetUserAchievement;
		public IntPtr GetUserAchievementAndUnlockTime;
		public IntPtr ResetAllStats;
		public IntPtr FindOrCreateLeaderboard;
		public IntPtr FindLeaderboard;
		public IntPtr GetLeaderboardName;
		public IntPtr GetLeaderboardEntryCount;
		public IntPtr GetLeaderboardSortMethod;
		public IntPtr GetLeaderboardDisplayType;
		public IntPtr DownloadLeaderboardEntries;
		public IntPtr GetDownloadedLeaderboardEntry;
		public IntPtr UploadLeaderboardScore;
		public IntPtr GetNumberOfCurrentPlayers;
	}
	
	public class ISteamUserStats007 : NativeWrapper<ISteamUserStats007VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestCurrentStats(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestCurrentStats() { var call = this.GetFunction<NativeRequestCurrentStats>(this.Functions.RequestCurrentStats); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat(IntPtr thisobj, string pchName, ref Int32 pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(string pchName, ref Int32 pData) { var call = this.GetFunction<NativeGetStat>(this.Functions.GetStat); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat1(IntPtr thisobj, string pchName, ref float pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(string pchName, ref float pData) { var call = this.GetFunction<NativeGetStat1>(this.Functions.GetStat1); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat(IntPtr thisobj, string pchName, Int32 nData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(string pchName, Int32 nData) { var call = this.GetFunction<NativeSetStat>(this.Functions.SetStat); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), nData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat1(IntPtr thisobj, string pchName, float fData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(string pchName, float fData) { var call = this.GetFunction<NativeSetStat1>(this.Functions.SetStat1); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), fData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateAvgRateStat(IntPtr thisobj, string pchName, float flCountThisSession, double dSessionLength);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateAvgRateStat(string pchName, float flCountThisSession, double dSessionLength) { var call = this.GetFunction<NativeUpdateAvgRateStat>(this.Functions.UpdateAvgRateStat); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), flCountThisSession, dSessionLength); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAchievement(IntPtr thisobj, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetAchievement(string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved) { var call = this.GetFunction<NativeGetAchievement>(this.Functions.GetAchievement); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pbAchieved); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetAchievement(IntPtr thisobj, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetAchievement(string pchName) { var call = this.GetFunction<NativeSetAchievement>(this.Functions.SetAchievement); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeClearAchievement(IntPtr thisobj, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool ClearAchievement(string pchName) { var call = this.GetFunction<NativeClearAchievement>(this.Functions.ClearAchievement); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAchievementAndUnlockTime(IntPtr thisobj, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved, ref UInt32 prtTime);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetAchievementAndUnlockTime(string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved, ref UInt32 prtTime) { var call = this.GetFunction<NativeGetAchievementAndUnlockTime>(this.Functions.GetAchievementAndUnlockTime); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pbAchieved, ref prtTime); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeStoreStats(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool StoreStats() { var call = this.GetFunction<NativeStoreStats>(this.Functions.StoreStats); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAchievementIcon(IntPtr thisobj, string pchName);
		public Int32 GetAchievementIcon(string pchName) { var call = this.GetFunction<NativeGetAchievementIcon>(this.Functions.GetAchievementIcon); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetAchievementDisplayAttribute(IntPtr thisobj, string pchName, string pchKey);
		public string GetAchievementDisplayAttribute(string pchName, string pchKey) { var call = this.GetFunction<NativeGetAchievementDisplayAttribute>(this.Functions.GetAchievementDisplayAttribute); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIndicateAchievementProgress(IntPtr thisobj, string pchName, UInt32 nCurProgress, UInt32 nMaxProgress);
		[return: MarshalAs(UnmanagedType.I1)] public bool IndicateAchievementProgress(string pchName, UInt32 nCurProgress, UInt32 nMaxProgress) { var call = this.GetFunction<NativeIndicateAchievementProgress>(this.Functions.IndicateAchievementProgress); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), nCurProgress, nMaxProgress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestUserStats(IntPtr thisobj, UInt64 steamIDUser);
		public UInt64 RequestUserStats(UInt64 steamIDUser) { var call = this.GetFunction<NativeRequestUserStats>(this.Functions.RequestUserStats); return call(this.ObjectAddress, steamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserStat(IntPtr thisobj, UInt64 steamIDUser, string pchName, ref Int32 pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserStat(UInt64 steamIDUser, string pchName, ref Int32 pData) { var call = this.GetFunction<NativeGetUserStat>(this.Functions.GetUserStat); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserStat1(IntPtr thisobj, UInt64 steamIDUser, string pchName, ref float pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserStat(UInt64 steamIDUser, string pchName, ref float pData) { var call = this.GetFunction<NativeGetUserStat1>(this.Functions.GetUserStat1); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserAchievement(IntPtr thisobj, UInt64 steamIDUser, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserAchievement(UInt64 steamIDUser, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved) { var call = this.GetFunction<NativeGetUserAchievement>(this.Functions.GetUserAchievement); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pbAchieved); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserAchievementAndUnlockTime(IntPtr thisobj, UInt64 steamIDUser, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved, ref UInt32 prtTime);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserAchievementAndUnlockTime(UInt64 steamIDUser, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved, ref UInt32 prtTime) { var call = this.GetFunction<NativeGetUserAchievementAndUnlockTime>(this.Functions.GetUserAchievementAndUnlockTime); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pbAchieved, ref prtTime); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeResetAllStats(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bAchievementsToo);
		[return: MarshalAs(UnmanagedType.I1)] public bool ResetAllStats([MarshalAs(UnmanagedType.I1)] bool bAchievementsToo) { var call = this.GetFunction<NativeResetAllStats>(this.Functions.ResetAllStats); return call(this.ObjectAddress, bAchievementsToo); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeFindOrCreateLeaderboard(IntPtr thisobj, string pchLeaderboardName, ELeaderboardSortMethod eLeaderboardSortMethod, ELeaderboardDisplayType eLeaderboardDisplayType);
		public UInt64 FindOrCreateLeaderboard(string pchLeaderboardName, ELeaderboardSortMethod eLeaderboardSortMethod, ELeaderboardDisplayType eLeaderboardDisplayType) { var call = this.GetFunction<NativeFindOrCreateLeaderboard>(this.Functions.FindOrCreateLeaderboard); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchLeaderboardName ) ), eLeaderboardSortMethod, eLeaderboardDisplayType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeFindLeaderboard(IntPtr thisobj, string pchLeaderboardName);
		public UInt64 FindLeaderboard(string pchLeaderboardName) { var call = this.GetFunction<NativeFindLeaderboard>(this.Functions.FindLeaderboard); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchLeaderboardName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLeaderboardName(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public string GetLeaderboardName(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardName>(this.Functions.GetLeaderboardName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, hSteamLeaderboard) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLeaderboardEntryCount(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public Int32 GetLeaderboardEntryCount(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardEntryCount>(this.Functions.GetLeaderboardEntryCount); return call(this.ObjectAddress, hSteamLeaderboard); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELeaderboardSortMethod NativeGetLeaderboardSortMethod(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public ELeaderboardSortMethod GetLeaderboardSortMethod(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardSortMethod>(this.Functions.GetLeaderboardSortMethod); return call(this.ObjectAddress, hSteamLeaderboard); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELeaderboardDisplayType NativeGetLeaderboardDisplayType(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public ELeaderboardDisplayType GetLeaderboardDisplayType(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardDisplayType>(this.Functions.GetLeaderboardDisplayType); return call(this.ObjectAddress, hSteamLeaderboard); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeDownloadLeaderboardEntries(IntPtr thisobj, UInt64 hSteamLeaderboard, ELeaderboardDataRequest eLeaderboardDataRequest, Int32 nRangeStart, Int32 nRangeEnd);
		public UInt64 DownloadLeaderboardEntries(UInt64 hSteamLeaderboard, ELeaderboardDataRequest eLeaderboardDataRequest, Int32 nRangeStart, Int32 nRangeEnd) { var call = this.GetFunction<NativeDownloadLeaderboardEntries>(this.Functions.DownloadLeaderboardEntries); return call(this.ObjectAddress, hSteamLeaderboard, eLeaderboardDataRequest, nRangeStart, nRangeEnd); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetDownloadedLeaderboardEntry(IntPtr thisobj, UInt64 hSteamLeaderboardEntries, Int32 index, ref LeaderboardEntry001_t pLeaderboardEntry, ref Int32 pDetails, Int32 cDetailsMax);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetDownloadedLeaderboardEntry(UInt64 hSteamLeaderboardEntries, Int32 index, ref LeaderboardEntry001_t pLeaderboardEntry, ref Int32 pDetails, Int32 cDetailsMax) { var call = this.GetFunction<NativeGetDownloadedLeaderboardEntry>(this.Functions.GetDownloadedLeaderboardEntry); return call(this.ObjectAddress, hSteamLeaderboardEntries, index, ref pLeaderboardEntry, ref pDetails, cDetailsMax); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeUploadLeaderboardScore(IntPtr thisobj, UInt64 hSteamLeaderboard, ELeaderboardUploadScoreMethod eLeaderboardUploadScoreMethod, Int32 nScore, ref Int32 pScoreDetails, Int32 cScoreDetailsCount);
		public UInt64 UploadLeaderboardScore(UInt64 hSteamLeaderboard, ELeaderboardUploadScoreMethod eLeaderboardUploadScoreMethod, Int32 nScore, ref Int32 pScoreDetails, Int32 cScoreDetailsCount) { var call = this.GetFunction<NativeUploadLeaderboardScore>(this.Functions.UploadLeaderboardScore); return call(this.ObjectAddress, hSteamLeaderboard, eLeaderboardUploadScoreMethod, nScore, ref pScoreDetails, cScoreDetailsCount); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetNumberOfCurrentPlayers(IntPtr thisobj);
		public UInt64 GetNumberOfCurrentPlayers() { var call = this.GetFunction<NativeGetNumberOfCurrentPlayers>(this.Functions.GetNumberOfCurrentPlayers); return call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUserStats008VTable
	{
		public IntPtr RequestCurrentStats;
		public IntPtr GetStat;
		public IntPtr GetStat1;
		public IntPtr SetStat;
		public IntPtr SetStat1;
		public IntPtr UpdateAvgRateStat;
		public IntPtr GetAchievement;
		public IntPtr SetAchievement;
		public IntPtr ClearAchievement;
		public IntPtr GetAchievementAndUnlockTime;
		public IntPtr StoreStats;
		public IntPtr GetAchievementIcon;
		public IntPtr GetAchievementDisplayAttribute;
		public IntPtr IndicateAchievementProgress;
		public IntPtr RequestUserStats;
		public IntPtr GetUserStat;
		public IntPtr GetUserStat1;
		public IntPtr GetUserAchievement;
		public IntPtr GetUserAchievementAndUnlockTime;
		public IntPtr ResetAllStats;
		public IntPtr FindOrCreateLeaderboard;
		public IntPtr FindLeaderboard;
		public IntPtr GetLeaderboardName;
		public IntPtr GetLeaderboardEntryCount;
		public IntPtr GetLeaderboardSortMethod;
		public IntPtr GetLeaderboardDisplayType;
		public IntPtr DownloadLeaderboardEntries;
		public IntPtr GetDownloadedLeaderboardEntry;
		public IntPtr UploadLeaderboardScore;
		public IntPtr AttachLeaderboardUGC;
		public IntPtr GetNumberOfCurrentPlayers;
	}
	
	public class ISteamUserStats008 : NativeWrapper<ISteamUserStats008VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestCurrentStats(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestCurrentStats() { var call = this.GetFunction<NativeRequestCurrentStats>(this.Functions.RequestCurrentStats); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat(IntPtr thisobj, string pchName, ref Int32 pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(string pchName, ref Int32 pData) { var call = this.GetFunction<NativeGetStat>(this.Functions.GetStat); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat1(IntPtr thisobj, string pchName, ref float pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(string pchName, ref float pData) { var call = this.GetFunction<NativeGetStat1>(this.Functions.GetStat1); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat(IntPtr thisobj, string pchName, Int32 nData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(string pchName, Int32 nData) { var call = this.GetFunction<NativeSetStat>(this.Functions.SetStat); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), nData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat1(IntPtr thisobj, string pchName, float fData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(string pchName, float fData) { var call = this.GetFunction<NativeSetStat1>(this.Functions.SetStat1); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), fData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateAvgRateStat(IntPtr thisobj, string pchName, float flCountThisSession, double dSessionLength);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateAvgRateStat(string pchName, float flCountThisSession, double dSessionLength) { var call = this.GetFunction<NativeUpdateAvgRateStat>(this.Functions.UpdateAvgRateStat); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), flCountThisSession, dSessionLength); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAchievement(IntPtr thisobj, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetAchievement(string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved) { var call = this.GetFunction<NativeGetAchievement>(this.Functions.GetAchievement); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pbAchieved); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetAchievement(IntPtr thisobj, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetAchievement(string pchName) { var call = this.GetFunction<NativeSetAchievement>(this.Functions.SetAchievement); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeClearAchievement(IntPtr thisobj, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool ClearAchievement(string pchName) { var call = this.GetFunction<NativeClearAchievement>(this.Functions.ClearAchievement); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAchievementAndUnlockTime(IntPtr thisobj, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved, ref UInt32 prtTime);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetAchievementAndUnlockTime(string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved, ref UInt32 prtTime) { var call = this.GetFunction<NativeGetAchievementAndUnlockTime>(this.Functions.GetAchievementAndUnlockTime); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pbAchieved, ref prtTime); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeStoreStats(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool StoreStats() { var call = this.GetFunction<NativeStoreStats>(this.Functions.StoreStats); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAchievementIcon(IntPtr thisobj, string pchName);
		public Int32 GetAchievementIcon(string pchName) { var call = this.GetFunction<NativeGetAchievementIcon>(this.Functions.GetAchievementIcon); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetAchievementDisplayAttribute(IntPtr thisobj, string pchName, string pchKey);
		public string GetAchievementDisplayAttribute(string pchName, string pchKey) { var call = this.GetFunction<NativeGetAchievementDisplayAttribute>(this.Functions.GetAchievementDisplayAttribute); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIndicateAchievementProgress(IntPtr thisobj, string pchName, UInt32 nCurProgress, UInt32 nMaxProgress);
		[return: MarshalAs(UnmanagedType.I1)] public bool IndicateAchievementProgress(string pchName, UInt32 nCurProgress, UInt32 nMaxProgress) { var call = this.GetFunction<NativeIndicateAchievementProgress>(this.Functions.IndicateAchievementProgress); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), nCurProgress, nMaxProgress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestUserStats(IntPtr thisobj, UInt64 steamIDUser);
		public UInt64 RequestUserStats(UInt64 steamIDUser) { var call = this.GetFunction<NativeRequestUserStats>(this.Functions.RequestUserStats); return call(this.ObjectAddress, steamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserStat(IntPtr thisobj, UInt64 steamIDUser, string pchName, ref Int32 pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserStat(UInt64 steamIDUser, string pchName, ref Int32 pData) { var call = this.GetFunction<NativeGetUserStat>(this.Functions.GetUserStat); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserStat1(IntPtr thisobj, UInt64 steamIDUser, string pchName, ref float pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserStat(UInt64 steamIDUser, string pchName, ref float pData) { var call = this.GetFunction<NativeGetUserStat1>(this.Functions.GetUserStat1); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserAchievement(IntPtr thisobj, UInt64 steamIDUser, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserAchievement(UInt64 steamIDUser, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved) { var call = this.GetFunction<NativeGetUserAchievement>(this.Functions.GetUserAchievement); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pbAchieved); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserAchievementAndUnlockTime(IntPtr thisobj, UInt64 steamIDUser, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved, ref UInt32 prtTime);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserAchievementAndUnlockTime(UInt64 steamIDUser, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved, ref UInt32 prtTime) { var call = this.GetFunction<NativeGetUserAchievementAndUnlockTime>(this.Functions.GetUserAchievementAndUnlockTime); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pbAchieved, ref prtTime); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeResetAllStats(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bAchievementsToo);
		[return: MarshalAs(UnmanagedType.I1)] public bool ResetAllStats([MarshalAs(UnmanagedType.I1)] bool bAchievementsToo) { var call = this.GetFunction<NativeResetAllStats>(this.Functions.ResetAllStats); return call(this.ObjectAddress, bAchievementsToo); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeFindOrCreateLeaderboard(IntPtr thisobj, string pchLeaderboardName, ELeaderboardSortMethod eLeaderboardSortMethod, ELeaderboardDisplayType eLeaderboardDisplayType);
		public UInt64 FindOrCreateLeaderboard(string pchLeaderboardName, ELeaderboardSortMethod eLeaderboardSortMethod, ELeaderboardDisplayType eLeaderboardDisplayType) { var call = this.GetFunction<NativeFindOrCreateLeaderboard>(this.Functions.FindOrCreateLeaderboard); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchLeaderboardName ) ), eLeaderboardSortMethod, eLeaderboardDisplayType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeFindLeaderboard(IntPtr thisobj, string pchLeaderboardName);
		public UInt64 FindLeaderboard(string pchLeaderboardName) { var call = this.GetFunction<NativeFindLeaderboard>(this.Functions.FindLeaderboard); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchLeaderboardName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLeaderboardName(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public string GetLeaderboardName(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardName>(this.Functions.GetLeaderboardName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, hSteamLeaderboard) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLeaderboardEntryCount(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public Int32 GetLeaderboardEntryCount(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardEntryCount>(this.Functions.GetLeaderboardEntryCount); return call(this.ObjectAddress, hSteamLeaderboard); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELeaderboardSortMethod NativeGetLeaderboardSortMethod(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public ELeaderboardSortMethod GetLeaderboardSortMethod(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardSortMethod>(this.Functions.GetLeaderboardSortMethod); return call(this.ObjectAddress, hSteamLeaderboard); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELeaderboardDisplayType NativeGetLeaderboardDisplayType(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public ELeaderboardDisplayType GetLeaderboardDisplayType(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardDisplayType>(this.Functions.GetLeaderboardDisplayType); return call(this.ObjectAddress, hSteamLeaderboard); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeDownloadLeaderboardEntries(IntPtr thisobj, UInt64 hSteamLeaderboard, ELeaderboardDataRequest eLeaderboardDataRequest, Int32 nRangeStart, Int32 nRangeEnd);
		public UInt64 DownloadLeaderboardEntries(UInt64 hSteamLeaderboard, ELeaderboardDataRequest eLeaderboardDataRequest, Int32 nRangeStart, Int32 nRangeEnd) { var call = this.GetFunction<NativeDownloadLeaderboardEntries>(this.Functions.DownloadLeaderboardEntries); return call(this.ObjectAddress, hSteamLeaderboard, eLeaderboardDataRequest, nRangeStart, nRangeEnd); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetDownloadedLeaderboardEntry(IntPtr thisobj, UInt64 hSteamLeaderboardEntries, Int32 index, ref LeaderboardEntry002_t pLeaderboardEntry, ref Int32 pDetails, Int32 cDetailsMax);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetDownloadedLeaderboardEntry(UInt64 hSteamLeaderboardEntries, Int32 index, ref LeaderboardEntry002_t pLeaderboardEntry, ref Int32 pDetails, Int32 cDetailsMax) { var call = this.GetFunction<NativeGetDownloadedLeaderboardEntry>(this.Functions.GetDownloadedLeaderboardEntry); return call(this.ObjectAddress, hSteamLeaderboardEntries, index, ref pLeaderboardEntry, ref pDetails, cDetailsMax); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeUploadLeaderboardScore(IntPtr thisobj, UInt64 hSteamLeaderboard, ELeaderboardUploadScoreMethod eLeaderboardUploadScoreMethod, Int32 nScore, ref Int32 pScoreDetails, Int32 cScoreDetailsCount);
		public UInt64 UploadLeaderboardScore(UInt64 hSteamLeaderboard, ELeaderboardUploadScoreMethod eLeaderboardUploadScoreMethod, Int32 nScore, ref Int32 pScoreDetails, Int32 cScoreDetailsCount) { var call = this.GetFunction<NativeUploadLeaderboardScore>(this.Functions.UploadLeaderboardScore); return call(this.ObjectAddress, hSteamLeaderboard, eLeaderboardUploadScoreMethod, nScore, ref pScoreDetails, cScoreDetailsCount); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeAttachLeaderboardUGC(IntPtr thisobj, UInt64 hSteamLeaderboard, UInt64 Unk1);
		public UInt64 AttachLeaderboardUGC(UInt64 hSteamLeaderboard, UInt64 Unk1) { var call = this.GetFunction<NativeAttachLeaderboardUGC>(this.Functions.AttachLeaderboardUGC); return call(this.ObjectAddress, hSteamLeaderboard, Unk1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetNumberOfCurrentPlayers(IntPtr thisobj);
		public UInt64 GetNumberOfCurrentPlayers() { var call = this.GetFunction<NativeGetNumberOfCurrentPlayers>(this.Functions.GetNumberOfCurrentPlayers); return call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUserStats009VTable
	{
		public IntPtr RequestCurrentStats;
		public IntPtr GetStat;
		public IntPtr GetStat1;
		public IntPtr SetStat;
		public IntPtr SetStat1;
		public IntPtr UpdateAvgRateStat;
		public IntPtr GetAchievement;
		public IntPtr SetAchievement;
		public IntPtr ClearAchievement;
		public IntPtr GetAchievementAndUnlockTime;
		public IntPtr StoreStats;
		public IntPtr GetAchievementIcon;
		public IntPtr GetAchievementDisplayAttribute;
		public IntPtr IndicateAchievementProgress;
		public IntPtr RequestUserStats;
		public IntPtr GetUserStat;
		public IntPtr GetUserStat1;
		public IntPtr GetUserAchievement;
		public IntPtr GetUserAchievementAndUnlockTime;
		public IntPtr ResetAllStats;
		public IntPtr FindOrCreateLeaderboard;
		public IntPtr FindLeaderboard;
		public IntPtr GetLeaderboardName;
		public IntPtr GetLeaderboardEntryCount;
		public IntPtr GetLeaderboardSortMethod;
		public IntPtr GetLeaderboardDisplayType;
		public IntPtr DownloadLeaderboardEntries;
		public IntPtr DownloadLeaderboardEntriesForUsers;
		public IntPtr GetDownloadedLeaderboardEntry;
		public IntPtr UploadLeaderboardScore;
		public IntPtr AttachLeaderboardUGC;
		public IntPtr GetNumberOfCurrentPlayers;
	}
	
	public class ISteamUserStats009 : NativeWrapper<ISteamUserStats009VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestCurrentStats(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestCurrentStats() { var call = this.GetFunction<NativeRequestCurrentStats>(this.Functions.RequestCurrentStats); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat(IntPtr thisobj, string pchName, ref Int32 pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(string pchName, ref Int32 pData) { var call = this.GetFunction<NativeGetStat>(this.Functions.GetStat); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetStat1(IntPtr thisobj, string pchName, ref float pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetStat(string pchName, ref float pData) { var call = this.GetFunction<NativeGetStat1>(this.Functions.GetStat1); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat(IntPtr thisobj, string pchName, Int32 nData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(string pchName, Int32 nData) { var call = this.GetFunction<NativeSetStat>(this.Functions.SetStat); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), nData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetStat1(IntPtr thisobj, string pchName, float fData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetStat(string pchName, float fData) { var call = this.GetFunction<NativeSetStat1>(this.Functions.SetStat1); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), fData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateAvgRateStat(IntPtr thisobj, string pchName, float flCountThisSession, double dSessionLength);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateAvgRateStat(string pchName, float flCountThisSession, double dSessionLength) { var call = this.GetFunction<NativeUpdateAvgRateStat>(this.Functions.UpdateAvgRateStat); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), flCountThisSession, dSessionLength); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAchievement(IntPtr thisobj, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetAchievement(string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved) { var call = this.GetFunction<NativeGetAchievement>(this.Functions.GetAchievement); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pbAchieved); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetAchievement(IntPtr thisobj, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetAchievement(string pchName) { var call = this.GetFunction<NativeSetAchievement>(this.Functions.SetAchievement); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeClearAchievement(IntPtr thisobj, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool ClearAchievement(string pchName) { var call = this.GetFunction<NativeClearAchievement>(this.Functions.ClearAchievement); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAchievementAndUnlockTime(IntPtr thisobj, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved, ref UInt32 prtTime);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetAchievementAndUnlockTime(string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved, ref UInt32 prtTime) { var call = this.GetFunction<NativeGetAchievementAndUnlockTime>(this.Functions.GetAchievementAndUnlockTime); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pbAchieved, ref prtTime); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeStoreStats(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool StoreStats() { var call = this.GetFunction<NativeStoreStats>(this.Functions.StoreStats); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAchievementIcon(IntPtr thisobj, string pchName);
		public Int32 GetAchievementIcon(string pchName) { var call = this.GetFunction<NativeGetAchievementIcon>(this.Functions.GetAchievementIcon); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetAchievementDisplayAttribute(IntPtr thisobj, string pchName, string pchKey);
		public string GetAchievementDisplayAttribute(string pchName, string pchKey) { var call = this.GetFunction<NativeGetAchievementDisplayAttribute>(this.Functions.GetAchievementDisplayAttribute); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIndicateAchievementProgress(IntPtr thisobj, string pchName, UInt32 nCurProgress, UInt32 nMaxProgress);
		[return: MarshalAs(UnmanagedType.I1)] public bool IndicateAchievementProgress(string pchName, UInt32 nCurProgress, UInt32 nMaxProgress) { var call = this.GetFunction<NativeIndicateAchievementProgress>(this.Functions.IndicateAchievementProgress); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), nCurProgress, nMaxProgress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestUserStats(IntPtr thisobj, UInt64 steamIDUser);
		public UInt64 RequestUserStats(UInt64 steamIDUser) { var call = this.GetFunction<NativeRequestUserStats>(this.Functions.RequestUserStats); return call(this.ObjectAddress, steamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserStat(IntPtr thisobj, UInt64 steamIDUser, string pchName, ref Int32 pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserStat(UInt64 steamIDUser, string pchName, ref Int32 pData) { var call = this.GetFunction<NativeGetUserStat>(this.Functions.GetUserStat); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserStat1(IntPtr thisobj, UInt64 steamIDUser, string pchName, ref float pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserStat(UInt64 steamIDUser, string pchName, ref float pData) { var call = this.GetFunction<NativeGetUserStat1>(this.Functions.GetUserStat1); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserAchievement(IntPtr thisobj, UInt64 steamIDUser, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserAchievement(UInt64 steamIDUser, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved) { var call = this.GetFunction<NativeGetUserAchievement>(this.Functions.GetUserAchievement); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pbAchieved); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserAchievementAndUnlockTime(IntPtr thisobj, UInt64 steamIDUser, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved, ref UInt32 prtTime);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserAchievementAndUnlockTime(UInt64 steamIDUser, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved, ref UInt32 prtTime) { var call = this.GetFunction<NativeGetUserAchievementAndUnlockTime>(this.Functions.GetUserAchievementAndUnlockTime); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pbAchieved, ref prtTime); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeResetAllStats(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bAchievementsToo);
		[return: MarshalAs(UnmanagedType.I1)] public bool ResetAllStats([MarshalAs(UnmanagedType.I1)] bool bAchievementsToo) { var call = this.GetFunction<NativeResetAllStats>(this.Functions.ResetAllStats); return call(this.ObjectAddress, bAchievementsToo); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeFindOrCreateLeaderboard(IntPtr thisobj, string pchLeaderboardName, ELeaderboardSortMethod eLeaderboardSortMethod, ELeaderboardDisplayType eLeaderboardDisplayType);
		public UInt64 FindOrCreateLeaderboard(string pchLeaderboardName, ELeaderboardSortMethod eLeaderboardSortMethod, ELeaderboardDisplayType eLeaderboardDisplayType) { var call = this.GetFunction<NativeFindOrCreateLeaderboard>(this.Functions.FindOrCreateLeaderboard); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchLeaderboardName ) ), eLeaderboardSortMethod, eLeaderboardDisplayType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeFindLeaderboard(IntPtr thisobj, string pchLeaderboardName);
		public UInt64 FindLeaderboard(string pchLeaderboardName) { var call = this.GetFunction<NativeFindLeaderboard>(this.Functions.FindLeaderboard); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchLeaderboardName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLeaderboardName(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public string GetLeaderboardName(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardName>(this.Functions.GetLeaderboardName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, hSteamLeaderboard) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLeaderboardEntryCount(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public Int32 GetLeaderboardEntryCount(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardEntryCount>(this.Functions.GetLeaderboardEntryCount); return call(this.ObjectAddress, hSteamLeaderboard); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELeaderboardSortMethod NativeGetLeaderboardSortMethod(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public ELeaderboardSortMethod GetLeaderboardSortMethod(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardSortMethod>(this.Functions.GetLeaderboardSortMethod); return call(this.ObjectAddress, hSteamLeaderboard); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELeaderboardDisplayType NativeGetLeaderboardDisplayType(IntPtr thisobj, UInt64 hSteamLeaderboard);
		public ELeaderboardDisplayType GetLeaderboardDisplayType(UInt64 hSteamLeaderboard) { var call = this.GetFunction<NativeGetLeaderboardDisplayType>(this.Functions.GetLeaderboardDisplayType); return call(this.ObjectAddress, hSteamLeaderboard); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeDownloadLeaderboardEntries(IntPtr thisobj, UInt64 hSteamLeaderboard, ELeaderboardDataRequest eLeaderboardDataRequest, Int32 nRangeStart, Int32 nRangeEnd);
		public UInt64 DownloadLeaderboardEntries(UInt64 hSteamLeaderboard, ELeaderboardDataRequest eLeaderboardDataRequest, Int32 nRangeStart, Int32 nRangeEnd) { var call = this.GetFunction<NativeDownloadLeaderboardEntries>(this.Functions.DownloadLeaderboardEntries); return call(this.ObjectAddress, hSteamLeaderboard, eLeaderboardDataRequest, nRangeStart, nRangeEnd); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeDownloadLeaderboardEntriesForUsers(IntPtr thisobj);
		public Int32 DownloadLeaderboardEntriesForUsers() { var call = this.GetFunction<NativeDownloadLeaderboardEntriesForUsers>(this.Functions.DownloadLeaderboardEntriesForUsers); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetDownloadedLeaderboardEntry(IntPtr thisobj, UInt64 hSteamLeaderboardEntries, Int32 index, ref LeaderboardEntry002_t pLeaderboardEntry, ref Int32 pDetails, Int32 cDetailsMax);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetDownloadedLeaderboardEntry(UInt64 hSteamLeaderboardEntries, Int32 index, ref LeaderboardEntry002_t pLeaderboardEntry, ref Int32 pDetails, Int32 cDetailsMax) { var call = this.GetFunction<NativeGetDownloadedLeaderboardEntry>(this.Functions.GetDownloadedLeaderboardEntry); return call(this.ObjectAddress, hSteamLeaderboardEntries, index, ref pLeaderboardEntry, ref pDetails, cDetailsMax); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeUploadLeaderboardScore(IntPtr thisobj, UInt64 hSteamLeaderboard, ELeaderboardUploadScoreMethod eLeaderboardUploadScoreMethod, Int32 nScore, ref Int32 pScoreDetails, Int32 cScoreDetailsCount);
		public UInt64 UploadLeaderboardScore(UInt64 hSteamLeaderboard, ELeaderboardUploadScoreMethod eLeaderboardUploadScoreMethod, Int32 nScore, ref Int32 pScoreDetails, Int32 cScoreDetailsCount) { var call = this.GetFunction<NativeUploadLeaderboardScore>(this.Functions.UploadLeaderboardScore); return call(this.ObjectAddress, hSteamLeaderboard, eLeaderboardUploadScoreMethod, nScore, ref pScoreDetails, cScoreDetailsCount); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeAttachLeaderboardUGC(IntPtr thisobj, UInt64 hSteamLeaderboard, UInt64 Unk1);
		public UInt64 AttachLeaderboardUGC(UInt64 hSteamLeaderboard, UInt64 Unk1) { var call = this.GetFunction<NativeAttachLeaderboardUGC>(this.Functions.AttachLeaderboardUGC); return call(this.ObjectAddress, hSteamLeaderboard, Unk1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetNumberOfCurrentPlayers(IntPtr thisobj);
		public UInt64 GetNumberOfCurrentPlayers() { var call = this.GetFunction<NativeGetNumberOfCurrentPlayers>(this.Functions.GetNumberOfCurrentPlayers); return call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamMatchmakingPingResponseVTable
	{
		public IntPtr ServerResponded;
		public IntPtr ServerFailedToRespond;
	}
	
	public class ISteamMatchmakingPingResponse : NativeWrapper<ISteamMatchmakingPingResponseVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeServerResponded(IntPtr thisobj, ref gameserveritem_t server);
		public void ServerResponded(ref gameserveritem_t server) { var call = this.GetFunction<NativeServerResponded>(this.Functions.ServerResponded); call(this.ObjectAddress, ref server); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeServerFailedToRespond(IntPtr thisobj);
		public void ServerFailedToRespond() { var call = this.GetFunction<NativeServerFailedToRespond>(this.Functions.ServerFailedToRespond); call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamMatchmaking003VTable
	{
		public IntPtr GetFavoriteGameCount;
		public IntPtr GetFavoriteGame;
		public IntPtr AddFavoriteGame;
		public IntPtr RemoveFavoriteGame;
		public IntPtr RequestLobbyList;
		public IntPtr AddRequestLobbyListFilter;
		public IntPtr AddRequestLobbyListNumericalFilter;
		public IntPtr AddRequestLobbyListSlotsAvailableFilter;
		public IntPtr GetLobbyByIndex;
		public IntPtr CreateLobby;
		public IntPtr JoinLobby;
		public IntPtr LeaveLobby;
		public IntPtr InviteUserToLobby;
		public IntPtr GetNumLobbyMembers;
		public IntPtr GetLobbyMemberByIndex;
		public IntPtr GetLobbyData;
		public IntPtr SetLobbyData;
		public IntPtr GetLobbyMemberData;
		public IntPtr SetLobbyMemberData;
		public IntPtr SendLobbyChatMsg;
		public IntPtr GetLobbyChatEntry;
		public IntPtr RequestLobbyData;
		public IntPtr SetLobbyGameServer;
		public IntPtr GetLobbyGameServer;
		public IntPtr SetLobbyMemberLimit;
		public IntPtr GetLobbyMemberLimit;
		public IntPtr SetLobbyVoiceEnabled;
		public IntPtr RequestFriendsLobbies;
	}
	
	public class ISteamMatchmaking003 : NativeWrapper<ISteamMatchmaking003VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFavoriteGameCount(IntPtr thisobj);
		public Int32 GetFavoriteGameCount() { var call = this.GetFunction<NativeGetFavoriteGameCount>(this.Functions.GetFavoriteGameCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFavoriteGame(IntPtr thisobj, Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFavoriteGame(Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer) { var call = this.GetFunction<NativeGetFavoriteGame>(this.Functions.GetFavoriteGame); return call(this.ObjectAddress, iGame, ref pnAppID, ref pnIP, ref pnConnPort, ref pnQueryPort, ref punFlags, ref pRTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer);
		public Int32 AddFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer) { var call = this.GetFunction<NativeAddFavoriteGame>(this.Functions.AddFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags, rTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags) { var call = this.GetFunction<NativeRemoveFavoriteGame>(this.Functions.RemoveFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestLobbyList(IntPtr thisobj);
		public UInt64 RequestLobbyList() { var call = this.GetFunction<NativeRequestLobbyList>(this.Functions.RequestLobbyList); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListFilter(IntPtr thisobj, string pchKeyToMatch, string pchValueToMatch);
		public void AddRequestLobbyListFilter(string pchKeyToMatch, string pchValueToMatch) { var call = this.GetFunction<NativeAddRequestLobbyListFilter>(this.Functions.AddRequestLobbyListFilter); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKeyToMatch ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValueToMatch ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListNumericalFilter(IntPtr thisobj, string pchKeyToMatch, Int32 nValueToMatch, Int32 nComparisonType);
		public void AddRequestLobbyListNumericalFilter(string pchKeyToMatch, Int32 nValueToMatch, Int32 nComparisonType) { var call = this.GetFunction<NativeAddRequestLobbyListNumericalFilter>(this.Functions.AddRequestLobbyListNumericalFilter); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKeyToMatch ) ), nValueToMatch, nComparisonType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListSlotsAvailableFilter(IntPtr thisobj);
		public void AddRequestLobbyListSlotsAvailableFilter() { var call = this.GetFunction<NativeAddRequestLobbyListSlotsAvailableFilter>(this.Functions.AddRequestLobbyListSlotsAvailableFilter); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetLobbyByIndex(IntPtr thisobj, ref UInt64 ret, Int32 iLobby);
		public UInt64 GetLobbyByIndex(Int32 iLobby) { UInt64 ret = 0; var call = this.GetFunction<NativeGetLobbyByIndex>(this.Functions.GetLobbyByIndex); call(this.ObjectAddress, ref ret, iLobby); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCreateLobby(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bPrivate);
		public void CreateLobby([MarshalAs(UnmanagedType.I1)] bool bPrivate) { var call = this.GetFunction<NativeCreateLobby>(this.Functions.CreateLobby); call(this.ObjectAddress, bPrivate); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeJoinLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public void JoinLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeJoinLobby>(this.Functions.JoinLobby); call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLeaveLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public void LeaveLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeLeaveLobby>(this.Functions.LeaveLobby); call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeInviteUserToLobby(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDInvitee);
		[return: MarshalAs(UnmanagedType.I1)] public bool InviteUserToLobby(UInt64 steamIDLobby, UInt64 steamIDInvitee) { var call = this.GetFunction<NativeInviteUserToLobby>(this.Functions.InviteUserToLobby); return call(this.ObjectAddress, steamIDLobby, steamIDInvitee); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetNumLobbyMembers(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetNumLobbyMembers(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetNumLobbyMembers>(this.Functions.GetNumLobbyMembers); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetLobbyMemberByIndex(IntPtr thisobj, ref UInt64 ret, UInt64 steamIDLobby, Int32 iMember);
		public UInt64 GetLobbyMemberByIndex(UInt64 steamIDLobby, Int32 iMember) { UInt64 ret = 0; var call = this.GetFunction<NativeGetLobbyMemberByIndex>(this.Functions.GetLobbyMemberByIndex); call(this.ObjectAddress, ref ret, steamIDLobby, iMember); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey);
		public string GetLobbyData(UInt64 steamIDLobby, string pchKey) { var call = this.GetFunction<NativeGetLobbyData>(this.Functions.GetLobbyData); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDLobby, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyData>(this.Functions.SetLobbyData); return call(this.ObjectAddress, steamIDLobby, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey);
		public string GetLobbyMemberData(UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey) { var call = this.GetFunction<NativeGetLobbyMemberData>(this.Functions.GetLobbyMemberData); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDLobby, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		public void SetLobbyMemberData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyMemberData>(this.Functions.SetLobbyMemberData); call(this.ObjectAddress, steamIDLobby, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendLobbyChatMsg(IntPtr thisobj, UInt64 steamIDLobby, byte[] pvMsgBody, Int32 cubMsgBody);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendLobbyChatMsg(UInt64 steamIDLobby, byte[] pvMsgBody, Int32 cubMsgBody) { var call = this.GetFunction<NativeSendLobbyChatMsg>(this.Functions.SendLobbyChatMsg); return call(this.ObjectAddress, steamIDLobby, pvMsgBody, cubMsgBody); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyChatEntry(IntPtr thisobj, UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, byte[] pvData, Int32 cubData, ref EChatEntryType peChatEntryType);
		public Int32 GetLobbyChatEntry(UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, byte[] pvData, Int32 cubData, ref EChatEntryType peChatEntryType) { var call = this.GetFunction<NativeGetLobbyChatEntry>(this.Functions.GetLobbyChatEntry); return call(this.ObjectAddress, steamIDLobby, iChatID, ref pSteamIDUser, pvData, cubData, ref peChatEntryType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestLobbyData(IntPtr thisobj, UInt64 steamIDLobby);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestLobbyData(UInt64 steamIDLobby) { var call = this.GetFunction<NativeRequestLobbyData>(this.Functions.RequestLobbyData); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyGameServer(IntPtr thisobj, UInt64 steamIDLobby, UInt32 unGameServerIP, UInt16 unGameServerPort, UInt64 steamIDGameServer);
		public void SetLobbyGameServer(UInt64 steamIDLobby, UInt32 unGameServerIP, UInt16 unGameServerPort, UInt64 steamIDGameServer) { var call = this.GetFunction<NativeSetLobbyGameServer>(this.Functions.SetLobbyGameServer); call(this.ObjectAddress, steamIDLobby, unGameServerIP, unGameServerPort, steamIDGameServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetLobbyGameServer(IntPtr thisobj, UInt64 steamIDLobby, ref UInt32 punGameServerIP, ref UInt16 punGameServerPort, ref UInt64 psteamIDGameServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetLobbyGameServer(UInt64 steamIDLobby, ref UInt32 punGameServerIP, ref UInt16 punGameServerPort, ref UInt64 psteamIDGameServer) { var call = this.GetFunction<NativeGetLobbyGameServer>(this.Functions.GetLobbyGameServer); return call(this.ObjectAddress, steamIDLobby, ref punGameServerIP, ref punGameServerPort, ref psteamIDGameServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyMemberLimit(IntPtr thisobj, UInt64 steamIDLobby, Int32 cMaxMembers);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyMemberLimit(UInt64 steamIDLobby, Int32 cMaxMembers) { var call = this.GetFunction<NativeSetLobbyMemberLimit>(this.Functions.SetLobbyMemberLimit); return call(this.ObjectAddress, steamIDLobby, cMaxMembers); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyMemberLimit(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetLobbyMemberLimit(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetLobbyMemberLimit>(this.Functions.GetLobbyMemberLimit); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetLobbyVoiceEnabled(IntPtr thisobj, UInt64 steamIDLobby, [MarshalAs(UnmanagedType.I1)] bool bEnabled);
		public Int32 SetLobbyVoiceEnabled(UInt64 steamIDLobby, [MarshalAs(UnmanagedType.I1)] bool bEnabled) { var call = this.GetFunction<NativeSetLobbyVoiceEnabled>(this.Functions.SetLobbyVoiceEnabled); return call(this.ObjectAddress, steamIDLobby, bEnabled); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRequestFriendsLobbies(IntPtr thisobj);
		public Int32 RequestFriendsLobbies() { var call = this.GetFunction<NativeRequestFriendsLobbies>(this.Functions.RequestFriendsLobbies); return call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamMatchmaking008VTable
	{
		public IntPtr GetFavoriteGameCount;
		public IntPtr GetFavoriteGame;
		public IntPtr AddFavoriteGame;
		public IntPtr RemoveFavoriteGame;
		public IntPtr RequestLobbyList;
		public IntPtr AddRequestLobbyListStringFilter;
		public IntPtr AddRequestLobbyListNumericalFilter;
		public IntPtr AddRequestLobbyListNearValueFilter;
		public IntPtr AddRequestLobbyListFilterSlotsAvailable;
		public IntPtr AddRequestLobbyListDistanceFilter;
		public IntPtr AddRequestLobbyListResultCountFilter;
		public IntPtr GetLobbyByIndex;
		public IntPtr CreateLobby;
		public IntPtr JoinLobby;
		public IntPtr LeaveLobby;
		public IntPtr InviteUserToLobby;
		public IntPtr GetNumLobbyMembers;
		public IntPtr GetLobbyMemberByIndex;
		public IntPtr GetLobbyData;
		public IntPtr SetLobbyData;
		public IntPtr GetLobbyDataCount;
		public IntPtr GetLobbyDataByIndex;
		public IntPtr DeleteLobbyData;
		public IntPtr GetLobbyMemberData;
		public IntPtr SetLobbyMemberData;
		public IntPtr SendLobbyChatMsg;
		public IntPtr GetLobbyChatEntry;
		public IntPtr RequestLobbyData;
		public IntPtr SetLobbyGameServer;
		public IntPtr GetLobbyGameServer;
		public IntPtr SetLobbyMemberLimit;
		public IntPtr GetLobbyMemberLimit;
		public IntPtr SetLobbyType;
		public IntPtr SetLobbyJoinable;
		public IntPtr GetLobbyOwner;
		public IntPtr SetLobbyOwner;
	}
	
	public class ISteamMatchmaking008 : NativeWrapper<ISteamMatchmaking008VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFavoriteGameCount(IntPtr thisobj);
		public Int32 GetFavoriteGameCount() { var call = this.GetFunction<NativeGetFavoriteGameCount>(this.Functions.GetFavoriteGameCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFavoriteGame(IntPtr thisobj, Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFavoriteGame(Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer) { var call = this.GetFunction<NativeGetFavoriteGame>(this.Functions.GetFavoriteGame); return call(this.ObjectAddress, iGame, ref pnAppID, ref pnIP, ref pnConnPort, ref pnQueryPort, ref punFlags, ref pRTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer);
		public Int32 AddFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer) { var call = this.GetFunction<NativeAddFavoriteGame>(this.Functions.AddFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags, rTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags) { var call = this.GetFunction<NativeRemoveFavoriteGame>(this.Functions.RemoveFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestLobbyList(IntPtr thisobj);
		public UInt64 RequestLobbyList() { var call = this.GetFunction<NativeRequestLobbyList>(this.Functions.RequestLobbyList); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListStringFilter(IntPtr thisobj, string pchKeyToMatch, string pchValueToMatch, ELobbyComparison eComparisonType);
		public void AddRequestLobbyListStringFilter(string pchKeyToMatch, string pchValueToMatch, ELobbyComparison eComparisonType) { var call = this.GetFunction<NativeAddRequestLobbyListStringFilter>(this.Functions.AddRequestLobbyListStringFilter); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKeyToMatch ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValueToMatch ) ), eComparisonType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListNumericalFilter(IntPtr thisobj, string pchKeyToMatch, Int32 nValueToMatch, ELobbyComparison eComparisonType);
		public void AddRequestLobbyListNumericalFilter(string pchKeyToMatch, Int32 nValueToMatch, ELobbyComparison eComparisonType) { var call = this.GetFunction<NativeAddRequestLobbyListNumericalFilter>(this.Functions.AddRequestLobbyListNumericalFilter); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKeyToMatch ) ), nValueToMatch, eComparisonType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListNearValueFilter(IntPtr thisobj, string pchKeyToMatch, Int32 nValueToBeCloseTo);
		public void AddRequestLobbyListNearValueFilter(string pchKeyToMatch, Int32 nValueToBeCloseTo) { var call = this.GetFunction<NativeAddRequestLobbyListNearValueFilter>(this.Functions.AddRequestLobbyListNearValueFilter); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKeyToMatch ) ), nValueToBeCloseTo); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListFilterSlotsAvailable(IntPtr thisobj, Int32 nSlotsAvailable);
		public void AddRequestLobbyListFilterSlotsAvailable(Int32 nSlotsAvailable) { var call = this.GetFunction<NativeAddRequestLobbyListFilterSlotsAvailable>(this.Functions.AddRequestLobbyListFilterSlotsAvailable); call(this.ObjectAddress, nSlotsAvailable); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListDistanceFilter(IntPtr thisobj, ELobbyDistanceFilter eLobbyDistanceFilter);
		public void AddRequestLobbyListDistanceFilter(ELobbyDistanceFilter eLobbyDistanceFilter) { var call = this.GetFunction<NativeAddRequestLobbyListDistanceFilter>(this.Functions.AddRequestLobbyListDistanceFilter); call(this.ObjectAddress, eLobbyDistanceFilter); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListResultCountFilter(IntPtr thisobj, Int32 cMaxResults);
		public void AddRequestLobbyListResultCountFilter(Int32 cMaxResults) { var call = this.GetFunction<NativeAddRequestLobbyListResultCountFilter>(this.Functions.AddRequestLobbyListResultCountFilter); call(this.ObjectAddress, cMaxResults); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetLobbyByIndex(IntPtr thisobj, ref UInt64 ret, Int32 iLobby);
		public UInt64 GetLobbyByIndex(Int32 iLobby) { UInt64 ret = 0; var call = this.GetFunction<NativeGetLobbyByIndex>(this.Functions.GetLobbyByIndex); call(this.ObjectAddress, ref ret, iLobby); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeCreateLobby(IntPtr thisobj, ELobbyType eLobbyType, Int32 cMaxMembers);
		public UInt64 CreateLobby(ELobbyType eLobbyType, Int32 cMaxMembers) { var call = this.GetFunction<NativeCreateLobby>(this.Functions.CreateLobby); return call(this.ObjectAddress, eLobbyType, cMaxMembers); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeJoinLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public UInt64 JoinLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeJoinLobby>(this.Functions.JoinLobby); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLeaveLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public void LeaveLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeLeaveLobby>(this.Functions.LeaveLobby); call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeInviteUserToLobby(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDInvitee);
		[return: MarshalAs(UnmanagedType.I1)] public bool InviteUserToLobby(UInt64 steamIDLobby, UInt64 steamIDInvitee) { var call = this.GetFunction<NativeInviteUserToLobby>(this.Functions.InviteUserToLobby); return call(this.ObjectAddress, steamIDLobby, steamIDInvitee); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetNumLobbyMembers(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetNumLobbyMembers(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetNumLobbyMembers>(this.Functions.GetNumLobbyMembers); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetLobbyMemberByIndex(IntPtr thisobj, ref UInt64 ret, UInt64 steamIDLobby, Int32 iMember);
		public UInt64 GetLobbyMemberByIndex(UInt64 steamIDLobby, Int32 iMember) { UInt64 ret = 0; var call = this.GetFunction<NativeGetLobbyMemberByIndex>(this.Functions.GetLobbyMemberByIndex); call(this.ObjectAddress, ref ret, steamIDLobby, iMember); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey);
		public string GetLobbyData(UInt64 steamIDLobby, string pchKey) { var call = this.GetFunction<NativeGetLobbyData>(this.Functions.GetLobbyData); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDLobby, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyData>(this.Functions.SetLobbyData); return call(this.ObjectAddress, steamIDLobby, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyDataCount(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetLobbyDataCount(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetLobbyDataCount>(this.Functions.GetLobbyDataCount); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetLobbyDataByIndex(IntPtr thisobj, UInt64 steamIDLobby, Int32 iLobbyData, string pchKey, Int32 cchKeyBufferSize, string pchValue, Int32 cchValueBufferSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetLobbyDataByIndex(UInt64 steamIDLobby, Int32 iLobbyData, string pchKey, Int32 cchKeyBufferSize, string pchValue, Int32 cchValueBufferSize) { var call = this.GetFunction<NativeGetLobbyDataByIndex>(this.Functions.GetLobbyDataByIndex); return call(this.ObjectAddress, steamIDLobby, iLobbyData, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), cchKeyBufferSize, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) ), cchValueBufferSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeDeleteLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey);
		[return: MarshalAs(UnmanagedType.I1)] public bool DeleteLobbyData(UInt64 steamIDLobby, string pchKey) { var call = this.GetFunction<NativeDeleteLobbyData>(this.Functions.DeleteLobbyData); return call(this.ObjectAddress, steamIDLobby, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey);
		public string GetLobbyMemberData(UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey) { var call = this.GetFunction<NativeGetLobbyMemberData>(this.Functions.GetLobbyMemberData); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDLobby, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		public void SetLobbyMemberData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyMemberData>(this.Functions.SetLobbyMemberData); call(this.ObjectAddress, steamIDLobby, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendLobbyChatMsg(IntPtr thisobj, UInt64 steamIDLobby, byte[] pvMsgBody, Int32 cubMsgBody);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendLobbyChatMsg(UInt64 steamIDLobby, byte[] pvMsgBody, Int32 cubMsgBody) { var call = this.GetFunction<NativeSendLobbyChatMsg>(this.Functions.SendLobbyChatMsg); return call(this.ObjectAddress, steamIDLobby, pvMsgBody, cubMsgBody); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyChatEntry(IntPtr thisobj, UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, byte[] pvData, Int32 cubData, ref EChatEntryType peChatEntryType);
		public Int32 GetLobbyChatEntry(UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, byte[] pvData, Int32 cubData, ref EChatEntryType peChatEntryType) { var call = this.GetFunction<NativeGetLobbyChatEntry>(this.Functions.GetLobbyChatEntry); return call(this.ObjectAddress, steamIDLobby, iChatID, ref pSteamIDUser, pvData, cubData, ref peChatEntryType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestLobbyData(IntPtr thisobj, UInt64 steamIDLobby);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestLobbyData(UInt64 steamIDLobby) { var call = this.GetFunction<NativeRequestLobbyData>(this.Functions.RequestLobbyData); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyGameServer(IntPtr thisobj, UInt64 steamIDLobby, UInt32 unGameServerIP, UInt16 unGameServerPort, UInt64 steamIDGameServer);
		public void SetLobbyGameServer(UInt64 steamIDLobby, UInt32 unGameServerIP, UInt16 unGameServerPort, UInt64 steamIDGameServer) { var call = this.GetFunction<NativeSetLobbyGameServer>(this.Functions.SetLobbyGameServer); call(this.ObjectAddress, steamIDLobby, unGameServerIP, unGameServerPort, steamIDGameServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetLobbyGameServer(IntPtr thisobj, UInt64 steamIDLobby, ref UInt32 punGameServerIP, ref UInt16 punGameServerPort, ref UInt64 psteamIDGameServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetLobbyGameServer(UInt64 steamIDLobby, ref UInt32 punGameServerIP, ref UInt16 punGameServerPort, ref UInt64 psteamIDGameServer) { var call = this.GetFunction<NativeGetLobbyGameServer>(this.Functions.GetLobbyGameServer); return call(this.ObjectAddress, steamIDLobby, ref punGameServerIP, ref punGameServerPort, ref psteamIDGameServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyMemberLimit(IntPtr thisobj, UInt64 steamIDLobby, Int32 cMaxMembers);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyMemberLimit(UInt64 steamIDLobby, Int32 cMaxMembers) { var call = this.GetFunction<NativeSetLobbyMemberLimit>(this.Functions.SetLobbyMemberLimit); return call(this.ObjectAddress, steamIDLobby, cMaxMembers); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyMemberLimit(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetLobbyMemberLimit(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetLobbyMemberLimit>(this.Functions.GetLobbyMemberLimit); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyType(IntPtr thisobj, UInt64 steamIDLobby, ELobbyType eLobbyType);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyType(UInt64 steamIDLobby, ELobbyType eLobbyType) { var call = this.GetFunction<NativeSetLobbyType>(this.Functions.SetLobbyType); return call(this.ObjectAddress, steamIDLobby, eLobbyType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyJoinable(IntPtr thisobj, UInt64 steamIDLobby, [MarshalAs(UnmanagedType.I1)] bool bLobbyJoinable);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyJoinable(UInt64 steamIDLobby, [MarshalAs(UnmanagedType.I1)] bool bLobbyJoinable) { var call = this.GetFunction<NativeSetLobbyJoinable>(this.Functions.SetLobbyJoinable); return call(this.ObjectAddress, steamIDLobby, bLobbyJoinable); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetLobbyOwner(IntPtr thisobj, ref UInt64 ret, UInt64 steamIDLobby);
		public UInt64 GetLobbyOwner(UInt64 steamIDLobby) { UInt64 ret = 0; var call = this.GetFunction<NativeGetLobbyOwner>(this.Functions.GetLobbyOwner); call(this.ObjectAddress, ref ret, steamIDLobby); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyOwner(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDNewOwner);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyOwner(UInt64 steamIDLobby, UInt64 steamIDNewOwner) { var call = this.GetFunction<NativeSetLobbyOwner>(this.Functions.SetLobbyOwner); return call(this.ObjectAddress, steamIDLobby, steamIDNewOwner); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamGameServerItems004VTable
	{
		public IntPtr LoadItems;
		public IntPtr GetItemCount;
		public IntPtr GetItemIterative;
		public IntPtr GetItemByID;
		public IntPtr GetItemAttribute;
		public IntPtr CreateNewItemRequest;
		public IntPtr AddNewItemLevel;
		public IntPtr AddNewItemQuality;
		public IntPtr SetNewItemInitialInventoryPos;
		public IntPtr SetNewItemInitialQuantity;
		public IntPtr AddNewItemCriteria;
		public IntPtr AddNewItemCriteria1;
		public IntPtr SendNewItemRequest;
		public IntPtr GrantItemToUser;
		public IntPtr DeleteTemporaryItem;
		public IntPtr DeleteAllTemporaryItems;
		public IntPtr UpdateQuantity;
		public IntPtr GetItemBlob;
		public IntPtr SetItemBlob;
	}
	
	public class ISteamGameServerItems004 : NativeWrapper<ISteamGameServerItems004VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeLoadItems(IntPtr thisobj, UInt64 steamid);
		public UInt64 LoadItems(UInt64 steamid) { var call = this.GetFunction<NativeLoadItems>(this.Functions.LoadItems); return call(this.ObjectAddress, steamid); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetItemCount(IntPtr thisobj, UInt64 steamid);
		public UInt64 GetItemCount(UInt64 steamid) { var call = this.GetFunction<NativeGetItemCount>(this.Functions.GetItemCount); return call(this.ObjectAddress, steamid); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemIterative(IntPtr thisobj, UInt64 steamid, UInt32 i, ref UInt64 UniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemIterative(UInt64 steamid, UInt32 i, ref UInt64 UniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute) { var call = this.GetFunction<NativeGetItemIterative>(this.Functions.GetItemIterative); return call(this.ObjectAddress, steamid, i, ref UniqueID, ref ItemType, ref ItemLevel, ref Quality, ref Flags, ref Quantity, ref NbOfAttribute); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemByID(IntPtr thisobj, UInt64 itemid, ref UInt64 steamid, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemByID(UInt64 itemid, ref UInt64 steamid, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute) { var call = this.GetFunction<NativeGetItemByID>(this.Functions.GetItemByID); return call(this.ObjectAddress, itemid, ref steamid, ref ItemType, ref ItemLevel, ref Quality, ref Flags, ref Quantity, ref NbOfAttribute); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemAttribute(IntPtr thisobj, UInt64 itemid, UInt32 i, ref UInt32 attribIndex, ref float attribValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemAttribute(UInt64 itemid, UInt32 i, ref UInt32 attribIndex, ref float attribValue) { var call = this.GetFunction<NativeGetItemAttribute>(this.Functions.GetItemAttribute); return call(this.ObjectAddress, itemid, i, ref attribIndex, ref attribValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateNewItemRequest(IntPtr thisobj, UInt64 steamid);
		public Int32 CreateNewItemRequest(UInt64 steamid) { var call = this.GetFunction<NativeCreateNewItemRequest>(this.Functions.CreateNewItemRequest); return call(this.ObjectAddress, steamid); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAddNewItemLevel(IntPtr thisobj, Int32 ireq, UInt32 level);
		[return: MarshalAs(UnmanagedType.I1)] public bool AddNewItemLevel(Int32 ireq, UInt32 level) { var call = this.GetFunction<NativeAddNewItemLevel>(this.Functions.AddNewItemLevel); return call(this.ObjectAddress, ireq, level); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAddNewItemQuality(IntPtr thisobj, Int32 ireq, EItemQuality quality);
		[return: MarshalAs(UnmanagedType.I1)] public bool AddNewItemQuality(Int32 ireq, EItemQuality quality) { var call = this.GetFunction<NativeAddNewItemQuality>(this.Functions.AddNewItemQuality); return call(this.ObjectAddress, ireq, quality); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetNewItemInitialInventoryPos(IntPtr thisobj, Int32 ireq, UInt32 pos);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetNewItemInitialInventoryPos(Int32 ireq, UInt32 pos) { var call = this.GetFunction<NativeSetNewItemInitialInventoryPos>(this.Functions.SetNewItemInitialInventoryPos); return call(this.ObjectAddress, ireq, pos); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetNewItemInitialQuantity(IntPtr thisobj, Int32 ireq, UInt32 quantity);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetNewItemInitialQuantity(Int32 ireq, UInt32 quantity) { var call = this.GetFunction<NativeSetNewItemInitialQuantity>(this.Functions.SetNewItemInitialQuantity); return call(this.ObjectAddress, ireq, quantity); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAddNewItemCriteria(IntPtr thisobj, Int32 ireq, string key, EItemCriteriaOperator criteria, string value, [MarshalAs(UnmanagedType.I1)] bool unkn);
		[return: MarshalAs(UnmanagedType.I1)] public bool AddNewItemCriteria(Int32 ireq, string key, EItemCriteriaOperator criteria, string value, [MarshalAs(UnmanagedType.I1)] bool unkn) { var call = this.GetFunction<NativeAddNewItemCriteria>(this.Functions.AddNewItemCriteria); return call(this.ObjectAddress, ireq, Encoding.Default.GetString( Encoding.UTF8.GetBytes( key ) ), criteria, Encoding.Default.GetString( Encoding.UTF8.GetBytes( value ) ), unkn); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAddNewItemCriteria1(IntPtr thisobj, Int32 ireq, string key, EItemCriteriaOperator criteria, float value, [MarshalAs(UnmanagedType.I1)] bool unkn);
		[return: MarshalAs(UnmanagedType.I1)] public bool AddNewItemCriteria(Int32 ireq, string key, EItemCriteriaOperator criteria, float value, [MarshalAs(UnmanagedType.I1)] bool unkn) { var call = this.GetFunction<NativeAddNewItemCriteria1>(this.Functions.AddNewItemCriteria1); return call(this.ObjectAddress, ireq, Encoding.Default.GetString( Encoding.UTF8.GetBytes( key ) ), criteria, value, unkn); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeSendNewItemRequest(IntPtr thisobj, Int32 ireq);
		public UInt64 SendNewItemRequest(Int32 ireq) { var call = this.GetFunction<NativeSendNewItemRequest>(this.Functions.SendNewItemRequest); return call(this.ObjectAddress, ireq); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGrantItemToUser(IntPtr thisobj, UInt64 item, UInt64 steamid);
		public UInt64 GrantItemToUser(UInt64 item, UInt64 steamid) { var call = this.GetFunction<NativeGrantItemToUser>(this.Functions.GrantItemToUser); return call(this.ObjectAddress, item, steamid); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeDeleteTemporaryItem(IntPtr thisobj, UInt64 item);
		public UInt64 DeleteTemporaryItem(UInt64 item) { var call = this.GetFunction<NativeDeleteTemporaryItem>(this.Functions.DeleteTemporaryItem); return call(this.ObjectAddress, item); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeDeleteAllTemporaryItems(IntPtr thisobj);
		public UInt64 DeleteAllTemporaryItems() { var call = this.GetFunction<NativeDeleteAllTemporaryItems>(this.Functions.DeleteAllTemporaryItems); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeUpdateQuantity(IntPtr thisobj, UInt64 item, UInt32 quantity);
		public UInt64 UpdateQuantity(UInt64 item, UInt32 quantity) { var call = this.GetFunction<NativeUpdateQuantity>(this.Functions.UpdateQuantity); return call(this.ObjectAddress, item, quantity); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetItemBlob(IntPtr thisobj, UInt64 item);
		public UInt64 GetItemBlob(UInt64 item) { var call = this.GetFunction<NativeGetItemBlob>(this.Functions.GetItemBlob); return call(this.ObjectAddress, item); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeSetItemBlob(IntPtr thisobj, UInt64 item, byte[] blob, UInt32 size);
		public UInt64 SetItemBlob(UInt64 item, byte[] blob, UInt32 size) { var call = this.GetFunction<NativeSetItemBlob>(this.Functions.SetItemBlob); return call(this.ObjectAddress, item, blob, size); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientGameServerVTable
	{
		public IntPtr GetHSteamUser;
		public IntPtr GetSteamID;
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr Secure;
		public IntPtr GetLogonState;
		public IntPtr Connected;
		public IntPtr RaiseConnectionPriority;
		public IntPtr ResetConnectionPriority;
		public IntPtr SetCellID;
		public IntPtr TrackSteamUsageEvent;
		public IntPtr SendUserConnectAndAuthenticate;
		public IntPtr CreateUnauthenticatedUserConnection;
		public IntPtr SendUserDisconnect;
		public IntPtr SetServerType;
		public IntPtr UpdateUserData;
		public IntPtr UpdateStatus;
		public IntPtr UpdateSpectatorPort;
		public IntPtr SetGameTags;
		public IntPtr SetGameData;
		public IntPtr SetCountOfSimultaneousGuestUsersPerSteamAccount;
		public IntPtr EnumerateConnectedUsers;
		public IntPtr GetGameplayStats;
		public IntPtr GetServerReputation;
		public IntPtr RequestUserGroupStatus;
		public IntPtr GetPublicIP;
		public IntPtr GetAuthSessionTicket;
		public IntPtr BeginAuthSession;
		public IntPtr EndAuthSession;
		public IntPtr CancelAuthTicket;
		public IntPtr IsUserSubscribedAppInTicket;
		public IntPtr _GetUserAchievementStatus;
		public IntPtr _GSSetSpawnCount;
		public IntPtr _GSGetSteam2GetEncryptionKeyToSendToNewClient;
		public IntPtr _GSSendSteam2UserConnect;
		public IntPtr _GSSendSteam3UserConnect;
		public IntPtr _GSSendUserConnect;
		public IntPtr _GSRemoveUserConnect;
		public IntPtr _GSSendUserDisconnect;
		public IntPtr _GSUpdateStatus;
		public IntPtr _GSCreateUnauthenticatedUser;
	}
	
	public class IClientGameServer : NativeWrapper<IClientGameServerVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetHSteamUser(IntPtr thisobj);
		public Int32 GetHSteamUser() { var call = this.GetFunction<NativeGetHSteamUser>(this.Functions.GetHSteamUser); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetSteamID(IntPtr thisobj, ref UInt64 ret);
		public UInt64 GetSteamID() { UInt64 ret = 0; var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj);
		public void LogOn() { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSecure(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Secure() { var call = this.GetFunction<NativeSecure>(this.Functions.Secure); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELogonState NativeGetLogonState(IntPtr thisobj);
		public ELogonState GetLogonState() { var call = this.GetFunction<NativeGetLogonState>(this.Functions.GetLogonState); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeConnected(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Connected() { var call = this.GetFunction<NativeConnected>(this.Functions.Connected); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRaiseConnectionPriority(IntPtr thisobj, EConnectionPriority eConnectionPriority);
		public Int32 RaiseConnectionPriority(EConnectionPriority eConnectionPriority) { var call = this.GetFunction<NativeRaiseConnectionPriority>(this.Functions.RaiseConnectionPriority); return call(this.ObjectAddress, eConnectionPriority); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeResetConnectionPriority(IntPtr thisobj, Int32 hRaiseConnectionPriorityPrev);
		public void ResetConnectionPriority(Int32 hRaiseConnectionPriorityPrev) { var call = this.GetFunction<NativeResetConnectionPriority>(this.Functions.ResetConnectionPriority); call(this.ObjectAddress, hRaiseConnectionPriorityPrev); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetCellID(IntPtr thisobj, UInt32 cellID);
		public void SetCellID(UInt32 cellID) { var call = this.GetFunction<NativeSetCellID>(this.Functions.SetCellID); call(this.ObjectAddress, cellID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTrackSteamUsageEvent(IntPtr thisobj, ESteamUsageEvent eSteamUsageEvent, byte[] pubKV, UInt32 cubKV);
		public void TrackSteamUsageEvent(ESteamUsageEvent eSteamUsageEvent, byte[] pubKV, UInt32 cubKV) { var call = this.GetFunction<NativeTrackSteamUsageEvent>(this.Functions.TrackSteamUsageEvent); call(this.ObjectAddress, eSteamUsageEvent, pubKV, cubKV); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendUserConnectAndAuthenticate(IntPtr thisobj, UInt32 unIPClient, byte[] pvAuthBlob, UInt32 cubAuthBlobSize, ref UInt64 pSteamIDUser);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendUserConnectAndAuthenticate(UInt32 unIPClient, byte[] pvAuthBlob, UInt32 cubAuthBlobSize, ref UInt64 pSteamIDUser) { var call = this.GetFunction<NativeSendUserConnectAndAuthenticate>(this.Functions.SendUserConnectAndAuthenticate); return call(this.ObjectAddress, unIPClient, pvAuthBlob, cubAuthBlobSize, ref pSteamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCreateUnauthenticatedUserConnection(IntPtr thisobj, ref UInt64 ret);
		public UInt64 CreateUnauthenticatedUserConnection() { UInt64 ret = 0; var call = this.GetFunction<NativeCreateUnauthenticatedUserConnection>(this.Functions.CreateUnauthenticatedUserConnection); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSendUserDisconnect(IntPtr thisobj, UInt64 steamIDUser);
		public void SendUserDisconnect(UInt64 steamIDUser) { var call = this.GetFunction<NativeSendUserDisconnect>(this.Functions.SendUserDisconnect); call(this.ObjectAddress, steamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetServerType(IntPtr thisobj, UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 unSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetServerType(UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 unSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode) { var call = this.GetFunction<NativeSetServerType>(this.Functions.SetServerType); return call(this.ObjectAddress, unServerFlags, unGameIP, unGamePort, unSpectatorPort, usQueryPort, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchGameDir ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) ), bLANMode); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateUserData(IntPtr thisobj, UInt64 steamIDUser, string pchPlayerName, UInt32 uScore);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateUserData(UInt64 steamIDUser, string pchPlayerName, UInt32 uScore) { var call = this.GetFunction<NativeUpdateUserData>(this.Functions.UpdateUserData); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPlayerName ) ), uScore); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateStatus(IntPtr thisobj, Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName);
		public void UpdateStatus(Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName) { var call = this.GetFunction<NativeUpdateStatus>(this.Functions.UpdateStatus); call(this.ObjectAddress, cPlayers, cPlayersMax, cBotPlayers, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchServerName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pSpectatorServerName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchMapName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateSpectatorPort(IntPtr thisobj, UInt16 unSpectatorPort);
		public void UpdateSpectatorPort(UInt16 unSpectatorPort) { var call = this.GetFunction<NativeUpdateSpectatorPort>(this.Functions.UpdateSpectatorPort); call(this.ObjectAddress, unSpectatorPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetGameTags(IntPtr thisobj, string pchGameTags);
		public void SetGameTags(string pchGameTags) { var call = this.GetFunction<NativeSetGameTags>(this.Functions.SetGameTags); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchGameTags ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetGameData(IntPtr thisobj, string pchGameData);
		public void SetGameData(string pchGameData) { var call = this.GetFunction<NativeSetGameData>(this.Functions.SetGameData); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchGameData ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetCountOfSimultaneousGuestUsersPerSteamAccount(IntPtr thisobj, Int32 nCount);
		public void SetCountOfSimultaneousGuestUsersPerSteamAccount(Int32 nCount) { var call = this.GetFunction<NativeSetCountOfSimultaneousGuestUsersPerSteamAccount>(this.Functions.SetCountOfSimultaneousGuestUsersPerSteamAccount); call(this.ObjectAddress, nCount); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeEnumerateConnectedUsers(IntPtr thisobj, Int32 iterator, ref ConnectedUserInfo_t pConnectedUserInfo);
		[return: MarshalAs(UnmanagedType.I1)] public bool EnumerateConnectedUsers(Int32 iterator, ref ConnectedUserInfo_t pConnectedUserInfo) { var call = this.GetFunction<NativeEnumerateConnectedUsers>(this.Functions.EnumerateConnectedUsers); return call(this.ObjectAddress, iterator, ref pConnectedUserInfo); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetGameplayStats(IntPtr thisobj);
		public void GetGameplayStats() { var call = this.GetFunction<NativeGetGameplayStats>(this.Functions.GetGameplayStats); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetServerReputation(IntPtr thisobj);
		public UInt64 GetServerReputation() { var call = this.GetFunction<NativeGetServerReputation>(this.Functions.GetServerReputation); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestUserGroupStatus(IntPtr thisobj, UInt64 steamIDUser, UInt64 steamIDGroup);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestUserGroupStatus(UInt64 steamIDUser, UInt64 steamIDGroup) { var call = this.GetFunction<NativeRequestUserGroupStatus>(this.Functions.RequestUserGroupStatus); return call(this.ObjectAddress, steamIDUser, steamIDGroup); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetPublicIP(IntPtr thisobj);
		public UInt32 GetPublicIP() { var call = this.GetFunction<NativeGetPublicIP>(this.Functions.GetPublicIP); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAuthSessionTicket(IntPtr thisobj, byte[] pTicket, Int32 cbMaxTicket, ref UInt32 pcbTicket);
		public UInt32 GetAuthSessionTicket(byte[] pTicket, Int32 cbMaxTicket, ref UInt32 pcbTicket) { var call = this.GetFunction<NativeGetAuthSessionTicket>(this.Functions.GetAuthSessionTicket); return call(this.ObjectAddress, pTicket, cbMaxTicket, ref pcbTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EBeginAuthSessionResult NativeBeginAuthSession(IntPtr thisobj, byte[] pAuthTicket, Int32 cbAuthTicket, UInt64 steamID);
		public EBeginAuthSessionResult BeginAuthSession(byte[] pAuthTicket, Int32 cbAuthTicket, UInt64 steamID) { var call = this.GetFunction<NativeBeginAuthSession>(this.Functions.BeginAuthSession); return call(this.ObjectAddress, pAuthTicket, cbAuthTicket, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeEndAuthSession(IntPtr thisobj, UInt64 steamID);
		public void EndAuthSession(UInt64 steamID) { var call = this.GetFunction<NativeEndAuthSession>(this.Functions.EndAuthSession); call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCancelAuthTicket(IntPtr thisobj, UInt32 hAuthTicket);
		public void CancelAuthTicket(UInt32 hAuthTicket) { var call = this.GetFunction<NativeCancelAuthTicket>(this.Functions.CancelAuthTicket); call(this.ObjectAddress, hAuthTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsUserSubscribedAppInTicket(IntPtr thisobj, UInt64 steamID, UInt32 appID);
		public Int32 IsUserSubscribedAppInTicket(UInt64 steamID, UInt32 appID) { var call = this.GetFunction<NativeIsUserSubscribedAppInTicket>(this.Functions.IsUserSubscribedAppInTicket); return call(this.ObjectAddress, steamID, appID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool Native_GetUserAchievementStatus(IntPtr thisobj, UInt64 steamID, string pchAchievementName);
		[return: MarshalAs(UnmanagedType.I1)] public bool _GetUserAchievementStatus(UInt64 steamID, string pchAchievementName) { var call = this.GetFunction<Native_GetUserAchievementStatus>(this.Functions._GetUserAchievementStatus); return call(this.ObjectAddress, steamID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAchievementName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void Native_GSSetSpawnCount(IntPtr thisobj, UInt32 ucSpawn);
		public void _GSSetSpawnCount(UInt32 ucSpawn) { var call = this.GetFunction<Native_GSSetSpawnCount>(this.Functions._GSSetSpawnCount); call(this.ObjectAddress, ucSpawn); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool Native_GSGetSteam2GetEncryptionKeyToSendToNewClient(IntPtr thisobj, byte[] pvEncryptionKey, ref UInt32 pcbEncryptionKey, UInt32 cbMaxEncryptionKey);
		[return: MarshalAs(UnmanagedType.I1)] public bool _GSGetSteam2GetEncryptionKeyToSendToNewClient(byte[] pvEncryptionKey, ref UInt32 pcbEncryptionKey, UInt32 cbMaxEncryptionKey) { var call = this.GetFunction<Native_GSGetSteam2GetEncryptionKeyToSendToNewClient>(this.Functions._GSGetSteam2GetEncryptionKeyToSendToNewClient); return call(this.ObjectAddress, pvEncryptionKey, ref pcbEncryptionKey, cbMaxEncryptionKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool Native_GSSendSteam2UserConnect(IntPtr thisobj, UInt32 unUserID, byte[] pvRawKey, UInt32 unKeyLen, UInt32 unIPPublic, UInt16 usPort, byte[] pvCookie, UInt32 cubCookie);
		[return: MarshalAs(UnmanagedType.I1)] public bool _GSSendSteam2UserConnect(UInt32 unUserID, byte[] pvRawKey, UInt32 unKeyLen, UInt32 unIPPublic, UInt16 usPort, byte[] pvCookie, UInt32 cubCookie) { var call = this.GetFunction<Native_GSSendSteam2UserConnect>(this.Functions._GSSendSteam2UserConnect); return call(this.ObjectAddress, unUserID, pvRawKey, unKeyLen, unIPPublic, usPort, pvCookie, cubCookie); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool Native_GSSendSteam3UserConnect(IntPtr thisobj, UInt64 steamID, UInt32 unIPPublic, byte[] pvCookie, UInt32 cubCookie);
		[return: MarshalAs(UnmanagedType.I1)] public bool _GSSendSteam3UserConnect(UInt64 steamID, UInt32 unIPPublic, byte[] pvCookie, UInt32 cubCookie) { var call = this.GetFunction<Native_GSSendSteam3UserConnect>(this.Functions._GSSendSteam3UserConnect); return call(this.ObjectAddress, steamID, unIPPublic, pvCookie, cubCookie); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool Native_GSSendUserConnect(IntPtr thisobj, UInt32 unUserID, UInt32 unIPPublic, UInt16 usPort, byte[] pvCookie, UInt32 cubCookie);
		[return: MarshalAs(UnmanagedType.I1)] public bool _GSSendUserConnect(UInt32 unUserID, UInt32 unIPPublic, UInt16 usPort, byte[] pvCookie, UInt32 cubCookie) { var call = this.GetFunction<Native_GSSendUserConnect>(this.Functions._GSSendUserConnect); return call(this.ObjectAddress, unUserID, unIPPublic, usPort, pvCookie, cubCookie); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool Native_GSRemoveUserConnect(IntPtr thisobj, UInt32 unUserID);
		[return: MarshalAs(UnmanagedType.I1)] public bool _GSRemoveUserConnect(UInt32 unUserID) { var call = this.GetFunction<Native_GSRemoveUserConnect>(this.Functions._GSRemoveUserConnect); return call(this.ObjectAddress, unUserID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool Native_GSSendUserDisconnect(IntPtr thisobj, UInt64 steamID, UInt32 unUserID);
		[return: MarshalAs(UnmanagedType.I1)] public bool _GSSendUserDisconnect(UInt64 steamID, UInt32 unUserID) { var call = this.GetFunction<Native_GSSendUserDisconnect>(this.Functions._GSSendUserDisconnect); return call(this.ObjectAddress, steamID, unUserID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool Native_GSUpdateStatus(IntPtr thisobj, Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName);
		[return: MarshalAs(UnmanagedType.I1)] public bool _GSUpdateStatus(Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName) { var call = this.GetFunction<Native_GSUpdateStatus>(this.Functions._GSUpdateStatus); return call(this.ObjectAddress, cPlayers, cPlayersMax, cBotPlayers, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchServerName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pSpectatorServerName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchMapName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool Native_GSCreateUnauthenticatedUser(IntPtr thisobj, ref UInt64 pSteamID);
		[return: MarshalAs(UnmanagedType.I1)] public bool _GSCreateUnauthenticatedUser(ref UInt64 pSteamID) { var call = this.GetFunction<Native_GSCreateUnauthenticatedUser>(this.Functions._GSCreateUnauthenticatedUser); return call(this.ObjectAddress, ref pSteamID); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamNetworking004VTable
	{
		public IntPtr SendP2PPacket;
		public IntPtr IsP2PPacketAvailable;
		public IntPtr ReadP2PPacket;
		public IntPtr AcceptP2PSessionWithUser;
		public IntPtr CloseP2PSessionWithUser;
		public IntPtr GetP2PSessionState;
		public IntPtr CreateListenSocket;
		public IntPtr CreateP2PConnectionSocket;
		public IntPtr CreateConnectionSocket;
		public IntPtr DestroySocket;
		public IntPtr DestroyListenSocket;
		public IntPtr SendDataOnSocket;
		public IntPtr IsDataAvailableOnSocket;
		public IntPtr RetrieveDataFromSocket;
		public IntPtr IsDataAvailable;
		public IntPtr RetrieveData;
		public IntPtr GetSocketInfo;
		public IntPtr GetListenSocketInfo;
		public IntPtr GetSocketConnectionType;
		public IntPtr GetMaxPacketSize;
	}
	
	public class ISteamNetworking004 : NativeWrapper<ISteamNetworking004VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendP2PPacket(IntPtr thisobj, UInt64 steamIDRemote, byte[] pubData, UInt32 cubData, EP2PSend eP2PSendType, Int32 iVirtualPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendP2PPacket(UInt64 steamIDRemote, byte[] pubData, UInt32 cubData, EP2PSend eP2PSendType, Int32 iVirtualPort) { var call = this.GetFunction<NativeSendP2PPacket>(this.Functions.SendP2PPacket); return call(this.ObjectAddress, steamIDRemote, pubData, cubData, eP2PSendType, iVirtualPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsP2PPacketAvailable(IntPtr thisobj, ref UInt32 pcubMsgSize, Int32 iVirtualPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsP2PPacketAvailable(ref UInt32 pcubMsgSize, Int32 iVirtualPort) { var call = this.GetFunction<NativeIsP2PPacketAvailable>(this.Functions.IsP2PPacketAvailable); return call(this.ObjectAddress, ref pcubMsgSize, iVirtualPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeReadP2PPacket(IntPtr thisobj, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize, ref UInt64 psteamIDRemote, Int32 iVirtualPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool ReadP2PPacket(byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize, ref UInt64 psteamIDRemote, Int32 iVirtualPort) { var call = this.GetFunction<NativeReadP2PPacket>(this.Functions.ReadP2PPacket); return call(this.ObjectAddress, pubDest, cubDest, ref pcubMsgSize, ref psteamIDRemote, iVirtualPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAcceptP2PSessionWithUser(IntPtr thisobj, UInt64 steamIDRemote);
		[return: MarshalAs(UnmanagedType.I1)] public bool AcceptP2PSessionWithUser(UInt64 steamIDRemote) { var call = this.GetFunction<NativeAcceptP2PSessionWithUser>(this.Functions.AcceptP2PSessionWithUser); return call(this.ObjectAddress, steamIDRemote); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeCloseP2PSessionWithUser(IntPtr thisobj, UInt64 steamIDRemote);
		[return: MarshalAs(UnmanagedType.I1)] public bool CloseP2PSessionWithUser(UInt64 steamIDRemote) { var call = this.GetFunction<NativeCloseP2PSessionWithUser>(this.Functions.CloseP2PSessionWithUser); return call(this.ObjectAddress, steamIDRemote); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetP2PSessionState(IntPtr thisobj, UInt64 steamIDRemote, ref P2PSessionState_t pConnectionState);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetP2PSessionState(UInt64 steamIDRemote, ref P2PSessionState_t pConnectionState) { var call = this.GetFunction<NativeGetP2PSessionState>(this.Functions.GetP2PSessionState); return call(this.ObjectAddress, steamIDRemote, ref pConnectionState); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateListenSocket(IntPtr thisobj, Int32 nVirtualP2PPort, UInt32 nIP, UInt16 nPort, [MarshalAs(UnmanagedType.I1)] bool bAllowUseOfPacketRelay);
		public UInt32 CreateListenSocket(Int32 nVirtualP2PPort, UInt32 nIP, UInt16 nPort, [MarshalAs(UnmanagedType.I1)] bool bAllowUseOfPacketRelay) { var call = this.GetFunction<NativeCreateListenSocket>(this.Functions.CreateListenSocket); return call(this.ObjectAddress, nVirtualP2PPort, nIP, nPort, bAllowUseOfPacketRelay); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateP2PConnectionSocket(IntPtr thisobj, UInt64 steamIDTarget, Int32 nVirtualPort, Int32 nTimeoutSec, [MarshalAs(UnmanagedType.I1)] bool bAllowUseOfPacketRelay);
		public UInt32 CreateP2PConnectionSocket(UInt64 steamIDTarget, Int32 nVirtualPort, Int32 nTimeoutSec, [MarshalAs(UnmanagedType.I1)] bool bAllowUseOfPacketRelay) { var call = this.GetFunction<NativeCreateP2PConnectionSocket>(this.Functions.CreateP2PConnectionSocket); return call(this.ObjectAddress, steamIDTarget, nVirtualPort, nTimeoutSec, bAllowUseOfPacketRelay); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateConnectionSocket(IntPtr thisobj, UInt32 nIP, UInt16 nPort, Int32 nTimeoutSec);
		public UInt32 CreateConnectionSocket(UInt32 nIP, UInt16 nPort, Int32 nTimeoutSec) { var call = this.GetFunction<NativeCreateConnectionSocket>(this.Functions.CreateConnectionSocket); return call(this.ObjectAddress, nIP, nPort, nTimeoutSec); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeDestroySocket(IntPtr thisobj, UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd);
		[return: MarshalAs(UnmanagedType.I1)] public bool DestroySocket(UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd) { var call = this.GetFunction<NativeDestroySocket>(this.Functions.DestroySocket); return call(this.ObjectAddress, hSocket, bNotifyRemoteEnd); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeDestroyListenSocket(IntPtr thisobj, UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd);
		[return: MarshalAs(UnmanagedType.I1)] public bool DestroyListenSocket(UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd) { var call = this.GetFunction<NativeDestroyListenSocket>(this.Functions.DestroyListenSocket); return call(this.ObjectAddress, hSocket, bNotifyRemoteEnd); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendDataOnSocket(IntPtr thisobj, UInt32 hSocket, byte[] pubData, UInt32 cubData, [MarshalAs(UnmanagedType.I1)] bool bReliable);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendDataOnSocket(UInt32 hSocket, byte[] pubData, UInt32 cubData, [MarshalAs(UnmanagedType.I1)] bool bReliable) { var call = this.GetFunction<NativeSendDataOnSocket>(this.Functions.SendDataOnSocket); return call(this.ObjectAddress, hSocket, pubData, cubData, bReliable); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsDataAvailableOnSocket(IntPtr thisobj, UInt32 hSocket, ref UInt32 pcubMsgSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsDataAvailableOnSocket(UInt32 hSocket, ref UInt32 pcubMsgSize) { var call = this.GetFunction<NativeIsDataAvailableOnSocket>(this.Functions.IsDataAvailableOnSocket); return call(this.ObjectAddress, hSocket, ref pcubMsgSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRetrieveDataFromSocket(IntPtr thisobj, UInt32 hSocket, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool RetrieveDataFromSocket(UInt32 hSocket, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize) { var call = this.GetFunction<NativeRetrieveDataFromSocket>(this.Functions.RetrieveDataFromSocket); return call(this.ObjectAddress, hSocket, pubDest, cubDest, ref pcubMsgSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsDataAvailable(IntPtr thisobj, UInt32 hListenSocket, ref UInt32 pcubMsgSize, ref UInt32 phSocket);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsDataAvailable(UInt32 hListenSocket, ref UInt32 pcubMsgSize, ref UInt32 phSocket) { var call = this.GetFunction<NativeIsDataAvailable>(this.Functions.IsDataAvailable); return call(this.ObjectAddress, hListenSocket, ref pcubMsgSize, ref phSocket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRetrieveData(IntPtr thisobj, UInt32 hListenSocket, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize, ref UInt32 phSocket);
		[return: MarshalAs(UnmanagedType.I1)] public bool RetrieveData(UInt32 hListenSocket, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize, ref UInt32 phSocket) { var call = this.GetFunction<NativeRetrieveData>(this.Functions.RetrieveData); return call(this.ObjectAddress, hListenSocket, pubDest, cubDest, ref pcubMsgSize, ref phSocket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetSocketInfo(IntPtr thisobj, UInt32 hSocket, ref UInt64 pSteamIDRemote, ref Int32 peSocketStatus, ref UInt32 punIPRemote, ref UInt16 punPortRemote);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetSocketInfo(UInt32 hSocket, ref UInt64 pSteamIDRemote, ref Int32 peSocketStatus, ref UInt32 punIPRemote, ref UInt16 punPortRemote) { var call = this.GetFunction<NativeGetSocketInfo>(this.Functions.GetSocketInfo); return call(this.ObjectAddress, hSocket, ref pSteamIDRemote, ref peSocketStatus, ref punIPRemote, ref punPortRemote); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetListenSocketInfo(IntPtr thisobj, UInt32 hListenSocket, ref UInt32 pnIP, ref UInt16 pnPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetListenSocketInfo(UInt32 hListenSocket, ref UInt32 pnIP, ref UInt16 pnPort) { var call = this.GetFunction<NativeGetListenSocketInfo>(this.Functions.GetListenSocketInfo); return call(this.ObjectAddress, hListenSocket, ref pnIP, ref pnPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ESNetSocketConnectionType NativeGetSocketConnectionType(IntPtr thisobj, UInt32 hSocket);
		public ESNetSocketConnectionType GetSocketConnectionType(UInt32 hSocket) { var call = this.GetFunction<NativeGetSocketConnectionType>(this.Functions.GetSocketConnectionType); return call(this.ObjectAddress, hSocket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetMaxPacketSize(IntPtr thisobj, UInt32 hSocket);
		public Int32 GetMaxPacketSize(UInt32 hSocket) { var call = this.GetFunction<NativeGetMaxPacketSize>(this.Functions.GetMaxPacketSize); return call(this.ObjectAddress, hSocket); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamNetworking005VTable
	{
		public IntPtr SendP2PPacket;
		public IntPtr IsP2PPacketAvailable;
		public IntPtr ReadP2PPacket;
		public IntPtr AcceptP2PSessionWithUser;
		public IntPtr CloseP2PSessionWithUser;
		public IntPtr CloseP2PChannelWithUser;
		public IntPtr GetP2PSessionState;
		public IntPtr AllowP2PPacketRelay;
		public IntPtr CreateListenSocket;
		public IntPtr CreateP2PConnectionSocket;
		public IntPtr CreateConnectionSocket;
		public IntPtr DestroySocket;
		public IntPtr DestroyListenSocket;
		public IntPtr SendDataOnSocket;
		public IntPtr IsDataAvailableOnSocket;
		public IntPtr RetrieveDataFromSocket;
		public IntPtr IsDataAvailable;
		public IntPtr RetrieveData;
		public IntPtr GetSocketInfo;
		public IntPtr GetListenSocketInfo;
		public IntPtr GetSocketConnectionType;
		public IntPtr GetMaxPacketSize;
	}
	
	public class ISteamNetworking005 : NativeWrapper<ISteamNetworking005VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendP2PPacket(IntPtr thisobj, UInt64 steamIDRemote, byte[] pubData, UInt32 cubData, EP2PSend eP2PSendType, Int32 iVirtualPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendP2PPacket(UInt64 steamIDRemote, byte[] pubData, UInt32 cubData, EP2PSend eP2PSendType, Int32 iVirtualPort) { var call = this.GetFunction<NativeSendP2PPacket>(this.Functions.SendP2PPacket); return call(this.ObjectAddress, steamIDRemote, pubData, cubData, eP2PSendType, iVirtualPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsP2PPacketAvailable(IntPtr thisobj, ref UInt32 pcubMsgSize, Int32 iVirtualPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsP2PPacketAvailable(ref UInt32 pcubMsgSize, Int32 iVirtualPort) { var call = this.GetFunction<NativeIsP2PPacketAvailable>(this.Functions.IsP2PPacketAvailable); return call(this.ObjectAddress, ref pcubMsgSize, iVirtualPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeReadP2PPacket(IntPtr thisobj, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize, ref UInt64 psteamIDRemote, Int32 iVirtualPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool ReadP2PPacket(byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize, ref UInt64 psteamIDRemote, Int32 iVirtualPort) { var call = this.GetFunction<NativeReadP2PPacket>(this.Functions.ReadP2PPacket); return call(this.ObjectAddress, pubDest, cubDest, ref pcubMsgSize, ref psteamIDRemote, iVirtualPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAcceptP2PSessionWithUser(IntPtr thisobj, UInt64 steamIDRemote);
		[return: MarshalAs(UnmanagedType.I1)] public bool AcceptP2PSessionWithUser(UInt64 steamIDRemote) { var call = this.GetFunction<NativeAcceptP2PSessionWithUser>(this.Functions.AcceptP2PSessionWithUser); return call(this.ObjectAddress, steamIDRemote); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeCloseP2PSessionWithUser(IntPtr thisobj, UInt64 steamIDRemote);
		[return: MarshalAs(UnmanagedType.I1)] public bool CloseP2PSessionWithUser(UInt64 steamIDRemote) { var call = this.GetFunction<NativeCloseP2PSessionWithUser>(this.Functions.CloseP2PSessionWithUser); return call(this.ObjectAddress, steamIDRemote); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeCloseP2PChannelWithUser(IntPtr thisobj, UInt64 steamIDRemote, Int32 iVirtualPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool CloseP2PChannelWithUser(UInt64 steamIDRemote, Int32 iVirtualPort) { var call = this.GetFunction<NativeCloseP2PChannelWithUser>(this.Functions.CloseP2PChannelWithUser); return call(this.ObjectAddress, steamIDRemote, iVirtualPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetP2PSessionState(IntPtr thisobj, UInt64 steamIDRemote, ref P2PSessionState_t pConnectionState);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetP2PSessionState(UInt64 steamIDRemote, ref P2PSessionState_t pConnectionState) { var call = this.GetFunction<NativeGetP2PSessionState>(this.Functions.GetP2PSessionState); return call(this.ObjectAddress, steamIDRemote, ref pConnectionState); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAllowP2PPacketRelay(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bAllow);
		[return: MarshalAs(UnmanagedType.I1)] public bool AllowP2PPacketRelay([MarshalAs(UnmanagedType.I1)] bool bAllow) { var call = this.GetFunction<NativeAllowP2PPacketRelay>(this.Functions.AllowP2PPacketRelay); return call(this.ObjectAddress, bAllow); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateListenSocket(IntPtr thisobj, Int32 nVirtualP2PPort, UInt32 nIP, UInt16 nPort, [MarshalAs(UnmanagedType.I1)] bool bAllowUseOfPacketRelay);
		public UInt32 CreateListenSocket(Int32 nVirtualP2PPort, UInt32 nIP, UInt16 nPort, [MarshalAs(UnmanagedType.I1)] bool bAllowUseOfPacketRelay) { var call = this.GetFunction<NativeCreateListenSocket>(this.Functions.CreateListenSocket); return call(this.ObjectAddress, nVirtualP2PPort, nIP, nPort, bAllowUseOfPacketRelay); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateP2PConnectionSocket(IntPtr thisobj, UInt64 steamIDTarget, Int32 nVirtualPort, Int32 nTimeoutSec, [MarshalAs(UnmanagedType.I1)] bool bAllowUseOfPacketRelay);
		public UInt32 CreateP2PConnectionSocket(UInt64 steamIDTarget, Int32 nVirtualPort, Int32 nTimeoutSec, [MarshalAs(UnmanagedType.I1)] bool bAllowUseOfPacketRelay) { var call = this.GetFunction<NativeCreateP2PConnectionSocket>(this.Functions.CreateP2PConnectionSocket); return call(this.ObjectAddress, steamIDTarget, nVirtualPort, nTimeoutSec, bAllowUseOfPacketRelay); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateConnectionSocket(IntPtr thisobj, UInt32 nIP, UInt16 nPort, Int32 nTimeoutSec);
		public UInt32 CreateConnectionSocket(UInt32 nIP, UInt16 nPort, Int32 nTimeoutSec) { var call = this.GetFunction<NativeCreateConnectionSocket>(this.Functions.CreateConnectionSocket); return call(this.ObjectAddress, nIP, nPort, nTimeoutSec); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeDestroySocket(IntPtr thisobj, UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd);
		[return: MarshalAs(UnmanagedType.I1)] public bool DestroySocket(UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd) { var call = this.GetFunction<NativeDestroySocket>(this.Functions.DestroySocket); return call(this.ObjectAddress, hSocket, bNotifyRemoteEnd); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeDestroyListenSocket(IntPtr thisobj, UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd);
		[return: MarshalAs(UnmanagedType.I1)] public bool DestroyListenSocket(UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd) { var call = this.GetFunction<NativeDestroyListenSocket>(this.Functions.DestroyListenSocket); return call(this.ObjectAddress, hSocket, bNotifyRemoteEnd); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendDataOnSocket(IntPtr thisobj, UInt32 hSocket, byte[] pubData, UInt32 cubData, [MarshalAs(UnmanagedType.I1)] bool bReliable);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendDataOnSocket(UInt32 hSocket, byte[] pubData, UInt32 cubData, [MarshalAs(UnmanagedType.I1)] bool bReliable) { var call = this.GetFunction<NativeSendDataOnSocket>(this.Functions.SendDataOnSocket); return call(this.ObjectAddress, hSocket, pubData, cubData, bReliable); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsDataAvailableOnSocket(IntPtr thisobj, UInt32 hSocket, ref UInt32 pcubMsgSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsDataAvailableOnSocket(UInt32 hSocket, ref UInt32 pcubMsgSize) { var call = this.GetFunction<NativeIsDataAvailableOnSocket>(this.Functions.IsDataAvailableOnSocket); return call(this.ObjectAddress, hSocket, ref pcubMsgSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRetrieveDataFromSocket(IntPtr thisobj, UInt32 hSocket, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool RetrieveDataFromSocket(UInt32 hSocket, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize) { var call = this.GetFunction<NativeRetrieveDataFromSocket>(this.Functions.RetrieveDataFromSocket); return call(this.ObjectAddress, hSocket, pubDest, cubDest, ref pcubMsgSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsDataAvailable(IntPtr thisobj, UInt32 hListenSocket, ref UInt32 pcubMsgSize, ref UInt32 phSocket);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsDataAvailable(UInt32 hListenSocket, ref UInt32 pcubMsgSize, ref UInt32 phSocket) { var call = this.GetFunction<NativeIsDataAvailable>(this.Functions.IsDataAvailable); return call(this.ObjectAddress, hListenSocket, ref pcubMsgSize, ref phSocket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRetrieveData(IntPtr thisobj, UInt32 hListenSocket, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize, ref UInt32 phSocket);
		[return: MarshalAs(UnmanagedType.I1)] public bool RetrieveData(UInt32 hListenSocket, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize, ref UInt32 phSocket) { var call = this.GetFunction<NativeRetrieveData>(this.Functions.RetrieveData); return call(this.ObjectAddress, hListenSocket, pubDest, cubDest, ref pcubMsgSize, ref phSocket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetSocketInfo(IntPtr thisobj, UInt32 hSocket, ref UInt64 pSteamIDRemote, ref Int32 peSocketStatus, ref UInt32 punIPRemote, ref UInt16 punPortRemote);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetSocketInfo(UInt32 hSocket, ref UInt64 pSteamIDRemote, ref Int32 peSocketStatus, ref UInt32 punIPRemote, ref UInt16 punPortRemote) { var call = this.GetFunction<NativeGetSocketInfo>(this.Functions.GetSocketInfo); return call(this.ObjectAddress, hSocket, ref pSteamIDRemote, ref peSocketStatus, ref punIPRemote, ref punPortRemote); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetListenSocketInfo(IntPtr thisobj, UInt32 hListenSocket, ref UInt32 pnIP, ref UInt16 pnPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetListenSocketInfo(UInt32 hListenSocket, ref UInt32 pnIP, ref UInt16 pnPort) { var call = this.GetFunction<NativeGetListenSocketInfo>(this.Functions.GetListenSocketInfo); return call(this.ObjectAddress, hListenSocket, ref pnIP, ref pnPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ESNetSocketConnectionType NativeGetSocketConnectionType(IntPtr thisobj, UInt32 hSocket);
		public ESNetSocketConnectionType GetSocketConnectionType(UInt32 hSocket) { var call = this.GetFunction<NativeGetSocketConnectionType>(this.Functions.GetSocketConnectionType); return call(this.ObjectAddress, hSocket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetMaxPacketSize(IntPtr thisobj, UInt32 hSocket);
		public Int32 GetMaxPacketSize(UInt32 hSocket) { var call = this.GetFunction<NativeGetMaxPacketSize>(this.Functions.GetMaxPacketSize); return call(this.ObjectAddress, hSocket); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamAppTicket001VTable
	{
		public IntPtr GetAppOwnershipTicketExtendedData;
	}
	
	public class ISteamAppTicket001 : NativeWrapper<ISteamAppTicket001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppOwnershipTicketExtendedData(IntPtr thisobj, UInt32 nAppID, byte[] pvBuffer, UInt32 cbBufferLength, ref Int32 arg4, ref Int32 arg5, ref UInt32 ticket_length, ref UInt32 signature_length);
		public UInt32 GetAppOwnershipTicketExtendedData(UInt32 nAppID, byte[] pvBuffer, UInt32 cbBufferLength, ref Int32 arg4, ref Int32 arg5, ref UInt32 ticket_length, ref UInt32 signature_length) { var call = this.GetFunction<NativeGetAppOwnershipTicketExtendedData>(this.Functions.GetAppOwnershipTicketExtendedData); return call(this.ObjectAddress, nAppID, pvBuffer, cbBufferLength, ref arg4, ref arg5, ref ticket_length, ref signature_length); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamGameStats001VTable
	{
		public IntPtr GetNewSession;
		public IntPtr EndSession;
		public IntPtr AddSessionAttributeInt;
		public IntPtr AddSessionAttributeString;
		public IntPtr AddSessionAttributeFloat;
		public IntPtr AddNewRow;
		public IntPtr CommitRow;
		public IntPtr CommitOutstandingRows;
		public IntPtr AddRowAttributeInt;
		public IntPtr AddRowAtributeString;
		public IntPtr AddRowAttributeFloat;
		public IntPtr AddSessionAttributeInt64;
		public IntPtr AddRowAttributeInt64;
	}
	
	public class ISteamGameStats001 : NativeWrapper<ISteamGameStats001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetNewSession(IntPtr thisobj, SByte nAccountType, UInt64 ulAccountID, Int32 nAppID, UInt32 rtTimeStarted);
		public UInt64 GetNewSession(SByte nAccountType, UInt64 ulAccountID, Int32 nAppID, UInt32 rtTimeStarted) { var call = this.GetFunction<NativeGetNewSession>(this.Functions.GetNewSession); return call(this.ObjectAddress, nAccountType, ulAccountID, nAppID, rtTimeStarted); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeEndSession(IntPtr thisobj, UInt64 ulSessionID, UInt32 rtTimeEnded, Int32 nReasonCode);
		public UInt64 EndSession(UInt64 ulSessionID, UInt32 rtTimeEnded, Int32 nReasonCode) { var call = this.GetFunction<NativeEndSession>(this.Functions.EndSession); return call(this.ObjectAddress, ulSessionID, rtTimeEnded, nReasonCode); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EResult NativeAddSessionAttributeInt(IntPtr thisobj, UInt64 ulSessionID, string pstrName, Int32 nData);
		public EResult AddSessionAttributeInt(UInt64 ulSessionID, string pstrName, Int32 nData) { var call = this.GetFunction<NativeAddSessionAttributeInt>(this.Functions.AddSessionAttributeInt); return call(this.ObjectAddress, ulSessionID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pstrName ) ), nData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EResult NativeAddSessionAttributeString(IntPtr thisobj, UInt64 ulSessionID, string pstrName, string pstrData);
		public EResult AddSessionAttributeString(UInt64 ulSessionID, string pstrName, string pstrData) { var call = this.GetFunction<NativeAddSessionAttributeString>(this.Functions.AddSessionAttributeString); return call(this.ObjectAddress, ulSessionID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pstrName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pstrData ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EResult NativeAddSessionAttributeFloat(IntPtr thisobj, UInt64 ulSessionID, string pstrName, float fData);
		public EResult AddSessionAttributeFloat(UInt64 ulSessionID, string pstrName, float fData) { var call = this.GetFunction<NativeAddSessionAttributeFloat>(this.Functions.AddSessionAttributeFloat); return call(this.ObjectAddress, ulSessionID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pstrName ) ), fData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EResult NativeAddNewRow(IntPtr thisobj, ref UInt64 pulRowID, UInt64 ulSessionID, string pstrTableName);
		public EResult AddNewRow(ref UInt64 pulRowID, UInt64 ulSessionID, string pstrTableName) { var call = this.GetFunction<NativeAddNewRow>(this.Functions.AddNewRow); return call(this.ObjectAddress, ref pulRowID, ulSessionID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pstrTableName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EResult NativeCommitRow(IntPtr thisobj, UInt64 ulRowID);
		public EResult CommitRow(UInt64 ulRowID) { var call = this.GetFunction<NativeCommitRow>(this.Functions.CommitRow); return call(this.ObjectAddress, ulRowID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EResult NativeCommitOutstandingRows(IntPtr thisobj, UInt64 ulSessionID);
		public EResult CommitOutstandingRows(UInt64 ulSessionID) { var call = this.GetFunction<NativeCommitOutstandingRows>(this.Functions.CommitOutstandingRows); return call(this.ObjectAddress, ulSessionID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EResult NativeAddRowAttributeInt(IntPtr thisobj, UInt64 ulRowID, string pstrName, Int32 nData);
		public EResult AddRowAttributeInt(UInt64 ulRowID, string pstrName, Int32 nData) { var call = this.GetFunction<NativeAddRowAttributeInt>(this.Functions.AddRowAttributeInt); return call(this.ObjectAddress, ulRowID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pstrName ) ), nData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EResult NativeAddRowAtributeString(IntPtr thisobj, UInt64 ulRowID, string pstrName, string pstrData);
		public EResult AddRowAtributeString(UInt64 ulRowID, string pstrName, string pstrData) { var call = this.GetFunction<NativeAddRowAtributeString>(this.Functions.AddRowAtributeString); return call(this.ObjectAddress, ulRowID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pstrName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pstrData ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EResult NativeAddRowAttributeFloat(IntPtr thisobj, UInt64 ulRowID, string pstrName, float fData);
		public EResult AddRowAttributeFloat(UInt64 ulRowID, string pstrName, float fData) { var call = this.GetFunction<NativeAddRowAttributeFloat>(this.Functions.AddRowAttributeFloat); return call(this.ObjectAddress, ulRowID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pstrName ) ), fData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EResult NativeAddSessionAttributeInt64(IntPtr thisobj, UInt64 ulSessionID, string pstrName, Int64 llData);
		public EResult AddSessionAttributeInt64(UInt64 ulSessionID, string pstrName, Int64 llData) { var call = this.GetFunction<NativeAddSessionAttributeInt64>(this.Functions.AddSessionAttributeInt64); return call(this.ObjectAddress, ulSessionID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pstrName ) ), llData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EResult NativeAddRowAttributeInt64(IntPtr thisobj, UInt64 ulRowID, string pstrName, Int64 llData);
		public EResult AddRowAttributeInt64(UInt64 ulRowID, string pstrName, Int64 llData) { var call = this.GetFunction<NativeAddRowAttributeInt64>(this.Functions.AddRowAttributeInt64); return call(this.ObjectAddress, ulRowID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pstrName ) ), llData); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamFriends001VTable
	{
		public IntPtr GetPersonaName;
		public IntPtr SetPersonaName;
		public IntPtr GetPersonaState;
		public IntPtr SetPersonaState;
		public IntPtr AddFriend;
		public IntPtr RemoveFriend;
		public IntPtr HasFriend;
		public IntPtr GetFriendRelationship;
		public IntPtr GetFriendPersonaState;
		public IntPtr Deprecated_GetFriendGamePlayed;
		public IntPtr GetFriendPersonaName;
		public IntPtr AddFriendByName;
		public IntPtr GetFriendCount;
		public IntPtr GetFriendByIndex;
		public IntPtr SendMsgToFriend;
		public IntPtr SetFriendRegValue;
		public IntPtr GetFriendRegValue;
		public IntPtr GetFriendPersonaNameHistory;
		public IntPtr GetChatMessage;
		public IntPtr SendMsgToFriend1;
		public IntPtr GetChatIDOfChatHistoryStart;
		public IntPtr SetChatHistoryStart;
		public IntPtr ClearChatHistory;
		public IntPtr InviteFriendByEmail;
		public IntPtr GetBlockedFriendCount;
		public IntPtr GetFriendGamePlayed;
		public IntPtr GetFriendGamePlayed2;
	}
	
	public class ISteamFriends001 : NativeWrapper<ISteamFriends001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetPersonaName(IntPtr thisobj);
		public string GetPersonaName() { var call = this.GetFunction<NativeGetPersonaName>(this.Functions.GetPersonaName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPersonaName(IntPtr thisobj, string pchPersonaName);
		public void SetPersonaName(string pchPersonaName) { var call = this.GetFunction<NativeSetPersonaName>(this.Functions.SetPersonaName); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPersonaName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetPersonaState(IntPtr thisobj);
		public EPersonaState GetPersonaState() { var call = this.GetFunction<NativeGetPersonaState>(this.Functions.GetPersonaState); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetPersonaState(IntPtr thisobj, EPersonaState ePersonaState);
		public void SetPersonaState(EPersonaState ePersonaState) { var call = this.GetFunction<NativeSetPersonaState>(this.Functions.SetPersonaState); call(this.ObjectAddress, ePersonaState); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAddFriend(IntPtr thisobj, UInt64 steamIDFriend);
		[return: MarshalAs(UnmanagedType.I1)] public bool AddFriend(UInt64 steamIDFriend) { var call = this.GetFunction<NativeAddFriend>(this.Functions.AddFriend); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveFriend(IntPtr thisobj, UInt64 steamIDFriend);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveFriend(UInt64 steamIDFriend) { var call = this.GetFunction<NativeRemoveFriend>(this.Functions.RemoveFriend); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeHasFriend(IntPtr thisobj, UInt64 steamIDFriend);
		[return: MarshalAs(UnmanagedType.I1)] public bool HasFriend(UInt64 steamIDFriend) { var call = this.GetFunction<NativeHasFriend>(this.Functions.HasFriend); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EFriendRelationship NativeGetFriendRelationship(IntPtr thisobj, UInt64 steamIDFriend);
		public EFriendRelationship GetFriendRelationship(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendRelationship>(this.Functions.GetFriendRelationship); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPersonaState NativeGetFriendPersonaState(IntPtr thisobj, UInt64 steamIDFriend);
		public EPersonaState GetFriendPersonaState(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaState>(this.Functions.GetFriendPersonaState); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeDeprecated_GetFriendGamePlayed(IntPtr thisobj, UInt64 steamIDFriend, ref Int32 pnGameID, ref UInt32 punGameIP, ref UInt16 pusGamePort);
		[return: MarshalAs(UnmanagedType.I1)] public bool Deprecated_GetFriendGamePlayed(UInt64 steamIDFriend, ref Int32 pnGameID, ref UInt32 punGameIP, ref UInt16 pusGamePort) { var call = this.GetFunction<NativeDeprecated_GetFriendGamePlayed>(this.Functions.Deprecated_GetFriendGamePlayed); return call(this.ObjectAddress, steamIDFriend, ref pnGameID, ref punGameIP, ref pusGamePort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaName(IntPtr thisobj, UInt64 steamIDFriend);
		public string GetFriendPersonaName(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetFriendPersonaName>(this.Functions.GetFriendPersonaName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDFriend) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddFriendByName(IntPtr thisobj, string pchEmailOrAccountName);
		public Int32 AddFriendByName(string pchEmailOrAccountName) { var call = this.GetFunction<NativeAddFriendByName>(this.Functions.AddFriendByName); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchEmailOrAccountName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFriendCount(IntPtr thisobj);
		public Int32 GetFriendCount() { var call = this.GetFunction<NativeGetFriendCount>(this.Functions.GetFriendCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetFriendByIndex(IntPtr thisobj, ref UInt64 ret, Int32 iFriend);
		public UInt64 GetFriendByIndex(Int32 iFriend) { UInt64 ret = 0; var call = this.GetFunction<NativeGetFriendByIndex>(this.Functions.GetFriendByIndex); call(this.ObjectAddress, ref ret, iFriend); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSendMsgToFriend(IntPtr thisobj, UInt64 steamIDFriend, EChatEntryType eFriendMsgType, string pchMsgBody);
		public void SendMsgToFriend(UInt64 steamIDFriend, EChatEntryType eFriendMsgType, string pchMsgBody) { var call = this.GetFunction<NativeSendMsgToFriend>(this.Functions.SendMsgToFriend); call(this.ObjectAddress, steamIDFriend, eFriendMsgType, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchMsgBody ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetFriendRegValue(IntPtr thisobj, UInt64 steamIDFriend, string pchKey, string pchValue);
		public void SetFriendRegValue(UInt64 steamIDFriend, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetFriendRegValue>(this.Functions.SetFriendRegValue); call(this.ObjectAddress, steamIDFriend, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendRegValue(IntPtr thisobj, UInt64 steamIDFriend, string pchKey);
		public string GetFriendRegValue(UInt64 steamIDFriend, string pchKey) { var call = this.GetFunction<NativeGetFriendRegValue>(this.Functions.GetFriendRegValue); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDFriend, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFriendPersonaNameHistory(IntPtr thisobj, UInt64 steamIDFriend, Int32 iPersonaName);
		public string GetFriendPersonaNameHistory(UInt64 steamIDFriend, Int32 iPersonaName) { var call = this.GetFunction<NativeGetFriendPersonaNameHistory>(this.Functions.GetFriendPersonaNameHistory); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDFriend, iPersonaName) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetChatMessage(IntPtr thisobj, UInt64 steamIDFriend, Int32 iChatID, byte[] pvData, Int32 cubData, ref EChatEntryType peFriendMsgType);
		public Int32 GetChatMessage(UInt64 steamIDFriend, Int32 iChatID, byte[] pvData, Int32 cubData, ref EChatEntryType peFriendMsgType) { var call = this.GetFunction<NativeGetChatMessage>(this.Functions.GetChatMessage); return call(this.ObjectAddress, steamIDFriend, iChatID, pvData, cubData, ref peFriendMsgType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendMsgToFriend1(IntPtr thisobj, UInt64 steamIDFriend, EChatEntryType eFriendMsgType, byte[] pvMsgBody, Int32 cubMsgBody);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendMsgToFriend(UInt64 steamIDFriend, EChatEntryType eFriendMsgType, byte[] pvMsgBody, Int32 cubMsgBody) { var call = this.GetFunction<NativeSendMsgToFriend1>(this.Functions.SendMsgToFriend1); return call(this.ObjectAddress, steamIDFriend, eFriendMsgType, pvMsgBody, cubMsgBody); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetChatIDOfChatHistoryStart(IntPtr thisobj, UInt64 steamIDFriend);
		public Int32 GetChatIDOfChatHistoryStart(UInt64 steamIDFriend) { var call = this.GetFunction<NativeGetChatIDOfChatHistoryStart>(this.Functions.GetChatIDOfChatHistoryStart); return call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetChatHistoryStart(IntPtr thisobj, UInt64 steamIDFriend, Int32 iChatID);
		public void SetChatHistoryStart(UInt64 steamIDFriend, Int32 iChatID) { var call = this.GetFunction<NativeSetChatHistoryStart>(this.Functions.SetChatHistoryStart); call(this.ObjectAddress, steamIDFriend, iChatID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeClearChatHistory(IntPtr thisobj, UInt64 steamIDFriend);
		public void ClearChatHistory(UInt64 steamIDFriend) { var call = this.GetFunction<NativeClearChatHistory>(this.Functions.ClearChatHistory); call(this.ObjectAddress, steamIDFriend); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInviteFriendByEmail(IntPtr thisobj, string pchEmailOrAccountName);
		public Int32 InviteFriendByEmail(string pchEmailOrAccountName) { var call = this.GetFunction<NativeInviteFriendByEmail>(this.Functions.InviteFriendByEmail); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchEmailOrAccountName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetBlockedFriendCount(IntPtr thisobj);
		public UInt32 GetBlockedFriendCount() { var call = this.GetFunction<NativeGetBlockedFriendCount>(this.Functions.GetBlockedFriendCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFriendGamePlayed(IntPtr thisobj, UInt64 steamIDFriend, ref UInt64 pulGameID, ref UInt32 punGameIP, ref UInt16 pusGamePort);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFriendGamePlayed(UInt64 steamIDFriend, ref UInt64 pulGameID, ref UInt32 punGameIP, ref UInt16 pusGamePort) { var call = this.GetFunction<NativeGetFriendGamePlayed>(this.Functions.GetFriendGamePlayed); return call(this.ObjectAddress, steamIDFriend, ref pulGameID, ref punGameIP, ref pusGamePort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFriendGamePlayed2(IntPtr thisobj, UInt64 steamDIFriend, ref UInt64 pulGameID, ref UInt32 punGameIP, ref UInt16 pusGamePort, ref UInt16 pusQueryPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFriendGamePlayed2(UInt64 steamDIFriend, ref UInt64 pulGameID, ref UInt32 punGameIP, ref UInt16 pusGamePort, ref UInt16 pusQueryPort) { var call = this.GetFunction<NativeGetFriendGamePlayed2>(this.Functions.GetFriendGamePlayed2); return call(this.ObjectAddress, steamDIFriend, ref pulGameID, ref punGameIP, ref pusGamePort, ref pusQueryPort); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUser012VTable
	{
		public IntPtr GetHSteamUser;
		public IntPtr LoggedOn;
		public IntPtr GetSteamID;
		public IntPtr InitiateGameConnection;
		public IntPtr TerminateGameConnection;
		public IntPtr TrackAppUsageEvent;
		public IntPtr GetUserDataFolder;
		public IntPtr StartVoiceRecording;
		public IntPtr StopVoiceRecording;
		public IntPtr GetCompressedVoice;
		public IntPtr DecompressVoice;
		public IntPtr GetAuthSessionTicket;
		public IntPtr BeginAuthSession;
		public IntPtr EndAuthSession;
		public IntPtr CancelAuthTicket;
		public IntPtr UserHasLicenseForApp;
	}
	
	public class ISteamUser012 : NativeWrapper<ISteamUser012VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetHSteamUser(IntPtr thisobj);
		public Int32 GetHSteamUser() { var call = this.GetFunction<NativeGetHSteamUser>(this.Functions.GetHSteamUser); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetSteamID(IntPtr thisobj, ref UInt64 ret);
		public UInt64 GetSteamID() { UInt64 ret = 0; var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitiateGameConnection(IntPtr thisobj, byte[] pAuthBlob, Int32 cbMaxAuthBlob, UInt64 steamIDGameServer, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure);
		public Int32 InitiateGameConnection(byte[] pAuthBlob, Int32 cbMaxAuthBlob, UInt64 steamIDGameServer, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure) { var call = this.GetFunction<NativeInitiateGameConnection>(this.Functions.InitiateGameConnection); return call(this.ObjectAddress, pAuthBlob, cbMaxAuthBlob, steamIDGameServer, unIPServer, usPortServer, bSecure); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTerminateGameConnection(IntPtr thisobj, UInt32 unIPServer, UInt16 usPortServer);
		public void TerminateGameConnection(UInt32 unIPServer, UInt16 usPortServer) { var call = this.GetFunction<NativeTerminateGameConnection>(this.Functions.TerminateGameConnection); call(this.ObjectAddress, unIPServer, usPortServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTrackAppUsageEvent(IntPtr thisobj, UInt64 gameID, EAppUsageEvent eAppUsageEvent, string arg3);
		public void TrackAppUsageEvent(UInt64 gameID, EAppUsageEvent eAppUsageEvent, string arg3) { var call = this.GetFunction<NativeTrackAppUsageEvent>(this.Functions.TrackAppUsageEvent); call(this.ObjectAddress, gameID, eAppUsageEvent, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg3 ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserDataFolder(IntPtr thisobj, string pchBuffer, Int32 cubBuffer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserDataFolder(string pchBuffer, Int32 cubBuffer) { var call = this.GetFunction<NativeGetUserDataFolder>(this.Functions.GetUserDataFolder); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchBuffer ) ), cubBuffer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeStartVoiceRecording(IntPtr thisobj);
		public void StartVoiceRecording() { var call = this.GetFunction<NativeStartVoiceRecording>(this.Functions.StartVoiceRecording); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeStopVoiceRecording(IntPtr thisobj);
		public void StopVoiceRecording() { var call = this.GetFunction<NativeStopVoiceRecording>(this.Functions.StopVoiceRecording); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EVoiceResult NativeGetCompressedVoice(IntPtr thisobj, byte[] pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten);
		public EVoiceResult GetCompressedVoice(byte[] pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten) { var call = this.GetFunction<NativeGetCompressedVoice>(this.Functions.GetCompressedVoice); return call(this.ObjectAddress, pDestBuffer, cbDestBufferSize, ref nBytesWritten); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EVoiceResult NativeDecompressVoice(IntPtr thisobj, byte[] pCompressed, UInt32 cbCompressed, byte[] pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten);
		public EVoiceResult DecompressVoice(byte[] pCompressed, UInt32 cbCompressed, byte[] pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten) { var call = this.GetFunction<NativeDecompressVoice>(this.Functions.DecompressVoice); return call(this.ObjectAddress, pCompressed, cbCompressed, pDestBuffer, cbDestBufferSize, ref nBytesWritten); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAuthSessionTicket(IntPtr thisobj, byte[] pTicket, Int32 cbMaxTicket, ref UInt32 pcbTicket);
		public UInt32 GetAuthSessionTicket(byte[] pTicket, Int32 cbMaxTicket, ref UInt32 pcbTicket) { var call = this.GetFunction<NativeGetAuthSessionTicket>(this.Functions.GetAuthSessionTicket); return call(this.ObjectAddress, pTicket, cbMaxTicket, ref pcbTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EBeginAuthSessionResult NativeBeginAuthSession(IntPtr thisobj, byte[] pAuthTicket, Int32 cbAuthTicket, UInt64 steamID);
		public EBeginAuthSessionResult BeginAuthSession(byte[] pAuthTicket, Int32 cbAuthTicket, UInt64 steamID) { var call = this.GetFunction<NativeBeginAuthSession>(this.Functions.BeginAuthSession); return call(this.ObjectAddress, pAuthTicket, cbAuthTicket, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeEndAuthSession(IntPtr thisobj, UInt64 steamID);
		public void EndAuthSession(UInt64 steamID) { var call = this.GetFunction<NativeEndAuthSession>(this.Functions.EndAuthSession); call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCancelAuthTicket(IntPtr thisobj, UInt32 hAuthTicket);
		public void CancelAuthTicket(UInt32 hAuthTicket) { var call = this.GetFunction<NativeCancelAuthTicket>(this.Functions.CancelAuthTicket); call(this.ObjectAddress, hAuthTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeUserHasLicenseForApp(IntPtr thisobj, UInt64 steamID, UInt32 appID);
		public UInt32 UserHasLicenseForApp(UInt64 steamID, UInt32 appID) { var call = this.GetFunction<NativeUserHasLicenseForApp>(this.Functions.UserHasLicenseForApp); return call(this.ObjectAddress, steamID, appID); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamMatchmakingRulesResponseVTable
	{
		public IntPtr RulesResponded;
		public IntPtr RulesFailedToRespond;
		public IntPtr RulesRefreshComplete;
	}
	
	public class ISteamMatchmakingRulesResponse : NativeWrapper<ISteamMatchmakingRulesResponseVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRulesResponded(IntPtr thisobj, string pchRule, string pchValue);
		public void RulesResponded(string pchRule, string pchValue) { var call = this.GetFunction<NativeRulesResponded>(this.Functions.RulesResponded); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchRule ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRulesFailedToRespond(IntPtr thisobj);
		public void RulesFailedToRespond() { var call = this.GetFunction<NativeRulesFailedToRespond>(this.Functions.RulesFailedToRespond); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRulesRefreshComplete(IntPtr thisobj);
		public void RulesRefreshComplete() { var call = this.GetFunction<NativeRulesRefreshComplete>(this.Functions.RulesRefreshComplete); call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamMatchmakingServers002VTable
	{
		public IntPtr RequestInternetServerList;
		public IntPtr RequestLANServerList;
		public IntPtr RequestFriendsServerList;
		public IntPtr RequestFavoritesServerList;
		public IntPtr RequestHistoryServerList;
		public IntPtr RequestSpectatorServerList;
		public IntPtr ReleaseRequest;
		public IntPtr GetServerDetails;
		public IntPtr CancelQuery;
		public IntPtr RefreshQuery;
		public IntPtr IsRefreshing;
		public IntPtr GetServerCount;
		public IntPtr RefreshServer;
		public IntPtr PingServer;
		public IntPtr PlayerDetails;
		public IntPtr ServerRules;
		public IntPtr CancelServerQuery;
	}
	
	public class ISteamMatchmakingServers002 : NativeWrapper<ISteamMatchmakingServers002VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeRequestInternetServerList(IntPtr thisobj, UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse002 pRequestServersResponse);
		public IntPtr RequestInternetServerList(UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse002 pRequestServersResponse) { var call = this.GetFunction<NativeRequestInternetServerList>(this.Functions.RequestInternetServerList); return call(this.ObjectAddress, iApp, ref ppchFilters, nFilters, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeRequestLANServerList(IntPtr thisobj, UInt32 iApp, ref ISteamMatchmakingServerListResponse002 pRequestServersResponse);
		public IntPtr RequestLANServerList(UInt32 iApp, ref ISteamMatchmakingServerListResponse002 pRequestServersResponse) { var call = this.GetFunction<NativeRequestLANServerList>(this.Functions.RequestLANServerList); return call(this.ObjectAddress, iApp, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeRequestFriendsServerList(IntPtr thisobj, UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse002 pRequestServersResponse);
		public IntPtr RequestFriendsServerList(UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse002 pRequestServersResponse) { var call = this.GetFunction<NativeRequestFriendsServerList>(this.Functions.RequestFriendsServerList); return call(this.ObjectAddress, iApp, ref ppchFilters, nFilters, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeRequestFavoritesServerList(IntPtr thisobj, UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse002 pRequestServersResponse);
		public IntPtr RequestFavoritesServerList(UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse002 pRequestServersResponse) { var call = this.GetFunction<NativeRequestFavoritesServerList>(this.Functions.RequestFavoritesServerList); return call(this.ObjectAddress, iApp, ref ppchFilters, nFilters, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeRequestHistoryServerList(IntPtr thisobj, UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse002 pRequestServersResponse);
		public IntPtr RequestHistoryServerList(UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse002 pRequestServersResponse) { var call = this.GetFunction<NativeRequestHistoryServerList>(this.Functions.RequestHistoryServerList); return call(this.ObjectAddress, iApp, ref ppchFilters, nFilters, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeRequestSpectatorServerList(IntPtr thisobj, UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse002 pRequestServersResponse);
		public IntPtr RequestSpectatorServerList(UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse002 pRequestServersResponse) { var call = this.GetFunction<NativeRequestSpectatorServerList>(this.Functions.RequestSpectatorServerList); return call(this.ObjectAddress, iApp, ref ppchFilters, nFilters, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeReleaseRequest(IntPtr thisobj, byte[] hServerListRequest);
		public void ReleaseRequest(byte[] hServerListRequest) { var call = this.GetFunction<NativeReleaseRequest>(this.Functions.ReleaseRequest); call(this.ObjectAddress, hServerListRequest); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate gameserveritem_t NativeGetServerDetails(IntPtr thisobj, byte[] hRequest, Int32 iServer);
		public gameserveritem_t GetServerDetails(byte[] hRequest, Int32 iServer) { var call = this.GetFunction<NativeGetServerDetails>(this.Functions.GetServerDetails); return call(this.ObjectAddress, hRequest, iServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCancelQuery(IntPtr thisobj, byte[] hRequest);
		public void CancelQuery(byte[] hRequest) { var call = this.GetFunction<NativeCancelQuery>(this.Functions.CancelQuery); call(this.ObjectAddress, hRequest); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRefreshQuery(IntPtr thisobj, byte[] hRequest);
		public void RefreshQuery(byte[] hRequest) { var call = this.GetFunction<NativeRefreshQuery>(this.Functions.RefreshQuery); call(this.ObjectAddress, hRequest); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsRefreshing(IntPtr thisobj, byte[] hRequest);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsRefreshing(byte[] hRequest) { var call = this.GetFunction<NativeIsRefreshing>(this.Functions.IsRefreshing); return call(this.ObjectAddress, hRequest); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetServerCount(IntPtr thisobj, byte[] hRequest);
		public Int32 GetServerCount(byte[] hRequest) { var call = this.GetFunction<NativeGetServerCount>(this.Functions.GetServerCount); return call(this.ObjectAddress, hRequest); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRefreshServer(IntPtr thisobj, byte[] hRequest, Int32 iServer);
		public void RefreshServer(byte[] hRequest, Int32 iServer) { var call = this.GetFunction<NativeRefreshServer>(this.Functions.RefreshServer); call(this.ObjectAddress, hRequest, iServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePingServer(IntPtr thisobj, UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingPingResponse pRequestServersResponse);
		public Int32 PingServer(UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingPingResponse pRequestServersResponse) { var call = this.GetFunction<NativePingServer>(this.Functions.PingServer); return call(this.ObjectAddress, unIP, usPort, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePlayerDetails(IntPtr thisobj, UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingPlayersResponse pRequestServersResponse);
		public Int32 PlayerDetails(UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingPlayersResponse pRequestServersResponse) { var call = this.GetFunction<NativePlayerDetails>(this.Functions.PlayerDetails); return call(this.ObjectAddress, unIP, usPort, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeServerRules(IntPtr thisobj, UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingRulesResponse pRequestServersResponse);
		public Int32 ServerRules(UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingRulesResponse pRequestServersResponse) { var call = this.GetFunction<NativeServerRules>(this.Functions.ServerRules); return call(this.ObjectAddress, unIP, usPort, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCancelServerQuery(IntPtr thisobj, Int32 hServerQuery);
		public void CancelServerQuery(Int32 hServerQuery) { var call = this.GetFunction<NativeCancelServerQuery>(this.Functions.CancelServerQuery); call(this.ObjectAddress, hServerQuery); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamContentServer001VTable
	{
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr SendClientContentAuthRequest;
	}
	
	public class ISteamContentServer001 : NativeWrapper<ISteamContentServer001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLogOn(IntPtr thisobj, UInt32 a);
		[return: MarshalAs(UnmanagedType.I1)] public bool LogOn(UInt32 a) { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); return call(this.ObjectAddress, a); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLogOff(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSendClientContentAuthRequest(IntPtr thisobj, UInt64 steamId, UInt32 a);
		public void SendClientContentAuthRequest(UInt64 steamId, UInt32 a) { var call = this.GetFunction<NativeSendClientContentAuthRequest>(this.Functions.SendClientContentAuthRequest); call(this.ObjectAddress, steamId, a); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamContentServer002VTable
	{
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr SendClientContentAuthRequest;
		public IntPtr CheckTicket;
	}
	
	public class ISteamContentServer002 : NativeWrapper<ISteamContentServer002VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLogOn(IntPtr thisobj, UInt32 a);
		[return: MarshalAs(UnmanagedType.I1)] public bool LogOn(UInt32 a) { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); return call(this.ObjectAddress, a); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLogOff(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSendClientContentAuthRequest(IntPtr thisobj, UInt64 steamId, UInt32 a, UInt64 b, [MarshalAs(UnmanagedType.I1)] bool c);
		public void SendClientContentAuthRequest(UInt64 steamId, UInt32 a, UInt64 b, [MarshalAs(UnmanagedType.I1)] bool c) { var call = this.GetFunction<NativeSendClientContentAuthRequest>(this.Functions.SendClientContentAuthRequest); call(this.ObjectAddress, steamId, a, b, c); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeCheckTicket(IntPtr thisobj, UInt64 steamId, UInt32 a, byte[] b, UInt32 c);
		[return: MarshalAs(UnmanagedType.I1)] public bool CheckTicket(UInt64 steamId, UInt32 a, byte[] b, UInt32 c) { var call = this.GetFunction<NativeCheckTicket>(this.Functions.CheckTicket); return call(this.ObjectAddress, steamId, a, b, c); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteam2Bridge001VTable
	{
		public IntPtr SetSteam2Ticket;
		public IntPtr SetAccountName;
		public IntPtr SetPassword;
		public IntPtr SetAccountCreationTime;
		public IntPtr CreateProcess;
		public IntPtr GetConnectedUniverse;
		public IntPtr GetIPCountry;
		public IntPtr GetNumLicenses;
		public IntPtr GetLicensePackageID;
		public IntPtr GetLicenseTimeCreated;
		public IntPtr GetLicenseTimeNextProcess;
		public IntPtr GetLicenseMinuteLimit;
		public IntPtr GetLicenseMinutesUsed;
		public IntPtr GetLicensePaymentMethod;
		public IntPtr GetLicenseFlags;
		public IntPtr GetLicensePurchaseCountryCode;
		public IntPtr SetOfflineMode;
	}
	
	public class ISteam2Bridge001 : NativeWrapper<ISteam2Bridge001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetSteam2Ticket(IntPtr thisobj, byte[] pubTicket, Int32 cubTicket);
		public Int32 SetSteam2Ticket(byte[] pubTicket, Int32 cubTicket) { var call = this.GetFunction<NativeSetSteam2Ticket>(this.Functions.SetSteam2Ticket); return call(this.ObjectAddress, pubTicket, cubTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetAccountName(IntPtr thisobj, string szName);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetAccountName(string szName) { var call = this.GetFunction<NativeSetAccountName>(this.Functions.SetAccountName); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetPassword(IntPtr thisobj, string szPassword);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetPassword(string szPassword) { var call = this.GetFunction<NativeSetPassword>(this.Functions.SetPassword); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( szPassword ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetAccountCreationTime(IntPtr thisobj, UInt32 creationTime);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetAccountCreationTime(UInt32 creationTime) { var call = this.GetFunction<NativeSetAccountCreationTime>(this.Functions.SetAccountCreationTime); return call(this.ObjectAddress, creationTime); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateProcess(IntPtr thisobj, byte[] lpVACBlob, UInt32 cbBlobSize, string arg3, string arg4, UInt32 arg5, byte[] arg6, string arg7, UInt32 arg8);
		public Int32 CreateProcess(byte[] lpVACBlob, UInt32 cbBlobSize, string arg3, string arg4, UInt32 arg5, byte[] arg6, string arg7, UInt32 arg8) { var call = this.GetFunction<NativeCreateProcess>(this.Functions.CreateProcess); return call(this.ObjectAddress, lpVACBlob, cbBlobSize, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg3 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg4 ) ), arg5, arg6, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg7 ) ), arg8); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EUniverse NativeGetConnectedUniverse(IntPtr thisobj);
		public EUniverse GetConnectedUniverse() { var call = this.GetFunction<NativeGetConnectedUniverse>(this.Functions.GetConnectedUniverse); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetIPCountry(IntPtr thisobj);
		public string GetIPCountry() { var call = this.GetFunction<NativeGetIPCountry>(this.Functions.GetIPCountry); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumLicenses(IntPtr thisobj);
		public UInt32 GetNumLicenses() { var call = this.GetFunction<NativeGetNumLicenses>(this.Functions.GetNumLicenses); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicensePackageID(IntPtr thisobj, UInt32 licenseId);
		public UInt32 GetLicensePackageID(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicensePackageID>(this.Functions.GetLicensePackageID); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicenseTimeCreated(IntPtr thisobj, UInt32 licenseId);
		public UInt32 GetLicenseTimeCreated(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicenseTimeCreated>(this.Functions.GetLicenseTimeCreated); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLicenseTimeNextProcess(IntPtr thisobj, UInt32 licenseId);
		public Int32 GetLicenseTimeNextProcess(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicenseTimeNextProcess>(this.Functions.GetLicenseTimeNextProcess); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicenseMinuteLimit(IntPtr thisobj, UInt32 licenseId);
		public UInt32 GetLicenseMinuteLimit(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicenseMinuteLimit>(this.Functions.GetLicenseMinuteLimit); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicenseMinutesUsed(IntPtr thisobj, UInt32 licenseId);
		public UInt32 GetLicenseMinutesUsed(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicenseMinutesUsed>(this.Functions.GetLicenseMinutesUsed); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPaymentMethod NativeGetLicensePaymentMethod(IntPtr thisobj, UInt32 licenseId);
		public EPaymentMethod GetLicensePaymentMethod(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicensePaymentMethod>(this.Functions.GetLicensePaymentMethod); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELicenseFlags NativeGetLicenseFlags(IntPtr thisobj, UInt32 licenseId);
		public ELicenseFlags GetLicenseFlags(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicenseFlags>(this.Functions.GetLicenseFlags); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLicensePurchaseCountryCode(IntPtr thisobj, UInt32 licenseId);
		public string GetLicensePurchaseCountryCode(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicensePurchaseCountryCode>(this.Functions.GetLicensePurchaseCountryCode); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, licenseId) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetOfflineMode(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool offlineMode);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetOfflineMode([MarshalAs(UnmanagedType.I1)] bool offlineMode) { var call = this.GetFunction<NativeSetOfflineMode>(this.Functions.SetOfflineMode); return call(this.ObjectAddress, offlineMode); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientMatchmakingVTable
	{
		public IntPtr GetFavoriteGameCount;
		public IntPtr GetFavoriteGame;
		public IntPtr AddFavoriteGame;
		public IntPtr RemoveFavoriteGame;
		public IntPtr RequestLobbyList;
		public IntPtr AddRequestLobbyListStringFilter;
		public IntPtr AddRequestLobbyListNumericalFilter;
		public IntPtr AddRequestLobbyListNearValueFilter;
		public IntPtr AddRequestLobbyListFilterSlotsAvailable;
		public IntPtr AddRequestLobbyListDistanceFilter;
		public IntPtr AddRequestLobbyListResultCountFilter;
		public IntPtr GetLobbyByIndex;
		public IntPtr CreateLobby;
		public IntPtr JoinLobby;
		public IntPtr LeaveLobby;
		public IntPtr InviteUserToLobby;
		public IntPtr GetNumLobbyMembers;
		public IntPtr GetLobbyMemberByIndex;
		public IntPtr GetLobbyData;
		public IntPtr SetLobbyData;
		public IntPtr GetLobbyDataCount;
		public IntPtr GetLobbyDataByIndex;
		public IntPtr DeleteLobbyData;
		public IntPtr GetLobbyMemberData;
		public IntPtr SetLobbyMemberData;
		public IntPtr SendLobbyChatMsg;
		public IntPtr GetLobbyChatEntry;
		public IntPtr RequestLobbyData;
		public IntPtr SetLobbyGameServer;
		public IntPtr GetLobbyGameServer;
		public IntPtr SetLobbyMemberLimit;
		public IntPtr GetLobbyMemberLimit;
		public IntPtr SetLobbyVoiceEnabled;
		public IntPtr RequestFriendsLobbies;
		public IntPtr SetLobbyType;
		public IntPtr SetLobbyJoinable;
		public IntPtr GetLobbyOwner;
		public IntPtr SetLobbyOwner;
		public IntPtr GetGMSServerCount;
		public IntPtr GetGMSServerAddress;
	}
	
	public class IClientMatchmaking : NativeWrapper<IClientMatchmakingVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFavoriteGameCount(IntPtr thisobj);
		public Int32 GetFavoriteGameCount() { var call = this.GetFunction<NativeGetFavoriteGameCount>(this.Functions.GetFavoriteGameCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetFavoriteGame(IntPtr thisobj, Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetFavoriteGame(Int32 iGame, ref UInt32 pnAppID, ref UInt32 pnIP, ref UInt16 pnConnPort, ref UInt16 pnQueryPort, ref UInt32 punFlags, ref UInt32 pRTime32LastPlayedOnServer) { var call = this.GetFunction<NativeGetFavoriteGame>(this.Functions.GetFavoriteGame); return call(this.ObjectAddress, iGame, ref pnAppID, ref pnIP, ref pnConnPort, ref pnQueryPort, ref punFlags, ref pRTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAddFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer);
		public Int32 AddFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer) { var call = this.GetFunction<NativeAddFavoriteGame>(this.Functions.AddFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags, rTime32LastPlayedOnServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRemoveFavoriteGame(IntPtr thisobj, UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags);
		[return: MarshalAs(UnmanagedType.I1)] public bool RemoveFavoriteGame(UInt32 nAppID, UInt32 nIP, UInt16 nConnPort, UInt16 nQueryPort, UInt32 unFlags) { var call = this.GetFunction<NativeRemoveFavoriteGame>(this.Functions.RemoveFavoriteGame); return call(this.ObjectAddress, nAppID, nIP, nConnPort, nQueryPort, unFlags); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestLobbyList(IntPtr thisobj);
		public UInt64 RequestLobbyList() { var call = this.GetFunction<NativeRequestLobbyList>(this.Functions.RequestLobbyList); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListStringFilter(IntPtr thisobj, string pchKeyToMatch, string pchValueToMatch, ELobbyComparison eComparisonType);
		public void AddRequestLobbyListStringFilter(string pchKeyToMatch, string pchValueToMatch, ELobbyComparison eComparisonType) { var call = this.GetFunction<NativeAddRequestLobbyListStringFilter>(this.Functions.AddRequestLobbyListStringFilter); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKeyToMatch ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValueToMatch ) ), eComparisonType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListNumericalFilter(IntPtr thisobj, string pchKeyToMatch, Int32 nValueToMatch, ELobbyComparison eComparisonType);
		public void AddRequestLobbyListNumericalFilter(string pchKeyToMatch, Int32 nValueToMatch, ELobbyComparison eComparisonType) { var call = this.GetFunction<NativeAddRequestLobbyListNumericalFilter>(this.Functions.AddRequestLobbyListNumericalFilter); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKeyToMatch ) ), nValueToMatch, eComparisonType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListNearValueFilter(IntPtr thisobj, string pchKeyToMatch, Int32 nValueToBeCloseTo);
		public void AddRequestLobbyListNearValueFilter(string pchKeyToMatch, Int32 nValueToBeCloseTo) { var call = this.GetFunction<NativeAddRequestLobbyListNearValueFilter>(this.Functions.AddRequestLobbyListNearValueFilter); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKeyToMatch ) ), nValueToBeCloseTo); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListFilterSlotsAvailable(IntPtr thisobj, Int32 nSlotsAvailable);
		public void AddRequestLobbyListFilterSlotsAvailable(Int32 nSlotsAvailable) { var call = this.GetFunction<NativeAddRequestLobbyListFilterSlotsAvailable>(this.Functions.AddRequestLobbyListFilterSlotsAvailable); call(this.ObjectAddress, nSlotsAvailable); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListDistanceFilter(IntPtr thisobj, ELobbyDistanceFilter filter);
		public void AddRequestLobbyListDistanceFilter(ELobbyDistanceFilter filter) { var call = this.GetFunction<NativeAddRequestLobbyListDistanceFilter>(this.Functions.AddRequestLobbyListDistanceFilter); call(this.ObjectAddress, filter); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddRequestLobbyListResultCountFilter(IntPtr thisobj, Int32 cMaxResults);
		public void AddRequestLobbyListResultCountFilter(Int32 cMaxResults) { var call = this.GetFunction<NativeAddRequestLobbyListResultCountFilter>(this.Functions.AddRequestLobbyListResultCountFilter); call(this.ObjectAddress, cMaxResults); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetLobbyByIndex(IntPtr thisobj, ref UInt64 ret, Int32 iLobby);
		public UInt64 GetLobbyByIndex(Int32 iLobby) { UInt64 ret = 0; var call = this.GetFunction<NativeGetLobbyByIndex>(this.Functions.GetLobbyByIndex); call(this.ObjectAddress, ref ret, iLobby); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeCreateLobby(IntPtr thisobj, ELobbyType eLobbyType, Int32 cMaxMembers);
		public UInt64 CreateLobby(ELobbyType eLobbyType, Int32 cMaxMembers) { var call = this.GetFunction<NativeCreateLobby>(this.Functions.CreateLobby); return call(this.ObjectAddress, eLobbyType, cMaxMembers); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeJoinLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public UInt64 JoinLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeJoinLobby>(this.Functions.JoinLobby); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLeaveLobby(IntPtr thisobj, UInt64 steamIDLobby);
		public void LeaveLobby(UInt64 steamIDLobby) { var call = this.GetFunction<NativeLeaveLobby>(this.Functions.LeaveLobby); call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeInviteUserToLobby(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDInvitee);
		[return: MarshalAs(UnmanagedType.I1)] public bool InviteUserToLobby(UInt64 steamIDLobby, UInt64 steamIDInvitee) { var call = this.GetFunction<NativeInviteUserToLobby>(this.Functions.InviteUserToLobby); return call(this.ObjectAddress, steamIDLobby, steamIDInvitee); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetNumLobbyMembers(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetNumLobbyMembers(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetNumLobbyMembers>(this.Functions.GetNumLobbyMembers); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetLobbyMemberByIndex(IntPtr thisobj, ref UInt64 ret, UInt64 steamIDLobby, Int32 iMember);
		public UInt64 GetLobbyMemberByIndex(UInt64 steamIDLobby, Int32 iMember) { UInt64 ret = 0; var call = this.GetFunction<NativeGetLobbyMemberByIndex>(this.Functions.GetLobbyMemberByIndex); call(this.ObjectAddress, ref ret, steamIDLobby, iMember); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey);
		public string GetLobbyData(UInt64 steamIDLobby, string pchKey) { var call = this.GetFunction<NativeGetLobbyData>(this.Functions.GetLobbyData); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDLobby, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyData>(this.Functions.SetLobbyData); return call(this.ObjectAddress, steamIDLobby, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyDataCount(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetLobbyDataCount(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetLobbyDataCount>(this.Functions.GetLobbyDataCount); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetLobbyDataByIndex(IntPtr thisobj, UInt64 steamIDLobby, Int32 iLobbyData, string pchKey, Int32 cchKeyBufferSize, string pchValue, Int32 cchValueBufferSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetLobbyDataByIndex(UInt64 steamIDLobby, Int32 iLobbyData, string pchKey, Int32 cchKeyBufferSize, string pchValue, Int32 cchValueBufferSize) { var call = this.GetFunction<NativeGetLobbyDataByIndex>(this.Functions.GetLobbyDataByIndex); return call(this.ObjectAddress, steamIDLobby, iLobbyData, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), cchKeyBufferSize, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) ), cchValueBufferSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeDeleteLobbyData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey);
		[return: MarshalAs(UnmanagedType.I1)] public bool DeleteLobbyData(UInt64 steamIDLobby, string pchKey) { var call = this.GetFunction<NativeDeleteLobbyData>(this.Functions.DeleteLobbyData); return call(this.ObjectAddress, steamIDLobby, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey);
		public string GetLobbyMemberData(UInt64 steamIDLobby, UInt64 steamIDUser, string pchKey) { var call = this.GetFunction<NativeGetLobbyMemberData>(this.Functions.GetLobbyMemberData); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, steamIDLobby, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyMemberData(IntPtr thisobj, UInt64 steamIDLobby, string pchKey, string pchValue);
		public void SetLobbyMemberData(UInt64 steamIDLobby, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetLobbyMemberData>(this.Functions.SetLobbyMemberData); call(this.ObjectAddress, steamIDLobby, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendLobbyChatMsg(IntPtr thisobj, UInt64 steamIDLobby, byte[] pvMsgBody, Int32 cubMsgBody);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendLobbyChatMsg(UInt64 steamIDLobby, byte[] pvMsgBody, Int32 cubMsgBody) { var call = this.GetFunction<NativeSendLobbyChatMsg>(this.Functions.SendLobbyChatMsg); return call(this.ObjectAddress, steamIDLobby, pvMsgBody, cubMsgBody); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyChatEntry(IntPtr thisobj, UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, byte[] pvData, Int32 cubData, ref EChatEntryType peChatEntryType);
		public Int32 GetLobbyChatEntry(UInt64 steamIDLobby, Int32 iChatID, ref UInt64 pSteamIDUser, byte[] pvData, Int32 cubData, ref EChatEntryType peChatEntryType) { var call = this.GetFunction<NativeGetLobbyChatEntry>(this.Functions.GetLobbyChatEntry); return call(this.ObjectAddress, steamIDLobby, iChatID, ref pSteamIDUser, pvData, cubData, ref peChatEntryType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestLobbyData(IntPtr thisobj, UInt64 steamIDLobby);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestLobbyData(UInt64 steamIDLobby) { var call = this.GetFunction<NativeRequestLobbyData>(this.Functions.RequestLobbyData); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyGameServer(IntPtr thisobj, UInt64 steamIDLobby, UInt32 unGameServerIP, UInt16 unGameServerPort, UInt64 steamIDGameServer);
		public void SetLobbyGameServer(UInt64 steamIDLobby, UInt32 unGameServerIP, UInt16 unGameServerPort, UInt64 steamIDGameServer) { var call = this.GetFunction<NativeSetLobbyGameServer>(this.Functions.SetLobbyGameServer); call(this.ObjectAddress, steamIDLobby, unGameServerIP, unGameServerPort, steamIDGameServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetLobbyGameServer(IntPtr thisobj, UInt64 steamIDLobby, ref UInt32 punGameServerIP, ref UInt16 punGameServerPort, ref UInt64 psteamIDGameServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetLobbyGameServer(UInt64 steamIDLobby, ref UInt32 punGameServerIP, ref UInt16 punGameServerPort, ref UInt64 psteamIDGameServer) { var call = this.GetFunction<NativeGetLobbyGameServer>(this.Functions.GetLobbyGameServer); return call(this.ObjectAddress, steamIDLobby, ref punGameServerIP, ref punGameServerPort, ref psteamIDGameServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyMemberLimit(IntPtr thisobj, UInt64 steamIDLobby, Int32 cMaxMembers);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyMemberLimit(UInt64 steamIDLobby, Int32 cMaxMembers) { var call = this.GetFunction<NativeSetLobbyMemberLimit>(this.Functions.SetLobbyMemberLimit); return call(this.ObjectAddress, steamIDLobby, cMaxMembers); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLobbyMemberLimit(IntPtr thisobj, UInt64 steamIDLobby);
		public Int32 GetLobbyMemberLimit(UInt64 steamIDLobby) { var call = this.GetFunction<NativeGetLobbyMemberLimit>(this.Functions.GetLobbyMemberLimit); return call(this.ObjectAddress, steamIDLobby); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLobbyVoiceEnabled(IntPtr thisobj, UInt64 steamIDLobby, [MarshalAs(UnmanagedType.I1)] bool bVoiceEnabled);
		public void SetLobbyVoiceEnabled(UInt64 steamIDLobby, [MarshalAs(UnmanagedType.I1)] bool bVoiceEnabled) { var call = this.GetFunction<NativeSetLobbyVoiceEnabled>(this.Functions.SetLobbyVoiceEnabled); call(this.ObjectAddress, steamIDLobby, bVoiceEnabled); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestFriendsLobbies(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestFriendsLobbies() { var call = this.GetFunction<NativeRequestFriendsLobbies>(this.Functions.RequestFriendsLobbies); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyType(IntPtr thisobj, UInt64 steamIDLobby, ELobbyType eLobbyType);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyType(UInt64 steamIDLobby, ELobbyType eLobbyType) { var call = this.GetFunction<NativeSetLobbyType>(this.Functions.SetLobbyType); return call(this.ObjectAddress, steamIDLobby, eLobbyType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyJoinable(IntPtr thisobj, UInt64 steamIDLobby, [MarshalAs(UnmanagedType.I1)] bool bLobbyJoinable);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyJoinable(UInt64 steamIDLobby, [MarshalAs(UnmanagedType.I1)] bool bLobbyJoinable) { var call = this.GetFunction<NativeSetLobbyJoinable>(this.Functions.SetLobbyJoinable); return call(this.ObjectAddress, steamIDLobby, bLobbyJoinable); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetLobbyOwner(IntPtr thisobj, ref UInt64 ret, UInt64 steamIDLobby);
		public UInt64 GetLobbyOwner(UInt64 steamIDLobby) { UInt64 ret = 0; var call = this.GetFunction<NativeGetLobbyOwner>(this.Functions.GetLobbyOwner); call(this.ObjectAddress, ref ret, steamIDLobby); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetLobbyOwner(IntPtr thisobj, UInt64 steamIDLobby, UInt64 steamIDNewOwner);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetLobbyOwner(UInt64 steamIDLobby, UInt64 steamIDNewOwner) { var call = this.GetFunction<NativeSetLobbyOwner>(this.Functions.SetLobbyOwner); return call(this.ObjectAddress, steamIDLobby, steamIDNewOwner); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetGMSServerCount(IntPtr thisobj);
		public Int32 GetGMSServerCount() { var call = this.GetFunction<NativeGetGMSServerCount>(this.Functions.GetGMSServerCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetGMSServerAddress(IntPtr thisobj, Int32 iServer, ref UInt32 unServerIP, ref UInt16 usServerPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetGMSServerAddress(Int32 iServer, ref UInt32 unServerIP, ref UInt16 usServerPort) { var call = this.GetFunction<NativeGetGMSServerAddress>(this.Functions.GetGMSServerAddress); return call(this.ObjectAddress, iServer, ref unServerIP, ref usServerPort); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamApps003VTable
	{
		public IntPtr IsSubscribed;
		public IntPtr IsLowViolence;
		public IntPtr IsCybercafe;
		public IntPtr IsVACBanned;
		public IntPtr GetCurrentGameLanguage;
		public IntPtr GetAvailableGameLanguages;
		public IntPtr IsSubscribedApp;
		public IntPtr IsDlcInstalled;
	}
	
	public class ISteamApps003 : NativeWrapper<ISteamApps003VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsSubscribed(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsSubscribed() { var call = this.GetFunction<NativeIsSubscribed>(this.Functions.IsSubscribed); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsLowViolence(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsLowViolence() { var call = this.GetFunction<NativeIsLowViolence>(this.Functions.IsLowViolence); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsCybercafe(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsCybercafe() { var call = this.GetFunction<NativeIsCybercafe>(this.Functions.IsCybercafe); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsVACBanned(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsVACBanned() { var call = this.GetFunction<NativeIsVACBanned>(this.Functions.IsVACBanned); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetCurrentGameLanguage(IntPtr thisobj);
		public string GetCurrentGameLanguage() { var call = this.GetFunction<NativeGetCurrentGameLanguage>(this.Functions.GetCurrentGameLanguage); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetAvailableGameLanguages(IntPtr thisobj);
		public string GetAvailableGameLanguages() { var call = this.GetFunction<NativeGetAvailableGameLanguages>(this.Functions.GetAvailableGameLanguages); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsSubscribedApp(IntPtr thisobj, UInt32 appID);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsSubscribedApp(UInt32 appID) { var call = this.GetFunction<NativeIsSubscribedApp>(this.Functions.IsSubscribedApp); return call(this.ObjectAddress, appID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsDlcInstalled(IntPtr thisobj, UInt32 appID);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsDlcInstalled(UInt32 appID) { var call = this.GetFunction<NativeIsDlcInstalled>(this.Functions.IsDlcInstalled); return call(this.ObjectAddress, appID); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamApps004VTable
	{
		public IntPtr IsSubscribed;
		public IntPtr IsLowViolence;
		public IntPtr IsCybercafe;
		public IntPtr IsVACBanned;
		public IntPtr GetCurrentGameLanguage;
		public IntPtr GetAvailableGameLanguages;
		public IntPtr IsSubscribedApp;
		public IntPtr IsDlcInstalled;
		public IntPtr GetEarliestPurchaseUnixTime;
		public IntPtr IsSubscribedFromFreeWeekend;
	}
	
	public class ISteamApps004 : NativeWrapper<ISteamApps004VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsSubscribed(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsSubscribed() { var call = this.GetFunction<NativeIsSubscribed>(this.Functions.IsSubscribed); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsLowViolence(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsLowViolence() { var call = this.GetFunction<NativeIsLowViolence>(this.Functions.IsLowViolence); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsCybercafe(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsCybercafe() { var call = this.GetFunction<NativeIsCybercafe>(this.Functions.IsCybercafe); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsVACBanned(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsVACBanned() { var call = this.GetFunction<NativeIsVACBanned>(this.Functions.IsVACBanned); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetCurrentGameLanguage(IntPtr thisobj);
		public string GetCurrentGameLanguage() { var call = this.GetFunction<NativeGetCurrentGameLanguage>(this.Functions.GetCurrentGameLanguage); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetAvailableGameLanguages(IntPtr thisobj);
		public string GetAvailableGameLanguages() { var call = this.GetFunction<NativeGetAvailableGameLanguages>(this.Functions.GetAvailableGameLanguages); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsSubscribedApp(IntPtr thisobj, UInt32 appID);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsSubscribedApp(UInt32 appID) { var call = this.GetFunction<NativeIsSubscribedApp>(this.Functions.IsSubscribedApp); return call(this.ObjectAddress, appID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsDlcInstalled(IntPtr thisobj, UInt32 appID);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsDlcInstalled(UInt32 appID) { var call = this.GetFunction<NativeIsDlcInstalled>(this.Functions.IsDlcInstalled); return call(this.ObjectAddress, appID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetEarliestPurchaseUnixTime(IntPtr thisobj, UInt32 appID);
		public UInt32 GetEarliestPurchaseUnixTime(UInt32 appID) { var call = this.GetFunction<NativeGetEarliestPurchaseUnixTime>(this.Functions.GetEarliestPurchaseUnixTime); return call(this.ObjectAddress, appID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsSubscribedFromFreeWeekend(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsSubscribedFromFreeWeekend() { var call = this.GetFunction<NativeIsSubscribedFromFreeWeekend>(this.Functions.IsSubscribedFromFreeWeekend); return call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientGameStatsVTable
	{
		public IntPtr GetNewSession;
		public IntPtr EndSession;
		public IntPtr AddSessionAttributeInt;
		public IntPtr AddSessionAttributeString;
		public IntPtr AddSessionAttributeFloat;
		public IntPtr AddNewRow;
		public IntPtr CommitRow;
		public IntPtr CommitOutstandingRows;
		public IntPtr AddRowAttributeInt;
		public IntPtr AddRowAtributeString;
		public IntPtr AddRowAttributeFloat;
		public IntPtr AddSessionAttributeInt64;
		public IntPtr AddRowAttributeInt64;
	}
	
	public class IClientGameStats : NativeWrapper<IClientGameStatsVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetNewSession(IntPtr thisobj, SByte nAccountType, UInt64 ullAccountID, UInt32 nAppID, UInt32 rtTimeStarted);
		public UInt64 GetNewSession(SByte nAccountType, UInt64 ullAccountID, UInt32 nAppID, UInt32 rtTimeStarted) { var call = this.GetFunction<NativeGetNewSession>(this.Functions.GetNewSession); return call(this.ObjectAddress, nAccountType, ullAccountID, nAppID, rtTimeStarted); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeEndSession(IntPtr thisobj, UInt64 ulSessionID, UInt32 rtTimeEnded, Int16 nReasonCode);
		public UInt64 EndSession(UInt64 ulSessionID, UInt32 rtTimeEnded, Int16 nReasonCode) { var call = this.GetFunction<NativeEndSession>(this.Functions.EndSession); return call(this.ObjectAddress, ulSessionID, rtTimeEnded, nReasonCode); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EResult NativeAddSessionAttributeInt(IntPtr thisobj, UInt64 ulSessionID, string pstrName, Int32 nData);
		public EResult AddSessionAttributeInt(UInt64 ulSessionID, string pstrName, Int32 nData) { var call = this.GetFunction<NativeAddSessionAttributeInt>(this.Functions.AddSessionAttributeInt); return call(this.ObjectAddress, ulSessionID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pstrName ) ), nData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EResult NativeAddSessionAttributeString(IntPtr thisobj, UInt64 ulSessionID, string pstrName, string pstrData);
		public EResult AddSessionAttributeString(UInt64 ulSessionID, string pstrName, string pstrData) { var call = this.GetFunction<NativeAddSessionAttributeString>(this.Functions.AddSessionAttributeString); return call(this.ObjectAddress, ulSessionID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pstrName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pstrData ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EResult NativeAddSessionAttributeFloat(IntPtr thisobj, UInt64 ulSessionID, string pstrName, float fData);
		public EResult AddSessionAttributeFloat(UInt64 ulSessionID, string pstrName, float fData) { var call = this.GetFunction<NativeAddSessionAttributeFloat>(this.Functions.AddSessionAttributeFloat); return call(this.ObjectAddress, ulSessionID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pstrName ) ), fData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EResult NativeAddNewRow(IntPtr thisobj, ref UInt64 pulRowID, UInt64 ulSessionID, string pstrTableName);
		public EResult AddNewRow(ref UInt64 pulRowID, UInt64 ulSessionID, string pstrTableName) { var call = this.GetFunction<NativeAddNewRow>(this.Functions.AddNewRow); return call(this.ObjectAddress, ref pulRowID, ulSessionID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pstrTableName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EResult NativeCommitRow(IntPtr thisobj, UInt64 ulRowID);
		public EResult CommitRow(UInt64 ulRowID) { var call = this.GetFunction<NativeCommitRow>(this.Functions.CommitRow); return call(this.ObjectAddress, ulRowID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EResult NativeCommitOutstandingRows(IntPtr thisobj, UInt64 ulSessionID);
		public EResult CommitOutstandingRows(UInt64 ulSessionID) { var call = this.GetFunction<NativeCommitOutstandingRows>(this.Functions.CommitOutstandingRows); return call(this.ObjectAddress, ulSessionID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EResult NativeAddRowAttributeInt(IntPtr thisobj, UInt64 ulRowID, string pstrName, Int32 iData);
		public EResult AddRowAttributeInt(UInt64 ulRowID, string pstrName, Int32 iData) { var call = this.GetFunction<NativeAddRowAttributeInt>(this.Functions.AddRowAttributeInt); return call(this.ObjectAddress, ulRowID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pstrName ) ), iData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EResult NativeAddRowAtributeString(IntPtr thisobj, UInt64 ulRowID, string pstrName, string pstrData);
		public EResult AddRowAtributeString(UInt64 ulRowID, string pstrName, string pstrData) { var call = this.GetFunction<NativeAddRowAtributeString>(this.Functions.AddRowAtributeString); return call(this.ObjectAddress, ulRowID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pstrName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pstrData ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EResult NativeAddRowAttributeFloat(IntPtr thisobj, UInt64 ulRowID, string pstrName, float fData);
		public EResult AddRowAttributeFloat(UInt64 ulRowID, string pstrName, float fData) { var call = this.GetFunction<NativeAddRowAttributeFloat>(this.Functions.AddRowAttributeFloat); return call(this.ObjectAddress, ulRowID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pstrName ) ), fData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EResult NativeAddSessionAttributeInt64(IntPtr thisobj, UInt64 ulSessionID, string pstrName, Int64 llData);
		public EResult AddSessionAttributeInt64(UInt64 ulSessionID, string pstrName, Int64 llData) { var call = this.GetFunction<NativeAddSessionAttributeInt64>(this.Functions.AddSessionAttributeInt64); return call(this.ObjectAddress, ulSessionID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pstrName ) ), llData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EResult NativeAddRowAttributeInt64(IntPtr thisobj, UInt64 ulRowID, string pstrName, Int64 llData);
		public EResult AddRowAttributeInt64(UInt64 ulRowID, string pstrName, Int64 llData) { var call = this.GetFunction<NativeAddRowAttributeInt64>(this.Functions.AddRowAttributeInt64); return call(this.ObjectAddress, ulRowID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pstrName ) ), llData); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientHTTPVTable
	{
		public IntPtr CreateHTTPRequest;
		public IntPtr SetHTTPRequestContextValue;
		public IntPtr SetHTTPRequestNetworkActivityTimeout;
		public IntPtr SetHTTPRequestHeaderValue;
		public IntPtr SetHTTPRequestGetOrPostParameter;
		public IntPtr SendHTTPRequest;
		public IntPtr DeferHTTPRequest;
		public IntPtr PrioritizeHTTPRequest;
		public IntPtr GetHTTPResponseHeaderSize;
		public IntPtr GetHTTPResponseHeaderValue;
		public IntPtr GetHTTPResponseBodySize;
		public IntPtr GetHTTPResponseBodyData;
		public IntPtr ReleaseHTTPRequest;
	}
	
	public class IClientHTTP : NativeWrapper<IClientHTTPVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateHTTPRequest(IntPtr thisobj, EHTTPMethod eHTTPRequestMethod, string pchAbsoluteURL);
		public UInt32 CreateHTTPRequest(EHTTPMethod eHTTPRequestMethod, string pchAbsoluteURL) { var call = this.GetFunction<NativeCreateHTTPRequest>(this.Functions.CreateHTTPRequest); return call(this.ObjectAddress, eHTTPRequestMethod, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAbsoluteURL ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetHTTPRequestContextValue(IntPtr thisobj, UInt32 hRequest, UInt64 ulContextValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetHTTPRequestContextValue(UInt32 hRequest, UInt64 ulContextValue) { var call = this.GetFunction<NativeSetHTTPRequestContextValue>(this.Functions.SetHTTPRequestContextValue); return call(this.ObjectAddress, hRequest, ulContextValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetHTTPRequestNetworkActivityTimeout(IntPtr thisobj, UInt32 hRequest, UInt32 unTimeoutSeconds);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetHTTPRequestNetworkActivityTimeout(UInt32 hRequest, UInt32 unTimeoutSeconds) { var call = this.GetFunction<NativeSetHTTPRequestNetworkActivityTimeout>(this.Functions.SetHTTPRequestNetworkActivityTimeout); return call(this.ObjectAddress, hRequest, unTimeoutSeconds); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetHTTPRequestHeaderValue(IntPtr thisobj, UInt32 hRequest, string pchHeaderName, string pchHeaderValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetHTTPRequestHeaderValue(UInt32 hRequest, string pchHeaderName, string pchHeaderValue) { var call = this.GetFunction<NativeSetHTTPRequestHeaderValue>(this.Functions.SetHTTPRequestHeaderValue); return call(this.ObjectAddress, hRequest, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchHeaderName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchHeaderValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetHTTPRequestGetOrPostParameter(IntPtr thisobj, UInt32 hRequest, string pchParamName, string pchParamValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetHTTPRequestGetOrPostParameter(UInt32 hRequest, string pchParamName, string pchParamValue) { var call = this.GetFunction<NativeSetHTTPRequestGetOrPostParameter>(this.Functions.SetHTTPRequestGetOrPostParameter); return call(this.ObjectAddress, hRequest, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchParamName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchParamValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendHTTPRequest(IntPtr thisobj, UInt32 hRequest, ref UInt64 pCallHandle);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendHTTPRequest(UInt32 hRequest, ref UInt64 pCallHandle) { var call = this.GetFunction<NativeSendHTTPRequest>(this.Functions.SendHTTPRequest); return call(this.ObjectAddress, hRequest, ref pCallHandle); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeDeferHTTPRequest(IntPtr thisobj, UInt32 hRequest);
		[return: MarshalAs(UnmanagedType.I1)] public bool DeferHTTPRequest(UInt32 hRequest) { var call = this.GetFunction<NativeDeferHTTPRequest>(this.Functions.DeferHTTPRequest); return call(this.ObjectAddress, hRequest); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativePrioritizeHTTPRequest(IntPtr thisobj, UInt32 hRequest);
		[return: MarshalAs(UnmanagedType.I1)] public bool PrioritizeHTTPRequest(UInt32 hRequest) { var call = this.GetFunction<NativePrioritizeHTTPRequest>(this.Functions.PrioritizeHTTPRequest); return call(this.ObjectAddress, hRequest); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetHTTPResponseHeaderSize(IntPtr thisobj, UInt32 hRequest, string pchHeaderName, ref UInt32 unResponseHeaderSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetHTTPResponseHeaderSize(UInt32 hRequest, string pchHeaderName, ref UInt32 unResponseHeaderSize) { var call = this.GetFunction<NativeGetHTTPResponseHeaderSize>(this.Functions.GetHTTPResponseHeaderSize); return call(this.ObjectAddress, hRequest, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchHeaderName ) ), ref unResponseHeaderSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetHTTPResponseHeaderValue(IntPtr thisobj, UInt32 hRequest, string pchHeaderName, byte[] pHeaderValueBuffer, UInt32 uBufferSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetHTTPResponseHeaderValue(UInt32 hRequest, string pchHeaderName, byte[] pHeaderValueBuffer, UInt32 uBufferSize) { var call = this.GetFunction<NativeGetHTTPResponseHeaderValue>(this.Functions.GetHTTPResponseHeaderValue); return call(this.ObjectAddress, hRequest, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchHeaderName ) ), pHeaderValueBuffer, uBufferSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetHTTPResponseBodySize(IntPtr thisobj, UInt32 hRequest, ref UInt32 unBodySize);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetHTTPResponseBodySize(UInt32 hRequest, ref UInt32 unBodySize) { var call = this.GetFunction<NativeGetHTTPResponseBodySize>(this.Functions.GetHTTPResponseBodySize); return call(this.ObjectAddress, hRequest, ref unBodySize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetHTTPResponseBodyData(IntPtr thisobj, UInt32 hRequest, byte[] pBodyDataBuffer, UInt32 unBufferSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetHTTPResponseBodyData(UInt32 hRequest, byte[] pBodyDataBuffer, UInt32 unBufferSize) { var call = this.GetFunction<NativeGetHTTPResponseBodyData>(this.Functions.GetHTTPResponseBodyData); return call(this.ObjectAddress, hRequest, pBodyDataBuffer, unBufferSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeReleaseHTTPRequest(IntPtr thisobj, UInt32 hRequest);
		[return: MarshalAs(UnmanagedType.I1)] public bool ReleaseHTTPRequest(UInt32 hRequest) { var call = this.GetFunction<NativeReleaseHTTPRequest>(this.Functions.ReleaseHTTPRequest); return call(this.ObjectAddress, hRequest); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamBilling002VTable
	{
		public IntPtr InitCreditCardPurchase;
		public IntPtr InitPayPalPurchase;
		public IntPtr GetActivationCodeInfo;
		public IntPtr PurchaseWithActivationCode;
		public IntPtr GetFinalPrice;
		public IntPtr CancelPurchase;
		public IntPtr CompletePurchase;
		public IntPtr UpdateCardInfo;
		public IntPtr DeleteCard;
		public IntPtr GetCardList;
		public IntPtr Obsolete_GetLicenses;
		public IntPtr CancelLicense;
		public IntPtr GetPurchaseReceipts;
		public IntPtr AcknowledgePurchaseReceipt;
		public IntPtr SetBillingAddress;
		public IntPtr GetBillingAddress;
		public IntPtr SetShippingAddress;
		public IntPtr GetShippingAddress;
		public IntPtr SetCardInfo;
		public IntPtr GetCardInfo;
		public IntPtr GetLicensePackageID;
		public IntPtr GetLicenseTimeCreated;
		public IntPtr GetLicenseTimeNextProcess;
		public IntPtr GetLicenseMinuteLimit;
		public IntPtr GetLicenseMinutesUsed;
		public IntPtr GetLicensePaymentMethod;
		public IntPtr GetLicenseFlags;
		public IntPtr GetLicensePurchaseCountryCode;
		public IntPtr GetReceiptPackageID;
		public IntPtr GetReceiptStatus;
		public IntPtr GetReceiptResultDetail;
		public IntPtr GetReceiptTransTime;
		public IntPtr GetReceiptTransID;
		public IntPtr GetReceiptAcknowledged;
		public IntPtr GetReceiptPaymentMethod;
		public IntPtr GetReceiptBaseCost;
		public IntPtr GetReceiptTotalDiscount;
		public IntPtr GetReceiptTax;
		public IntPtr GetReceiptShipping;
		public IntPtr GetReceiptCountryCode;
		public IntPtr GetNumLicenses;
		public IntPtr GetNumReceipts;
		public IntPtr PurchaseWithMachineID;
		public IntPtr InitClickAndBuyPurchase;
		public IntPtr GetPreviousClickAndBuyAccount;
	}
	
	public class ISteamBilling002 : NativeWrapper<ISteamBilling002VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitCreditCardPurchase(IntPtr thisobj, Int32 arg1, UInt32 arg2, [MarshalAs(UnmanagedType.I1)] bool arg3);
		public Int32 InitCreditCardPurchase(Int32 arg1, UInt32 arg2, [MarshalAs(UnmanagedType.I1)] bool arg3) { var call = this.GetFunction<NativeInitCreditCardPurchase>(this.Functions.InitCreditCardPurchase); return call(this.ObjectAddress, arg1, arg2, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitPayPalPurchase(IntPtr thisobj, Int32 arg1);
		public Int32 InitPayPalPurchase(Int32 arg1) { var call = this.GetFunction<NativeInitPayPalPurchase>(this.Functions.InitPayPalPurchase); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetActivationCodeInfo(IntPtr thisobj, string arg1);
		public Int32 GetActivationCodeInfo(string arg1) { var call = this.GetFunction<NativeGetActivationCodeInfo>(this.Functions.GetActivationCodeInfo); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg1 ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePurchaseWithActivationCode(IntPtr thisobj, string arg1);
		public Int32 PurchaseWithActivationCode(string arg1) { var call = this.GetFunction<NativePurchaseWithActivationCode>(this.Functions.PurchaseWithActivationCode); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg1 ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFinalPrice(IntPtr thisobj);
		public Int32 GetFinalPrice() { var call = this.GetFunction<NativeGetFinalPrice>(this.Functions.GetFinalPrice); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCancelPurchase(IntPtr thisobj);
		public Int32 CancelPurchase() { var call = this.GetFunction<NativeCancelPurchase>(this.Functions.CancelPurchase); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCompletePurchase(IntPtr thisobj);
		public Int32 CompletePurchase() { var call = this.GetFunction<NativeCompletePurchase>(this.Functions.CompletePurchase); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeUpdateCardInfo(IntPtr thisobj, UInt32 arg1);
		public Int32 UpdateCardInfo(UInt32 arg1) { var call = this.GetFunction<NativeUpdateCardInfo>(this.Functions.UpdateCardInfo); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeDeleteCard(IntPtr thisobj, UInt32 arg1);
		public Int32 DeleteCard(UInt32 arg1) { var call = this.GetFunction<NativeDeleteCard>(this.Functions.DeleteCard); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCardList(IntPtr thisobj);
		public Int32 GetCardList() { var call = this.GetFunction<NativeGetCardList>(this.Functions.GetCardList); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeObsolete_GetLicenses(IntPtr thisobj);
		public Int32 Obsolete_GetLicenses() { var call = this.GetFunction<NativeObsolete_GetLicenses>(this.Functions.Obsolete_GetLicenses); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCancelLicense(IntPtr thisobj, Int32 arg1, Int32 arg2);
		public Int32 CancelLicense(Int32 arg1, Int32 arg2) { var call = this.GetFunction<NativeCancelLicense>(this.Functions.CancelLicense); return call(this.ObjectAddress, arg1, arg2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetPurchaseReceipts(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool arg1);
		public Int32 GetPurchaseReceipts([MarshalAs(UnmanagedType.I1)] bool arg1) { var call = this.GetFunction<NativeGetPurchaseReceipts>(this.Functions.GetPurchaseReceipts); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAcknowledgePurchaseReceipt(IntPtr thisobj, UInt32 arg1);
		public Int32 AcknowledgePurchaseReceipt(UInt32 arg1) { var call = this.GetFunction<NativeAcknowledgePurchaseReceipt>(this.Functions.AcknowledgePurchaseReceipt); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetBillingAddress(IntPtr thisobj, UInt32 arg1, string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetBillingAddress(UInt32 arg1, string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone) { var call = this.GetFunction<NativeSetBillingAddress>(this.Functions.SetBillingAddress); return call(this.ObjectAddress, arg1, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAddress1 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAddress2 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCity ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPostcode ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchState ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCountry ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPhone ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetBillingAddress(IntPtr thisobj, UInt32 arg1, string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetBillingAddress(UInt32 arg1, string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone) { var call = this.GetFunction<NativeGetBillingAddress>(this.Functions.GetBillingAddress); return call(this.ObjectAddress, arg1, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAddress1 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAddress2 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCity ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPostcode ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchState ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCountry ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPhone ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetShippingAddress(IntPtr thisobj, string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone, string arg9);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetShippingAddress(string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone, string arg9) { var call = this.GetFunction<NativeSetShippingAddress>(this.Functions.SetShippingAddress); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAddress1 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAddress2 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCity ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPostcode ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchState ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCountry ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPhone ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg9 ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetShippingAddress(IntPtr thisobj, string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetShippingAddress(string pchName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone) { var call = this.GetFunction<NativeGetShippingAddress>(this.Functions.GetShippingAddress); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAddress1 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAddress2 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCity ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPostcode ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchState ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCountry ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPhone ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetCardInfo(IntPtr thisobj, UInt32 arg1, ECreditCardType eCreditCardType, string pchCardNumber, string pchCardHolderName, string pchCardExpYear, string pchCardExpMonth, string pchCardCVV2, string arg8);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetCardInfo(UInt32 arg1, ECreditCardType eCreditCardType, string pchCardNumber, string pchCardHolderName, string pchCardExpYear, string pchCardExpMonth, string pchCardCVV2, string arg8) { var call = this.GetFunction<NativeSetCardInfo>(this.Functions.SetCardInfo); return call(this.ObjectAddress, arg1, eCreditCardType, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCardNumber ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCardHolderName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCardExpYear ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCardExpMonth ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCardCVV2 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg8 ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetCardInfo(IntPtr thisobj, UInt32 arg1, ref ECreditCardType eCreditCardType, string pchCardNumber, string pchCardHolderName, string pchCardExpYear, string pchCardExpMonth, string pchCardCVV2, string arg8);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetCardInfo(UInt32 arg1, ref ECreditCardType eCreditCardType, string pchCardNumber, string pchCardHolderName, string pchCardExpYear, string pchCardExpMonth, string pchCardCVV2, string arg8) { var call = this.GetFunction<NativeGetCardInfo>(this.Functions.GetCardInfo); return call(this.ObjectAddress, arg1, ref eCreditCardType, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCardNumber ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCardHolderName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCardExpYear ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCardExpMonth ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCardCVV2 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg8 ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicensePackageID(IntPtr thisobj, UInt32 licenseId);
		public UInt32 GetLicensePackageID(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicensePackageID>(this.Functions.GetLicensePackageID); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicenseTimeCreated(IntPtr thisobj, UInt32 licenseId);
		public UInt32 GetLicenseTimeCreated(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicenseTimeCreated>(this.Functions.GetLicenseTimeCreated); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLicenseTimeNextProcess(IntPtr thisobj, UInt32 licenseId);
		public Int32 GetLicenseTimeNextProcess(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicenseTimeNextProcess>(this.Functions.GetLicenseTimeNextProcess); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicenseMinuteLimit(IntPtr thisobj, UInt32 licenseId);
		public UInt32 GetLicenseMinuteLimit(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicenseMinuteLimit>(this.Functions.GetLicenseMinuteLimit); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicenseMinutesUsed(IntPtr thisobj, UInt32 licenseId);
		public UInt32 GetLicenseMinutesUsed(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicenseMinutesUsed>(this.Functions.GetLicenseMinutesUsed); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPaymentMethod NativeGetLicensePaymentMethod(IntPtr thisobj, UInt32 licenseId);
		public EPaymentMethod GetLicensePaymentMethod(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicensePaymentMethod>(this.Functions.GetLicensePaymentMethod); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELicenseFlags NativeGetLicenseFlags(IntPtr thisobj, UInt32 licenseId);
		public ELicenseFlags GetLicenseFlags(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicenseFlags>(this.Functions.GetLicenseFlags); return call(this.ObjectAddress, licenseId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLicensePurchaseCountryCode(IntPtr thisobj, UInt32 licenseId);
		public string GetLicensePurchaseCountryCode(UInt32 licenseId) { var call = this.GetFunction<NativeGetLicensePurchaseCountryCode>(this.Functions.GetLicensePurchaseCountryCode); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, licenseId) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetReceiptPackageID(IntPtr thisobj, UInt32 arg1);
		public Int32 GetReceiptPackageID(UInt32 arg1) { var call = this.GetFunction<NativeGetReceiptPackageID>(this.Functions.GetReceiptPackageID); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetReceiptStatus(IntPtr thisobj, UInt32 arg1);
		public Int32 GetReceiptStatus(UInt32 arg1) { var call = this.GetFunction<NativeGetReceiptStatus>(this.Functions.GetReceiptStatus); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetReceiptResultDetail(IntPtr thisobj, UInt32 arg1);
		public Int32 GetReceiptResultDetail(UInt32 arg1) { var call = this.GetFunction<NativeGetReceiptResultDetail>(this.Functions.GetReceiptResultDetail); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetReceiptTransTime(IntPtr thisobj, UInt32 arg1);
		public UInt32 GetReceiptTransTime(UInt32 arg1) { var call = this.GetFunction<NativeGetReceiptTransTime>(this.Functions.GetReceiptTransTime); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetReceiptTransID(IntPtr thisobj, UInt32 arg1);
		public Int32 GetReceiptTransID(UInt32 arg1) { var call = this.GetFunction<NativeGetReceiptTransID>(this.Functions.GetReceiptTransID); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetReceiptAcknowledged(IntPtr thisobj, UInt32 arg1);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetReceiptAcknowledged(UInt32 arg1) { var call = this.GetFunction<NativeGetReceiptAcknowledged>(this.Functions.GetReceiptAcknowledged); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPaymentMethod NativeGetReceiptPaymentMethod(IntPtr thisobj, UInt32 arg1);
		public EPaymentMethod GetReceiptPaymentMethod(UInt32 arg1) { var call = this.GetFunction<NativeGetReceiptPaymentMethod>(this.Functions.GetReceiptPaymentMethod); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetReceiptBaseCost(IntPtr thisobj, UInt32 arg1);
		public UInt32 GetReceiptBaseCost(UInt32 arg1) { var call = this.GetFunction<NativeGetReceiptBaseCost>(this.Functions.GetReceiptBaseCost); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetReceiptTotalDiscount(IntPtr thisobj, UInt32 arg1);
		public UInt32 GetReceiptTotalDiscount(UInt32 arg1) { var call = this.GetFunction<NativeGetReceiptTotalDiscount>(this.Functions.GetReceiptTotalDiscount); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetReceiptTax(IntPtr thisobj, UInt32 arg1);
		public UInt32 GetReceiptTax(UInt32 arg1) { var call = this.GetFunction<NativeGetReceiptTax>(this.Functions.GetReceiptTax); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetReceiptShipping(IntPtr thisobj, UInt32 arg1);
		public UInt32 GetReceiptShipping(UInt32 arg1) { var call = this.GetFunction<NativeGetReceiptShipping>(this.Functions.GetReceiptShipping); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetReceiptCountryCode(IntPtr thisobj, UInt32 arg1);
		public string GetReceiptCountryCode(UInt32 arg1) { var call = this.GetFunction<NativeGetReceiptCountryCode>(this.Functions.GetReceiptCountryCode); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, arg1) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumLicenses(IntPtr thisobj);
		public UInt32 GetNumLicenses() { var call = this.GetFunction<NativeGetNumLicenses>(this.Functions.GetNumLicenses); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumReceipts(IntPtr thisobj);
		public UInt32 GetNumReceipts() { var call = this.GetFunction<NativeGetNumReceipts>(this.Functions.GetNumReceipts); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePurchaseWithMachineID(IntPtr thisobj, Int32 arg1, string arg2);
		public Int32 PurchaseWithMachineID(Int32 arg1, string arg2) { var call = this.GetFunction<NativePurchaseWithMachineID>(this.Functions.PurchaseWithMachineID); return call(this.ObjectAddress, arg1, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg2 ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitClickAndBuyPurchase(IntPtr thisobj, Int32 arg1, Int64 int64, string arg3, string arg4);
		public Int32 InitClickAndBuyPurchase(Int32 arg1, Int64 int64, string arg3, string arg4) { var call = this.GetFunction<NativeInitClickAndBuyPurchase>(this.Functions.InitClickAndBuyPurchase); return call(this.ObjectAddress, arg1, int64, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg3 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg4 ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetPreviousClickAndBuyAccount(IntPtr thisobj, ref Int64 arg1, string arg2, string arg3);
		public Int32 GetPreviousClickAndBuyAccount(ref Int64 arg1, string arg2, string arg3) { var call = this.GetFunction<NativeGetPreviousClickAndBuyAccount>(this.Functions.GetPreviousClickAndBuyAccount); return call(this.ObjectAddress, ref arg1, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg2 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg3 ) )); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUserItems002VTable
	{
		public IntPtr LoadItems;
		public IntPtr GetItemCount;
		public IntPtr GetItemIterative;
		public IntPtr GetItemByID;
		public IntPtr GetItemAttribute;
		public IntPtr UpdateInventoryPos;
		public IntPtr DropItem;
		public IntPtr GetItemBlob;
		public IntPtr SetItemBlob;
	}
	
	public class ISteamUserItems002 : NativeWrapper<ISteamUserItems002VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeLoadItems(IntPtr thisobj);
		public UInt64 LoadItems() { var call = this.GetFunction<NativeLoadItems>(this.Functions.LoadItems); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetItemCount(IntPtr thisobj);
		public UInt64 GetItemCount() { var call = this.GetFunction<NativeGetItemCount>(this.Functions.GetItemCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemIterative(IntPtr thisobj, UInt32 i, ref UInt64 UniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemIterative(UInt32 i, ref UInt64 UniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute) { var call = this.GetFunction<NativeGetItemIterative>(this.Functions.GetItemIterative); return call(this.ObjectAddress, i, ref UniqueID, ref ItemType, ref ItemLevel, ref Quality, ref Flags, ref Quantity, ref NbOfAttribute); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemByID(IntPtr thisobj, UInt64 uniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemByID(UInt64 uniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute) { var call = this.GetFunction<NativeGetItemByID>(this.Functions.GetItemByID); return call(this.ObjectAddress, uniqueID, ref ItemType, ref ItemLevel, ref Quality, ref Flags, ref Quantity, ref NbOfAttribute); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetItemAttribute(IntPtr thisobj, UInt64 uniqueID, UInt32 b, ref UInt32 c, ref float d);
		public void GetItemAttribute(UInt64 uniqueID, UInt32 b, ref UInt32 c, ref float d) { var call = this.GetFunction<NativeGetItemAttribute>(this.Functions.GetItemAttribute); call(this.ObjectAddress, uniqueID, b, ref c, ref d); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateInventoryPos(IntPtr thisobj, UInt64 uniqueID, UInt32 b);
		public void UpdateInventoryPos(UInt64 uniqueID, UInt32 b) { var call = this.GetFunction<NativeUpdateInventoryPos>(this.Functions.UpdateInventoryPos); call(this.ObjectAddress, uniqueID, b); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeDropItem(IntPtr thisobj, UInt64 itemId);
		public void DropItem(UInt64 itemId) { var call = this.GetFunction<NativeDropItem>(this.Functions.DropItem); call(this.ObjectAddress, itemId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetItemBlob(IntPtr thisobj, UInt64 itemId);
		public UInt64 GetItemBlob(UInt64 itemId) { var call = this.GetFunction<NativeGetItemBlob>(this.Functions.GetItemBlob); return call(this.ObjectAddress, itemId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeSetItemBlob(IntPtr thisobj, UInt64 itemID, byte[] blob, UInt32 size);
		public UInt64 SetItemBlob(UInt64 itemID, byte[] blob, UInt32 size) { var call = this.GetFunction<NativeSetItemBlob>(this.Functions.SetItemBlob); return call(this.ObjectAddress, itemID, blob, size); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUserItems004VTable
	{
		public IntPtr LoadItems;
		public IntPtr GetItemCount;
		public IntPtr GetItemIterative;
		public IntPtr GetItemByID;
		public IntPtr GetItemAttribute;
		public IntPtr UpdateInventoryPos;
		public IntPtr DeleteItem;
		public IntPtr GetItemBlob;
		public IntPtr SetItemBlob;
		public IntPtr DropItem;
	}
	
	public class ISteamUserItems004 : NativeWrapper<ISteamUserItems004VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeLoadItems(IntPtr thisobj);
		public UInt64 LoadItems() { var call = this.GetFunction<NativeLoadItems>(this.Functions.LoadItems); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetItemCount(IntPtr thisobj);
		public UInt64 GetItemCount() { var call = this.GetFunction<NativeGetItemCount>(this.Functions.GetItemCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemIterative(IntPtr thisobj, UInt32 i, ref UInt64 UniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemIterative(UInt32 i, ref UInt64 UniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute) { var call = this.GetFunction<NativeGetItemIterative>(this.Functions.GetItemIterative); return call(this.ObjectAddress, i, ref UniqueID, ref ItemType, ref ItemLevel, ref Quality, ref Flags, ref Quantity, ref NbOfAttribute); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemByID(IntPtr thisobj, UInt64 uniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemByID(UInt64 uniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute) { var call = this.GetFunction<NativeGetItemByID>(this.Functions.GetItemByID); return call(this.ObjectAddress, uniqueID, ref ItemType, ref ItemLevel, ref Quality, ref Flags, ref Quantity, ref NbOfAttribute); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetItemAttribute(IntPtr thisobj, UInt64 uniqueID, UInt32 b, ref UInt32 c, ref float d);
		public void GetItemAttribute(UInt64 uniqueID, UInt32 b, ref UInt32 c, ref float d) { var call = this.GetFunction<NativeGetItemAttribute>(this.Functions.GetItemAttribute); call(this.ObjectAddress, uniqueID, b, ref c, ref d); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateInventoryPos(IntPtr thisobj, UInt64 uniqueID, UInt32 b);
		public void UpdateInventoryPos(UInt64 uniqueID, UInt32 b) { var call = this.GetFunction<NativeUpdateInventoryPos>(this.Functions.UpdateInventoryPos); call(this.ObjectAddress, uniqueID, b); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeDeleteItem(IntPtr thisobj, UInt64 itemId);
		public Int32 DeleteItem(UInt64 itemId) { var call = this.GetFunction<NativeDeleteItem>(this.Functions.DeleteItem); return call(this.ObjectAddress, itemId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetItemBlob(IntPtr thisobj, UInt64 itemId);
		public UInt64 GetItemBlob(UInt64 itemId) { var call = this.GetFunction<NativeGetItemBlob>(this.Functions.GetItemBlob); return call(this.ObjectAddress, itemId); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeSetItemBlob(IntPtr thisobj, UInt64 itemID, byte[] blob, UInt32 arg3);
		public UInt64 SetItemBlob(UInt64 itemID, byte[] blob, UInt32 arg3) { var call = this.GetFunction<NativeSetItemBlob>(this.Functions.SetItemBlob); return call(this.ObjectAddress, itemID, blob, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeDropItem(IntPtr thisobj, UInt64 itemId);
		public void DropItem(UInt64 itemId) { var call = this.GetFunction<NativeDropItem>(this.Functions.DropItem); call(this.ObjectAddress, itemId); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientBillingVTable
	{
		public IntPtr GetActivationCodeInfo;
		public IntPtr PurchaseWithActivationCode;
		public IntPtr CancelLicense;
		public IntPtr AcknowledgePurchaseReceipt;
		public IntPtr GetLicensePackageID;
		public IntPtr GetLicenseTimeCreated;
		public IntPtr GetLicenseTimeNextProcess;
		public IntPtr GetLicenseMinuteLimit;
		public IntPtr GetLicenseMinutesUsed;
		public IntPtr GetLicensePaymentMethod;
		public IntPtr GetLicenseFlags;
		public IntPtr GetLicensePurchaseCountryCode;
		public IntPtr GetLicenseTerritoryCode;
		public IntPtr GetLicenseInfo;
		public IntPtr GetReceiptPackageID;
		public IntPtr GetReceiptStatus;
		public IntPtr GetReceiptResultDetail;
		public IntPtr GetReceiptTransTime;
		public IntPtr GetReceiptTransID;
		public IntPtr GetReceiptAcknowledged;
		public IntPtr GetReceiptPaymentMethod;
		public IntPtr GetReceiptBaseCost;
		public IntPtr GetReceiptTotalDiscount;
		public IntPtr GetReceiptTax;
		public IntPtr GetReceiptShipping;
		public IntPtr GetReceiptCurrencyCode;
		public IntPtr GetReceiptCountryCode;
		public IntPtr GetReceiptErrorHeadline;
		public IntPtr GetReceiptErrorString;
		public IntPtr GetReceiptErrorLinkText;
		public IntPtr GetReceiptErrorLinkURL;
		public IntPtr GetNumLicenses;
		public IntPtr GetNumReceipts;
		public IntPtr PurchaseWithMachineID;
		public IntPtr GetReceiptCardInfo;
		public IntPtr GetReceiptBillingAddress;
		public IntPtr GetReceiptLineItemCount;
		public IntPtr GetReceiptLineItemInfo;
		public IntPtr EnableTestLicense;
		public IntPtr DisableTestLicense;
		public IntPtr ActivateOEMTicket;
	}
	
	public class IClientBilling : NativeWrapper<IClientBillingVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetActivationCodeInfo(IntPtr thisobj, string pchActivationCode);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetActivationCodeInfo(string pchActivationCode) { var call = this.GetFunction<NativeGetActivationCodeInfo>(this.Functions.GetActivationCodeInfo); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchActivationCode ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativePurchaseWithActivationCode(IntPtr thisobj, string pchActivationCode);
		[return: MarshalAs(UnmanagedType.I1)] public bool PurchaseWithActivationCode(string pchActivationCode) { var call = this.GetFunction<NativePurchaseWithActivationCode>(this.Functions.PurchaseWithActivationCode); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchActivationCode ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeCancelLicense(IntPtr thisobj, UInt32 packageID, Int32 nCancelReason);
		[return: MarshalAs(UnmanagedType.I1)] public bool CancelLicense(UInt32 packageID, Int32 nCancelReason) { var call = this.GetFunction<NativeCancelLicense>(this.Functions.CancelLicense); return call(this.ObjectAddress, packageID, nCancelReason); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAcknowledgePurchaseReceipt(IntPtr thisobj, UInt32 nReceiptIndex);
		[return: MarshalAs(UnmanagedType.I1)] public bool AcknowledgePurchaseReceipt(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeAcknowledgePurchaseReceipt>(this.Functions.AcknowledgePurchaseReceipt); return call(this.ObjectAddress, nReceiptIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicensePackageID(IntPtr thisobj, UInt32 nLicenseIndex);
		public UInt32 GetLicensePackageID(UInt32 nLicenseIndex) { var call = this.GetFunction<NativeGetLicensePackageID>(this.Functions.GetLicensePackageID); return call(this.ObjectAddress, nLicenseIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicenseTimeCreated(IntPtr thisobj, UInt32 nLicenseIndex);
		public UInt32 GetLicenseTimeCreated(UInt32 nLicenseIndex) { var call = this.GetFunction<NativeGetLicenseTimeCreated>(this.Functions.GetLicenseTimeCreated); return call(this.ObjectAddress, nLicenseIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicenseTimeNextProcess(IntPtr thisobj, UInt32 nLicenseIndex);
		public UInt32 GetLicenseTimeNextProcess(UInt32 nLicenseIndex) { var call = this.GetFunction<NativeGetLicenseTimeNextProcess>(this.Functions.GetLicenseTimeNextProcess); return call(this.ObjectAddress, nLicenseIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLicenseMinuteLimit(IntPtr thisobj, UInt32 nLicenseIndex);
		public Int32 GetLicenseMinuteLimit(UInt32 nLicenseIndex) { var call = this.GetFunction<NativeGetLicenseMinuteLimit>(this.Functions.GetLicenseMinuteLimit); return call(this.ObjectAddress, nLicenseIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLicenseMinutesUsed(IntPtr thisobj, UInt32 nLicenseIndex);
		public Int32 GetLicenseMinutesUsed(UInt32 nLicenseIndex) { var call = this.GetFunction<NativeGetLicenseMinutesUsed>(this.Functions.GetLicenseMinutesUsed); return call(this.ObjectAddress, nLicenseIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPaymentMethod NativeGetLicensePaymentMethod(IntPtr thisobj, UInt32 nLicenseIndex);
		public EPaymentMethod GetLicensePaymentMethod(UInt32 nLicenseIndex) { var call = this.GetFunction<NativeGetLicensePaymentMethod>(this.Functions.GetLicensePaymentMethod); return call(this.ObjectAddress, nLicenseIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetLicenseFlags(IntPtr thisobj, UInt32 nLicenseIndex);
		public UInt32 GetLicenseFlags(UInt32 nLicenseIndex) { var call = this.GetFunction<NativeGetLicenseFlags>(this.Functions.GetLicenseFlags); return call(this.ObjectAddress, nLicenseIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetLicensePurchaseCountryCode(IntPtr thisobj, UInt32 nLicenseIndex);
		public string GetLicensePurchaseCountryCode(UInt32 nLicenseIndex) { var call = this.GetFunction<NativeGetLicensePurchaseCountryCode>(this.Functions.GetLicensePurchaseCountryCode); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, nLicenseIndex) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLicenseTerritoryCode(IntPtr thisobj, UInt32 nLicenseIndex);
		public Int32 GetLicenseTerritoryCode(UInt32 nLicenseIndex) { var call = this.GetFunction<NativeGetLicenseTerritoryCode>(this.Functions.GetLicenseTerritoryCode); return call(this.ObjectAddress, nLicenseIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetLicenseInfo(IntPtr thisobj, UInt32 nLicenseIndex, ref UInt32 arg2, ref UInt32 arg3, ref Int32 arg4, ref Int32 arg5, ref EPaymentMethod arg6, ref UInt32 arg7, ref Int32 arg8, string arg9);
		public Int32 GetLicenseInfo(UInt32 nLicenseIndex, ref UInt32 arg2, ref UInt32 arg3, ref Int32 arg4, ref Int32 arg5, ref EPaymentMethod arg6, ref UInt32 arg7, ref Int32 arg8, string arg9) { var call = this.GetFunction<NativeGetLicenseInfo>(this.Functions.GetLicenseInfo); return call(this.ObjectAddress, nLicenseIndex, ref arg2, ref arg3, ref arg4, ref arg5, ref arg6, ref arg7, ref arg8, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg9 ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetReceiptPackageID(IntPtr thisobj, UInt32 nReceiptIndex);
		public UInt32 GetReceiptPackageID(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptPackageID>(this.Functions.GetReceiptPackageID); return call(this.ObjectAddress, nReceiptIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPurchaseStatus NativeGetReceiptStatus(IntPtr thisobj, UInt32 nReceiptIndex);
		public EPurchaseStatus GetReceiptStatus(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptStatus>(this.Functions.GetReceiptStatus); return call(this.ObjectAddress, nReceiptIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPurchaseResultDetail NativeGetReceiptResultDetail(IntPtr thisobj, UInt32 nReceiptIndex);
		public EPurchaseResultDetail GetReceiptResultDetail(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptResultDetail>(this.Functions.GetReceiptResultDetail); return call(this.ObjectAddress, nReceiptIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetReceiptTransTime(IntPtr thisobj, UInt32 nReceiptIndex);
		public UInt32 GetReceiptTransTime(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptTransTime>(this.Functions.GetReceiptTransTime); return call(this.ObjectAddress, nReceiptIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetReceiptTransID(IntPtr thisobj, UInt32 nReceiptIndex);
		public UInt64 GetReceiptTransID(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptTransID>(this.Functions.GetReceiptTransID); return call(this.ObjectAddress, nReceiptIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetReceiptAcknowledged(IntPtr thisobj, UInt32 nReceiptIndex);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetReceiptAcknowledged(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptAcknowledged>(this.Functions.GetReceiptAcknowledged); return call(this.ObjectAddress, nReceiptIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EPaymentMethod NativeGetReceiptPaymentMethod(IntPtr thisobj, UInt32 nReceiptIndex);
		public EPaymentMethod GetReceiptPaymentMethod(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptPaymentMethod>(this.Functions.GetReceiptPaymentMethod); return call(this.ObjectAddress, nReceiptIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetReceiptBaseCost(IntPtr thisobj, UInt32 nReceiptIndex);
		public UInt32 GetReceiptBaseCost(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptBaseCost>(this.Functions.GetReceiptBaseCost); return call(this.ObjectAddress, nReceiptIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetReceiptTotalDiscount(IntPtr thisobj, UInt32 nReceiptIndex);
		public UInt32 GetReceiptTotalDiscount(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptTotalDiscount>(this.Functions.GetReceiptTotalDiscount); return call(this.ObjectAddress, nReceiptIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetReceiptTax(IntPtr thisobj, UInt32 nReceiptIndex);
		public UInt32 GetReceiptTax(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptTax>(this.Functions.GetReceiptTax); return call(this.ObjectAddress, nReceiptIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetReceiptShipping(IntPtr thisobj, UInt32 nReceiptIndex);
		public UInt32 GetReceiptShipping(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptShipping>(this.Functions.GetReceiptShipping); return call(this.ObjectAddress, nReceiptIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ECurrencyCode NativeGetReceiptCurrencyCode(IntPtr thisobj, UInt32 nReceiptIndex);
		public ECurrencyCode GetReceiptCurrencyCode(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptCurrencyCode>(this.Functions.GetReceiptCurrencyCode); return call(this.ObjectAddress, nReceiptIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetReceiptCountryCode(IntPtr thisobj, UInt32 nReceiptIndex);
		public string GetReceiptCountryCode(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptCountryCode>(this.Functions.GetReceiptCountryCode); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, nReceiptIndex) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetReceiptErrorHeadline(IntPtr thisobj, UInt32 nReceiptIndex);
		public string GetReceiptErrorHeadline(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptErrorHeadline>(this.Functions.GetReceiptErrorHeadline); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, nReceiptIndex) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetReceiptErrorString(IntPtr thisobj, UInt32 nReceiptIndex);
		public string GetReceiptErrorString(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptErrorString>(this.Functions.GetReceiptErrorString); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, nReceiptIndex) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetReceiptErrorLinkText(IntPtr thisobj, UInt32 nReceiptIndex);
		public string GetReceiptErrorLinkText(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptErrorLinkText>(this.Functions.GetReceiptErrorLinkText); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, nReceiptIndex) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetReceiptErrorLinkURL(IntPtr thisobj, UInt32 nReceiptIndex);
		public string GetReceiptErrorLinkURL(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptErrorLinkURL>(this.Functions.GetReceiptErrorLinkURL); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, nReceiptIndex) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumLicenses(IntPtr thisobj);
		public UInt32 GetNumLicenses() { var call = this.GetFunction<NativeGetNumLicenses>(this.Functions.GetNumLicenses); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumReceipts(IntPtr thisobj);
		public UInt32 GetNumReceipts() { var call = this.GetFunction<NativeGetNumReceipts>(this.Functions.GetNumReceipts); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativePurchaseWithMachineID(IntPtr thisobj, UInt32 packageId, string pchCustomData);
		[return: MarshalAs(UnmanagedType.I1)] public bool PurchaseWithMachineID(UInt32 packageId, string pchCustomData) { var call = this.GetFunction<NativePurchaseWithMachineID>(this.Functions.PurchaseWithMachineID); return call(this.ObjectAddress, packageId, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCustomData ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetReceiptCardInfo(IntPtr thisobj, UInt32 nReceiptIndex, ref ECreditCardType eCreditCardType, string pchCardLast4Digits, string pchCardHolderFirstName, string pchCardHolderLastName, string pchCardExpYear, string pchCardExpMonth);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetReceiptCardInfo(UInt32 nReceiptIndex, ref ECreditCardType eCreditCardType, string pchCardLast4Digits, string pchCardHolderFirstName, string pchCardHolderLastName, string pchCardExpYear, string pchCardExpMonth) { var call = this.GetFunction<NativeGetReceiptCardInfo>(this.Functions.GetReceiptCardInfo); return call(this.ObjectAddress, nReceiptIndex, ref eCreditCardType, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCardLast4Digits ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCardHolderFirstName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCardHolderLastName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCardExpYear ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCardExpMonth ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetReceiptBillingAddress(IntPtr thisobj, UInt32 nReceiptIndex, string pchFirstName, string pchLastName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetReceiptBillingAddress(UInt32 nReceiptIndex, string pchFirstName, string pchLastName, string pchAddress1, string pchAddress2, string pchCity, string pchPostcode, string pchState, string pchCountry, string pchPhone) { var call = this.GetFunction<NativeGetReceiptBillingAddress>(this.Functions.GetReceiptBillingAddress); return call(this.ObjectAddress, nReceiptIndex, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFirstName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchLastName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAddress1 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAddress2 ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCity ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPostcode ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchState ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchCountry ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPhone ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetReceiptLineItemCount(IntPtr thisobj, UInt32 nReceiptIndex);
		public UInt32 GetReceiptLineItemCount(UInt32 nReceiptIndex) { var call = this.GetFunction<NativeGetReceiptLineItemCount>(this.Functions.GetReceiptLineItemCount); return call(this.ObjectAddress, nReceiptIndex); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetReceiptLineItemInfo(IntPtr thisobj, UInt32 nReceiptIndex, UInt32 nLineItemIndex, ref UInt32 nPackageID, ref UInt32 nBaseCost, ref UInt32 nDiscount, ref UInt32 nTax, ref UInt32 nShipping, ref ECurrencyCode eCurrencyCode);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetReceiptLineItemInfo(UInt32 nReceiptIndex, UInt32 nLineItemIndex, ref UInt32 nPackageID, ref UInt32 nBaseCost, ref UInt32 nDiscount, ref UInt32 nTax, ref UInt32 nShipping, ref ECurrencyCode eCurrencyCode) { var call = this.GetFunction<NativeGetReceiptLineItemInfo>(this.Functions.GetReceiptLineItemInfo); return call(this.ObjectAddress, nReceiptIndex, nLineItemIndex, ref nPackageID, ref nBaseCost, ref nDiscount, ref nTax, ref nShipping, ref eCurrencyCode); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeEnableTestLicense(IntPtr thisobj, UInt32 unPackageID);
		public void EnableTestLicense(UInt32 unPackageID) { var call = this.GetFunction<NativeEnableTestLicense>(this.Functions.EnableTestLicense); call(this.ObjectAddress, unPackageID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeDisableTestLicense(IntPtr thisobj, UInt32 unPackageID);
		public void DisableTestLicense(UInt32 unPackageID) { var call = this.GetFunction<NativeDisableTestLicense>(this.Functions.DisableTestLicense); call(this.ObjectAddress, unPackageID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeActivateOEMTicket(IntPtr thisobj, string pchOEMLicenseFile);
		[return: MarshalAs(UnmanagedType.I1)] public bool ActivateOEMTicket(string pchOEMLicenseFile) { var call = this.GetFunction<NativeActivateOEMTicket>(this.Functions.ActivateOEMTicket); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchOEMLicenseFile ) )); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamMatchmakingServerListResponse001VTable
	{
		public IntPtr ServerResponded;
		public IntPtr ServerFailedToRespond;
		public IntPtr RefreshComplete;
	}
	
	public class ISteamMatchmakingServerListResponse001 : NativeWrapper<ISteamMatchmakingServerListResponse001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeServerResponded(IntPtr thisobj, Int32 iServer);
		public void ServerResponded(Int32 iServer) { var call = this.GetFunction<NativeServerResponded>(this.Functions.ServerResponded); call(this.ObjectAddress, iServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeServerFailedToRespond(IntPtr thisobj, Int32 iServer);
		public void ServerFailedToRespond(Int32 iServer) { var call = this.GetFunction<NativeServerFailedToRespond>(this.Functions.ServerFailedToRespond); call(this.ObjectAddress, iServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRefreshComplete(IntPtr thisobj, EMatchMakingServerResponse response);
		public void RefreshComplete(EMatchMakingServerResponse response) { var call = this.GetFunction<NativeRefreshComplete>(this.Functions.RefreshComplete); call(this.ObjectAddress, response); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientMatchmakingServersVTable
	{
		public IntPtr RequestInternetServerList;
		public IntPtr RequestLANServerList;
		public IntPtr RequestFriendsServerList;
		public IntPtr RequestFavoritesServerList;
		public IntPtr RequestHistoryServerList;
		public IntPtr RequestSpectatorServerList;
		public IntPtr ReleaseRequest;
		public IntPtr GetServerDetails;
		public IntPtr CancelQuery;
		public IntPtr RefreshQuery;
		public IntPtr IsRefreshing;
		public IntPtr GetServerCount;
		public IntPtr RefreshServer;
		public IntPtr PingServer;
		public IntPtr PlayerDetails;
		public IntPtr ServerRules;
		public IntPtr CancelServerQuery;
		public IntPtr _RequestXxxServerList_v001;
		public IntPtr _GetServerDetails_v001;
		public IntPtr _CancelQuery_v001;
		public IntPtr _RefreshQuery_v001;
		public IntPtr _IsRefreshing_v001;
		public IntPtr _GetServerCount_v001;
		public IntPtr _RefreshServer_v001;
	}
	
	public class IClientMatchmakingServers : NativeWrapper<IClientMatchmakingServersVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeRequestInternetServerList(IntPtr thisobj, UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse002 pRequestServersResponse);
		public IntPtr RequestInternetServerList(UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse002 pRequestServersResponse) { var call = this.GetFunction<NativeRequestInternetServerList>(this.Functions.RequestInternetServerList); return call(this.ObjectAddress, iApp, ref ppchFilters, nFilters, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeRequestLANServerList(IntPtr thisobj, UInt32 iApp, ref ISteamMatchmakingServerListResponse002 pRequestServersResponse);
		public IntPtr RequestLANServerList(UInt32 iApp, ref ISteamMatchmakingServerListResponse002 pRequestServersResponse) { var call = this.GetFunction<NativeRequestLANServerList>(this.Functions.RequestLANServerList); return call(this.ObjectAddress, iApp, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeRequestFriendsServerList(IntPtr thisobj, UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse002 pRequestServersResponse);
		public IntPtr RequestFriendsServerList(UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse002 pRequestServersResponse) { var call = this.GetFunction<NativeRequestFriendsServerList>(this.Functions.RequestFriendsServerList); return call(this.ObjectAddress, iApp, ref ppchFilters, nFilters, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeRequestFavoritesServerList(IntPtr thisobj, UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse002 pRequestServersResponse);
		public IntPtr RequestFavoritesServerList(UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse002 pRequestServersResponse) { var call = this.GetFunction<NativeRequestFavoritesServerList>(this.Functions.RequestFavoritesServerList); return call(this.ObjectAddress, iApp, ref ppchFilters, nFilters, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeRequestHistoryServerList(IntPtr thisobj, UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse002 pRequestServersResponse);
		public IntPtr RequestHistoryServerList(UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse002 pRequestServersResponse) { var call = this.GetFunction<NativeRequestHistoryServerList>(this.Functions.RequestHistoryServerList); return call(this.ObjectAddress, iApp, ref ppchFilters, nFilters, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeRequestSpectatorServerList(IntPtr thisobj, UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse002 pRequestServersResponse);
		public IntPtr RequestSpectatorServerList(UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse002 pRequestServersResponse) { var call = this.GetFunction<NativeRequestSpectatorServerList>(this.Functions.RequestSpectatorServerList); return call(this.ObjectAddress, iApp, ref ppchFilters, nFilters, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeReleaseRequest(IntPtr thisobj, byte[] hServerListRequest);
		public void ReleaseRequest(byte[] hServerListRequest) { var call = this.GetFunction<NativeReleaseRequest>(this.Functions.ReleaseRequest); call(this.ObjectAddress, hServerListRequest); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate gameserveritem_t NativeGetServerDetails(IntPtr thisobj, byte[] hServerListRequest, Int32 iServer);
		public gameserveritem_t GetServerDetails(byte[] hServerListRequest, Int32 iServer) { var call = this.GetFunction<NativeGetServerDetails>(this.Functions.GetServerDetails); return call(this.ObjectAddress, hServerListRequest, iServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCancelQuery(IntPtr thisobj, byte[] hServerListRequest);
		public void CancelQuery(byte[] hServerListRequest) { var call = this.GetFunction<NativeCancelQuery>(this.Functions.CancelQuery); call(this.ObjectAddress, hServerListRequest); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRefreshQuery(IntPtr thisobj, byte[] hServerListRequest);
		public void RefreshQuery(byte[] hServerListRequest) { var call = this.GetFunction<NativeRefreshQuery>(this.Functions.RefreshQuery); call(this.ObjectAddress, hServerListRequest); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsRefreshing(IntPtr thisobj, byte[] hServerListRequest);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsRefreshing(byte[] hServerListRequest) { var call = this.GetFunction<NativeIsRefreshing>(this.Functions.IsRefreshing); return call(this.ObjectAddress, hServerListRequest); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetServerCount(IntPtr thisobj, byte[] hServerListRequest);
		public Int32 GetServerCount(byte[] hServerListRequest) { var call = this.GetFunction<NativeGetServerCount>(this.Functions.GetServerCount); return call(this.ObjectAddress, hServerListRequest); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRefreshServer(IntPtr thisobj, byte[] hServerListRequest, Int32 iServer);
		public void RefreshServer(byte[] hServerListRequest, Int32 iServer) { var call = this.GetFunction<NativeRefreshServer>(this.Functions.RefreshServer); call(this.ObjectAddress, hServerListRequest, iServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePingServer(IntPtr thisobj, UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingPingResponse pRequestServersResponse);
		public Int32 PingServer(UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingPingResponse pRequestServersResponse) { var call = this.GetFunction<NativePingServer>(this.Functions.PingServer); return call(this.ObjectAddress, unIP, usPort, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePlayerDetails(IntPtr thisobj, UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingPlayersResponse pRequestServersResponse);
		public Int32 PlayerDetails(UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingPlayersResponse pRequestServersResponse) { var call = this.GetFunction<NativePlayerDetails>(this.Functions.PlayerDetails); return call(this.ObjectAddress, unIP, usPort, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeServerRules(IntPtr thisobj, UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingRulesResponse pRequestServersResponse);
		public Int32 ServerRules(UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingRulesResponse pRequestServersResponse) { var call = this.GetFunction<NativeServerRules>(this.Functions.ServerRules); return call(this.ObjectAddress, unIP, usPort, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCancelServerQuery(IntPtr thisobj, Int32 hServerQuery);
		public void CancelServerQuery(Int32 hServerQuery) { var call = this.GetFunction<NativeCancelServerQuery>(this.Functions.CancelServerQuery); call(this.ObjectAddress, hServerQuery); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void Native_RequestXxxServerList_v001(IntPtr thisobj, EMatchMakingType eType, UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse001 pRequestServersResponse);
		public void _RequestXxxServerList_v001(EMatchMakingType eType, UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse001 pRequestServersResponse) { var call = this.GetFunction<Native_RequestXxxServerList_v001>(this.Functions._RequestXxxServerList_v001); call(this.ObjectAddress, eType, iApp, ref ppchFilters, nFilters, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate gameserveritem_t Native_GetServerDetails_v001(IntPtr thisobj, EMatchMakingType eType, Int32 iServer);
		public gameserveritem_t _GetServerDetails_v001(EMatchMakingType eType, Int32 iServer) { var call = this.GetFunction<Native_GetServerDetails_v001>(this.Functions._GetServerDetails_v001); return call(this.ObjectAddress, eType, iServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void Native_CancelQuery_v001(IntPtr thisobj, EMatchMakingType eType);
		public void _CancelQuery_v001(EMatchMakingType eType) { var call = this.GetFunction<Native_CancelQuery_v001>(this.Functions._CancelQuery_v001); call(this.ObjectAddress, eType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void Native_RefreshQuery_v001(IntPtr thisobj, EMatchMakingType eType);
		public void _RefreshQuery_v001(EMatchMakingType eType) { var call = this.GetFunction<Native_RefreshQuery_v001>(this.Functions._RefreshQuery_v001); call(this.ObjectAddress, eType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool Native_IsRefreshing_v001(IntPtr thisobj, EMatchMakingType eType);
		[return: MarshalAs(UnmanagedType.I1)] public bool _IsRefreshing_v001(EMatchMakingType eType) { var call = this.GetFunction<Native_IsRefreshing_v001>(this.Functions._IsRefreshing_v001); return call(this.ObjectAddress, eType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 Native_GetServerCount_v001(IntPtr thisobj, EMatchMakingType eType);
		public Int32 _GetServerCount_v001(EMatchMakingType eType) { var call = this.GetFunction<Native_GetServerCount_v001>(this.Functions._GetServerCount_v001); return call(this.ObjectAddress, eType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void Native_RefreshServer_v001(IntPtr thisobj, EMatchMakingType eType, Int32 iServer);
		public void _RefreshServer_v001(EMatchMakingType eType, Int32 iServer) { var call = this.GetFunction<Native_RefreshServer_v001>(this.Functions._RefreshServer_v001); call(this.ObjectAddress, eType, iServer); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientGameServerStatsVTable
	{
		public IntPtr RequestUserStats;
		public IntPtr GetUserStat;
		public IntPtr GetUserStat1;
		public IntPtr GetUserAchievement;
		public IntPtr SetUserStat;
		public IntPtr SetUserStat1;
		public IntPtr UpdateUserAvgRateStat;
		public IntPtr SetUserAchievement;
		public IntPtr ClearUserAchievement;
		public IntPtr StoreUserStats;
		public IntPtr SetMaxStatsLoaded;
	}
	
	public class IClientGameServerStats : NativeWrapper<IClientGameServerStatsVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestUserStats(IntPtr thisobj, UInt64 steamIDUser, UInt64 gameID);
		public UInt64 RequestUserStats(UInt64 steamIDUser, UInt64 gameID) { var call = this.GetFunction<NativeRequestUserStats>(this.Functions.RequestUserStats); return call(this.ObjectAddress, steamIDUser, gameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserStat(IntPtr thisobj, UInt64 steamIDUser, UInt64 gameID, string pchName, ref Int32 pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserStat(UInt64 steamIDUser, UInt64 gameID, string pchName, ref Int32 pData) { var call = this.GetFunction<NativeGetUserStat>(this.Functions.GetUserStat); return call(this.ObjectAddress, steamIDUser, gameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserStat1(IntPtr thisobj, UInt64 steamIDUser, UInt64 gameID, string pchName, ref float pData);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserStat(UInt64 steamIDUser, UInt64 gameID, string pchName, ref float pData) { var call = this.GetFunction<NativeGetUserStat1>(this.Functions.GetUserStat1); return call(this.ObjectAddress, steamIDUser, gameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserAchievement(IntPtr thisobj, UInt64 steamIDUser, UInt64 gameID, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved, Int32 unk3);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserAchievement(UInt64 steamIDUser, UInt64 gameID, string pchName, [MarshalAs(UnmanagedType.I1)] ref bool pbAchieved, Int32 unk3) { var call = this.GetFunction<NativeGetUserAchievement>(this.Functions.GetUserAchievement); return call(this.ObjectAddress, steamIDUser, gameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), ref pbAchieved, unk3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetUserStat(IntPtr thisobj, UInt64 steamIDUser, UInt64 gameID, string pchName, Int32 nData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetUserStat(UInt64 steamIDUser, UInt64 gameID, string pchName, Int32 nData) { var call = this.GetFunction<NativeSetUserStat>(this.Functions.SetUserStat); return call(this.ObjectAddress, steamIDUser, gameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), nData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetUserStat1(IntPtr thisobj, UInt64 steamIDUser, UInt64 gameID, string pchName, float fData);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetUserStat(UInt64 steamIDUser, UInt64 gameID, string pchName, float fData) { var call = this.GetFunction<NativeSetUserStat1>(this.Functions.SetUserStat1); return call(this.ObjectAddress, steamIDUser, gameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), fData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateUserAvgRateStat(IntPtr thisobj, UInt64 steamIDUser, UInt64 gameID, string pchName, float flCountThisSession, double dSessionLength);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateUserAvgRateStat(UInt64 steamIDUser, UInt64 gameID, string pchName, float flCountThisSession, double dSessionLength) { var call = this.GetFunction<NativeUpdateUserAvgRateStat>(this.Functions.UpdateUserAvgRateStat); return call(this.ObjectAddress, steamIDUser, gameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) ), flCountThisSession, dSessionLength); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetUserAchievement(IntPtr thisobj, UInt64 steamIDUser, UInt64 gameID, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetUserAchievement(UInt64 steamIDUser, UInt64 gameID, string pchName) { var call = this.GetFunction<NativeSetUserAchievement>(this.Functions.SetUserAchievement); return call(this.ObjectAddress, steamIDUser, gameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeClearUserAchievement(IntPtr thisobj, UInt64 steamIDUser, UInt64 gameID, string pchName);
		[return: MarshalAs(UnmanagedType.I1)] public bool ClearUserAchievement(UInt64 steamIDUser, UInt64 gameID, string pchName) { var call = this.GetFunction<NativeClearUserAchievement>(this.Functions.ClearUserAchievement); return call(this.ObjectAddress, steamIDUser, gameID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeStoreUserStats(IntPtr thisobj, UInt64 steamIDUser, UInt64 gameID);
		public UInt64 StoreUserStats(UInt64 steamIDUser, UInt64 gameID) { var call = this.GetFunction<NativeStoreUserStats>(this.Functions.StoreUserStats); return call(this.ObjectAddress, steamIDUser, gameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetMaxStatsLoaded(IntPtr thisobj, UInt32 uMax);
		public Int32 SetMaxStatsLoaded(UInt32 uMax) { var call = this.GetFunction<NativeSetMaxStatsLoaded>(this.Functions.SetMaxStatsLoaded); return call(this.ObjectAddress, uMax); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientConfigStoreVTable
	{
		public IntPtr IsSet;
		public IntPtr GetBool;
		public IntPtr GetInt;
		public IntPtr GetUint64;
		public IntPtr GetFloat;
		public IntPtr GetString;
		public IntPtr GetBinary;
		public IntPtr GetBinaryWatermarked;
		public IntPtr SetBool;
		public IntPtr SetInt;
		public IntPtr SetUint64;
		public IntPtr SetFloat;
		public IntPtr SetString;
		public IntPtr SetBinary;
		public IntPtr SetBinaryWatermarked;
		public IntPtr RemoveKey;
		public IntPtr GetKeySerialized;
	}
	
	public class IClientConfigStore : NativeWrapper<IClientConfigStoreVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsSet(IntPtr thisobj, EConfigStore eConfigStore, string keyName);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsSet(EConfigStore eConfigStore, string keyName) { var call = this.GetFunction<NativeIsSet>(this.Functions.IsSet); return call(this.ObjectAddress, eConfigStore, Encoding.Default.GetString( Encoding.UTF8.GetBytes( keyName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetBool(IntPtr thisobj, EConfigStore eConfigStore, string keyName, [MarshalAs(UnmanagedType.I1)] bool defaultValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetBool(EConfigStore eConfigStore, string keyName, [MarshalAs(UnmanagedType.I1)] bool defaultValue) { var call = this.GetFunction<NativeGetBool>(this.Functions.GetBool); return call(this.ObjectAddress, eConfigStore, Encoding.Default.GetString( Encoding.UTF8.GetBytes( keyName ) ), defaultValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetInt(IntPtr thisobj, EConfigStore eConfigStore, string keyName, Int32 defaultValue);
		public Int32 GetInt(EConfigStore eConfigStore, string keyName, Int32 defaultValue) { var call = this.GetFunction<NativeGetInt>(this.Functions.GetInt); return call(this.ObjectAddress, eConfigStore, Encoding.Default.GetString( Encoding.UTF8.GetBytes( keyName ) ), defaultValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetUint64(IntPtr thisobj, EConfigStore eConfigStore, string keyName, UInt64 defaultValue);
		public UInt64 GetUint64(EConfigStore eConfigStore, string keyName, UInt64 defaultValue) { var call = this.GetFunction<NativeGetUint64>(this.Functions.GetUint64); return call(this.ObjectAddress, eConfigStore, Encoding.Default.GetString( Encoding.UTF8.GetBytes( keyName ) ), defaultValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate float NativeGetFloat(IntPtr thisobj, EConfigStore eConfigStore, string keyName, float defaultValue);
		public float GetFloat(EConfigStore eConfigStore, string keyName, float defaultValue) { var call = this.GetFunction<NativeGetFloat>(this.Functions.GetFloat); return call(this.ObjectAddress, eConfigStore, Encoding.Default.GetString( Encoding.UTF8.GetBytes( keyName ) ), defaultValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetString(IntPtr thisobj, EConfigStore eConfigStore, string keyName, string defaultValue);
		public string GetString(EConfigStore eConfigStore, string keyName, string defaultValue) { var call = this.GetFunction<NativeGetString>(this.Functions.GetString); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, eConfigStore, Encoding.Default.GetString( Encoding.UTF8.GetBytes( keyName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( defaultValue ) )) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetBinary(IntPtr thisobj, EConfigStore eConfigStore, string keyName, byte[] pBuffer, UInt32 uSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetBinary(EConfigStore eConfigStore, string keyName, byte[] pBuffer, UInt32 uSize) { var call = this.GetFunction<NativeGetBinary>(this.Functions.GetBinary); return call(this.ObjectAddress, eConfigStore, Encoding.Default.GetString( Encoding.UTF8.GetBytes( keyName ) ), pBuffer, uSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetBinaryWatermarked(IntPtr thisobj, EConfigStore eConfigStore, string keyName, byte[] pBuffer, UInt32 uSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetBinaryWatermarked(EConfigStore eConfigStore, string keyName, byte[] pBuffer, UInt32 uSize) { var call = this.GetFunction<NativeGetBinaryWatermarked>(this.Functions.GetBinaryWatermarked); return call(this.ObjectAddress, eConfigStore, Encoding.Default.GetString( Encoding.UTF8.GetBytes( keyName ) ), pBuffer, uSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetBool(IntPtr thisobj, EConfigStore eConfigStore, string keyName, [MarshalAs(UnmanagedType.I1)] bool value);
		public void SetBool(EConfigStore eConfigStore, string keyName, [MarshalAs(UnmanagedType.I1)] bool value) { var call = this.GetFunction<NativeSetBool>(this.Functions.SetBool); call(this.ObjectAddress, eConfigStore, Encoding.Default.GetString( Encoding.UTF8.GetBytes( keyName ) ), value); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetInt(IntPtr thisobj, EConfigStore eConfigStore, string keyName, Int32 value);
		public void SetInt(EConfigStore eConfigStore, string keyName, Int32 value) { var call = this.GetFunction<NativeSetInt>(this.Functions.SetInt); call(this.ObjectAddress, eConfigStore, Encoding.Default.GetString( Encoding.UTF8.GetBytes( keyName ) ), value); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetUint64(IntPtr thisobj, EConfigStore eConfigStore, string keyName, UInt64 value);
		public void SetUint64(EConfigStore eConfigStore, string keyName, UInt64 value) { var call = this.GetFunction<NativeSetUint64>(this.Functions.SetUint64); call(this.ObjectAddress, eConfigStore, Encoding.Default.GetString( Encoding.UTF8.GetBytes( keyName ) ), value); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetFloat(IntPtr thisobj, EConfigStore eConfigStore, string keyName, float value);
		public void SetFloat(EConfigStore eConfigStore, string keyName, float value) { var call = this.GetFunction<NativeSetFloat>(this.Functions.SetFloat); call(this.ObjectAddress, eConfigStore, Encoding.Default.GetString( Encoding.UTF8.GetBytes( keyName ) ), value); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetString(IntPtr thisobj, EConfigStore eConfigStore, string keyName, string value);
		public void SetString(EConfigStore eConfigStore, string keyName, string value) { var call = this.GetFunction<NativeSetString>(this.Functions.SetString); call(this.ObjectAddress, eConfigStore, Encoding.Default.GetString( Encoding.UTF8.GetBytes( keyName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( value ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetBinary(IntPtr thisobj, EConfigStore eConfigStore, string keyName, byte[] pBuffer, UInt32 uSize);
		public void SetBinary(EConfigStore eConfigStore, string keyName, byte[] pBuffer, UInt32 uSize) { var call = this.GetFunction<NativeSetBinary>(this.Functions.SetBinary); call(this.ObjectAddress, eConfigStore, Encoding.Default.GetString( Encoding.UTF8.GetBytes( keyName ) ), pBuffer, uSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetBinaryWatermarked(IntPtr thisobj, EConfigStore eConfigStore, string keyName, byte[] pBuffer, UInt32 uSize);
		public void SetBinaryWatermarked(EConfigStore eConfigStore, string keyName, byte[] pBuffer, UInt32 uSize) { var call = this.GetFunction<NativeSetBinaryWatermarked>(this.Functions.SetBinaryWatermarked); call(this.ObjectAddress, eConfigStore, Encoding.Default.GetString( Encoding.UTF8.GetBytes( keyName ) ), pBuffer, uSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRemoveKey(IntPtr thisobj, EConfigStore eConfigStore, string keyName);
		public void RemoveKey(EConfigStore eConfigStore, string keyName) { var call = this.GetFunction<NativeRemoveKey>(this.Functions.RemoveKey); call(this.ObjectAddress, eConfigStore, Encoding.Default.GetString( Encoding.UTF8.GetBytes( keyName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetKeySerialized(IntPtr thisobj, EConfigStore eConfigStore, string keyName, byte[] pBuffer, Int32 iSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetKeySerialized(EConfigStore eConfigStore, string keyName, byte[] pBuffer, Int32 iSize) { var call = this.GetFunction<NativeGetKeySerialized>(this.Functions.GetKeySerialized); return call(this.ObjectAddress, eConfigStore, Encoding.Default.GetString( Encoding.UTF8.GetBytes( keyName ) ), pBuffer, iSize); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class IClientEngineVTable
	{
		public IntPtr CreateSteamPipe;
		public IntPtr ReleaseSteamPipe;
		public IntPtr CreateGlobalUser;
		public IntPtr ConnectToGlobalUser;
		public IntPtr CreateLocalUser;
		public IntPtr ReleaseUser;
		public IntPtr IsValidHSteamUserPipe;
		public IntPtr GetIClientUser;
		public IntPtr GetIClientGameServer;
		public IntPtr SetLocalIPBinding;
		public IntPtr GetUniverseName;
		public IntPtr GetIClientFriends;
		public IntPtr GetIClientUtils;
		public IntPtr GetIClientBilling;
		public IntPtr GetIClientMatchmaking;
		public IntPtr GetIClientApps;
		public IntPtr GetIClientContentServer;
		//public IntPtr GetIClientMasterServerUpdater;
		public IntPtr GetIClientMatchmakingServers;
		public IntPtr RunFrame;
		public IntPtr GetIPCCallCount;
		public IntPtr GetIClientUserStats;
		public IntPtr GetIClientGameServerStats;
		public IntPtr GetIClientNetworking;
		public IntPtr GetIClientRemoteStorage;
		public IntPtr SetWarningMessageHook;
		public IntPtr GetIClientGameCoordinator;
		public IntPtr SetOverlayNotificationPosition;
		public IntPtr IsOverlayEnabled;
		public IntPtr GetAPICallResult;
		public IntPtr GetIClientDepotBuilder;
		public IntPtr ConCommandInit;
		public IntPtr GetIClientAppManager;
		public IntPtr GetIClientConfigStore;
		public IntPtr OverlayNeedsPresent;
		public IntPtr GetIClientGameStats;
		public IntPtr GetIClientHTTP;
		public IntPtr GetIPCServerMap;
		public IntPtr OnDebugTextArrived;
	}
	
	public class IClientEngine : NativeWrapper<IClientEngineVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateSteamPipe(IntPtr thisobj);
		public Int32 CreateSteamPipe() { var call = this.GetFunction<NativeCreateSteamPipe>(this.Functions.CreateSteamPipe); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeReleaseSteamPipe(IntPtr thisobj, Int32 hSteamPipe);
		[return: MarshalAs(UnmanagedType.I1)] public bool ReleaseSteamPipe(Int32 hSteamPipe) { var call = this.GetFunction<NativeReleaseSteamPipe>(this.Functions.ReleaseSteamPipe); return call(this.ObjectAddress, hSteamPipe); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateGlobalUser(IntPtr thisobj, ref Int32 phSteamPipe);
		public Int32 CreateGlobalUser(ref Int32 phSteamPipe) { var call = this.GetFunction<NativeCreateGlobalUser>(this.Functions.CreateGlobalUser); return call(this.ObjectAddress, ref phSteamPipe); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeConnectToGlobalUser(IntPtr thisobj, Int32 hSteamPipe);
		public Int32 ConnectToGlobalUser(Int32 hSteamPipe) { var call = this.GetFunction<NativeConnectToGlobalUser>(this.Functions.ConnectToGlobalUser); return call(this.ObjectAddress, hSteamPipe); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateLocalUser(IntPtr thisobj, ref Int32 phSteamPipe, EAccountType eAccountType);
		public Int32 CreateLocalUser(ref Int32 phSteamPipe, EAccountType eAccountType) { var call = this.GetFunction<NativeCreateLocalUser>(this.Functions.CreateLocalUser); return call(this.ObjectAddress, ref phSteamPipe, eAccountType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeReleaseUser(IntPtr thisobj, Int32 hSteamPipe, Int32 hUser);
		public void ReleaseUser(Int32 hSteamPipe, Int32 hUser) { var call = this.GetFunction<NativeReleaseUser>(this.Functions.ReleaseUser); call(this.ObjectAddress, hSteamPipe, hUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsValidHSteamUserPipe(IntPtr thisobj, Int32 hSteamPipe, Int32 hUser);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsValidHSteamUserPipe(Int32 hSteamPipe, Int32 hUser) { var call = this.GetFunction<NativeIsValidHSteamUserPipe>(this.Functions.IsValidHSteamUserPipe); return call(this.ObjectAddress, hSteamPipe, hUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetIClientUser(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetIClientUser(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientUser>(this.Functions.GetIClientUser); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetIClientGameServer(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetIClientGameServer(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientGameServer>(this.Functions.GetIClientGameServer); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLocalIPBinding(IntPtr thisobj, UInt32 unIP, UInt16 usPort);
		public void SetLocalIPBinding(UInt32 unIP, UInt16 usPort) { var call = this.GetFunction<NativeSetLocalIPBinding>(this.Functions.SetLocalIPBinding); call(this.ObjectAddress, unIP, usPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetUniverseName(IntPtr thisobj, EUniverse eUniverse);
		public string GetUniverseName(EUniverse eUniverse) { var call = this.GetFunction<NativeGetUniverseName>(this.Functions.GetUniverseName); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, eUniverse) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetIClientFriends(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetIClientFriends(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientFriends>(this.Functions.GetIClientFriends); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetIClientUtils(IntPtr thisobj, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetIClientUtils(Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientUtils>(this.Functions.GetIClientUtils); return call(this.ObjectAddress, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetIClientBilling(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetIClientBilling(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientBilling>(this.Functions.GetIClientBilling); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetIClientMatchmaking(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetIClientMatchmaking(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientMatchmaking>(this.Functions.GetIClientMatchmaking); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetIClientApps(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetIClientApps(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientApps>(this.Functions.GetIClientApps); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetIClientContentServer(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetIClientContentServer(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientContentServer>(this.Functions.GetIClientContentServer); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		//[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetIClientMasterServerUpdater(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		//public IntPtr GetIClientMasterServerUpdater(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientMasterServerUpdater>(this.Functions.GetIClientMasterServerUpdater); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetIClientMatchmakingServers(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetIClientMatchmakingServers(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientMatchmakingServers>(this.Functions.GetIClientMatchmakingServers); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRunFrame(IntPtr thisobj);
		public void RunFrame() { var call = this.GetFunction<NativeRunFrame>(this.Functions.RunFrame); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetIPCCallCount(IntPtr thisobj);
		public UInt32 GetIPCCallCount() { var call = this.GetFunction<NativeGetIPCCallCount>(this.Functions.GetIPCCallCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetIClientUserStats(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetIClientUserStats(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientUserStats>(this.Functions.GetIClientUserStats); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetIClientGameServerStats(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetIClientGameServerStats(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientGameServerStats>(this.Functions.GetIClientGameServerStats); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetIClientNetworking(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetIClientNetworking(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientNetworking>(this.Functions.GetIClientNetworking); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetIClientRemoteStorage(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetIClientRemoteStorage(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientRemoteStorage>(this.Functions.GetIClientRemoteStorage); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetWarningMessageHook(IntPtr thisobj, ref IntPtr pFunction);
		public void SetWarningMessageHook(ref IntPtr pFunction) { var call = this.GetFunction<NativeSetWarningMessageHook>(this.Functions.SetWarningMessageHook); call(this.ObjectAddress, ref pFunction); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetIClientGameCoordinator(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetIClientGameCoordinator(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientGameCoordinator>(this.Functions.GetIClientGameCoordinator); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetOverlayNotificationPosition(IntPtr thisobj, ENotificationPosition eNotificationPosition);
		public void SetOverlayNotificationPosition(ENotificationPosition eNotificationPosition) { var call = this.GetFunction<NativeSetOverlayNotificationPosition>(this.Functions.SetOverlayNotificationPosition); call(this.ObjectAddress, eNotificationPosition); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsOverlayEnabled(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsOverlayEnabled() { var call = this.GetFunction<NativeIsOverlayEnabled>(this.Functions.IsOverlayEnabled); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAPICallResult(IntPtr thisobj, Int32 hSteamPipe, UInt64 hSteamAPICall, IntPtr pCallback, Int32 cubCallback, Int32 iCallbackExpected, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetAPICallResult(Int32 hSteamPipe, UInt64 hSteamAPICall, IntPtr pCallback, Int32 cubCallback, Int32 iCallbackExpected, [MarshalAs(UnmanagedType.I1)] ref bool pbFailed) { var call = this.GetFunction<NativeGetAPICallResult>(this.Functions.GetAPICallResult); return call(this.ObjectAddress, hSteamPipe, hSteamAPICall, pCallback, cubCallback, iCallbackExpected, ref pbFailed); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetIClientDepotBuilder(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetIClientDepotBuilder(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientDepotBuilder>(this.Functions.GetIClientDepotBuilder); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeConCommandInit(IntPtr thisobj, ref IConCommandBaseAccessor pAccessor);
		public void ConCommandInit(ref IConCommandBaseAccessor pAccessor) { var call = this.GetFunction<NativeConCommandInit>(this.Functions.ConCommandInit); call(this.ObjectAddress, ref pAccessor); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetIClientAppManager(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetIClientAppManager(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientAppManager>(this.Functions.GetIClientAppManager); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetIClientConfigStore(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetIClientConfigStore(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientConfigStore>(this.Functions.GetIClientConfigStore); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeOverlayNeedsPresent(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool OverlayNeedsPresent() { var call = this.GetFunction<NativeOverlayNeedsPresent>(this.Functions.OverlayNeedsPresent); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetIClientGameStats(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetIClientGameStats(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientGameStats>(this.Functions.GetIClientGameStats); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetIClientHTTP(IntPtr thisobj, Int32 hSteamUser, Int32 hSteamPipe, string pchVersion);
		public IntPtr GetIClientHTTP(Int32 hSteamUser, Int32 hSteamPipe, string pchVersion) { var call = this.GetFunction<NativeGetIClientHTTP>(this.Functions.GetIClientHTTP); return call(this.ObjectAddress, hSteamUser, hSteamPipe, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetIPCServerMap(IntPtr thisobj);
		public IntPtr GetIPCServerMap() { var call = this.GetFunction<NativeGetIPCServerMap>(this.Functions.GetIPCServerMap); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeOnDebugTextArrived(IntPtr thisobj, string pchDebugText);
		public Int32 OnDebugTextArrived(string pchDebugText) { var call = this.GetFunction<NativeOnDebugTextArrived>(this.Functions.OnDebugTextArrived); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchDebugText ) )); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamGameCoordinator001VTable
	{
		public IntPtr SendMessage;
		public IntPtr IsMessageAvailable;
		public IntPtr RetrieveMessage;
	}
	
	public class ISteamGameCoordinator001 : NativeWrapper<ISteamGameCoordinator001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EGCResults NativeSendMessage(IntPtr thisobj, UInt32 unMsgType, byte[] pubData, UInt32 cubData);
		public EGCResults SendMessage(UInt32 unMsgType, byte[] pubData, UInt32 cubData) { var call = this.GetFunction<NativeSendMessage>(this.Functions.SendMessage); return call(this.ObjectAddress, unMsgType, pubData, cubData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsMessageAvailable(IntPtr thisobj, ref UInt32 pcubMsgSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsMessageAvailable(ref UInt32 pcubMsgSize) { var call = this.GetFunction<NativeIsMessageAvailable>(this.Functions.IsMessageAvailable); return call(this.ObjectAddress, ref pcubMsgSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EGCResults NativeRetrieveMessage(IntPtr thisobj, ref UInt32 punMsgType, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize);
		public EGCResults RetrieveMessage(ref UInt32 punMsgType, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize) { var call = this.GetFunction<NativeRetrieveMessage>(this.Functions.RetrieveMessage); return call(this.ObjectAddress, ref punMsgType, pubDest, cubDest, ref pcubMsgSize); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamGameServerItems002VTable
	{
		public IntPtr LoadItems;
		public IntPtr GetItemCount;
		public IntPtr GetItemIterative;
		public IntPtr GetItemByID;
		public IntPtr GetItemAttribute;
		public IntPtr CreateNewItemRequest;
		public IntPtr AddNewItemCriteria;
		public IntPtr AddNewItemCriteria1;
		public IntPtr SendNewItemRequest;
		public IntPtr GrantItemToUser;
		public IntPtr DeleteTemporaryItem;
		public IntPtr DeleteAllTemporaryItems;
	}
	
	public class ISteamGameServerItems002 : NativeWrapper<ISteamGameServerItems002VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeLoadItems(IntPtr thisobj, UInt64 steamid);
		public UInt64 LoadItems(UInt64 steamid) { var call = this.GetFunction<NativeLoadItems>(this.Functions.LoadItems); return call(this.ObjectAddress, steamid); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetItemCount(IntPtr thisobj, UInt64 steamid);
		public UInt64 GetItemCount(UInt64 steamid) { var call = this.GetFunction<NativeGetItemCount>(this.Functions.GetItemCount); return call(this.ObjectAddress, steamid); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemIterative(IntPtr thisobj, UInt64 steamid, UInt32 i, ref UInt64 UniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemIterative(UInt64 steamid, UInt32 i, ref UInt64 UniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity) { var call = this.GetFunction<NativeGetItemIterative>(this.Functions.GetItemIterative); return call(this.ObjectAddress, steamid, i, ref UniqueID, ref ItemType, ref ItemLevel, ref Quality, ref Flags, ref Quantity); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemByID(IntPtr thisobj, UInt64 itemid, ref UInt64 steamid, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemByID(UInt64 itemid, ref UInt64 steamid, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity) { var call = this.GetFunction<NativeGetItemByID>(this.Functions.GetItemByID); return call(this.ObjectAddress, itemid, ref steamid, ref ItemType, ref ItemLevel, ref Quality, ref Flags, ref Quantity); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemAttribute(IntPtr thisobj, UInt64 itemid, UInt32 arg2, ref UInt32 arg3, ref float arg4);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemAttribute(UInt64 itemid, UInt32 arg2, ref UInt32 arg3, ref float arg4) { var call = this.GetFunction<NativeGetItemAttribute>(this.Functions.GetItemAttribute); return call(this.ObjectAddress, itemid, arg2, ref arg3, ref arg4); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateNewItemRequest(IntPtr thisobj, UInt64 steamid, UInt32 arg2, EItemQuality quality);
		public Int32 CreateNewItemRequest(UInt64 steamid, UInt32 arg2, EItemQuality quality) { var call = this.GetFunction<NativeCreateNewItemRequest>(this.Functions.CreateNewItemRequest); return call(this.ObjectAddress, steamid, arg2, quality); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAddNewItemCriteria(IntPtr thisobj, Int32 ireq, string arg2, EItemCriteriaOperator arg3, string arg4, [MarshalAs(UnmanagedType.I1)] bool arg5);
		[return: MarshalAs(UnmanagedType.I1)] public bool AddNewItemCriteria(Int32 ireq, string arg2, EItemCriteriaOperator arg3, string arg4, [MarshalAs(UnmanagedType.I1)] bool arg5) { var call = this.GetFunction<NativeAddNewItemCriteria>(this.Functions.AddNewItemCriteria); return call(this.ObjectAddress, ireq, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg2 ) ), arg3, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg4 ) ), arg5); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAddNewItemCriteria1(IntPtr thisobj, Int32 ireq, string arg2, EItemCriteriaOperator arg3, float arg4, [MarshalAs(UnmanagedType.I1)] bool arg5);
		[return: MarshalAs(UnmanagedType.I1)] public bool AddNewItemCriteria(Int32 ireq, string arg2, EItemCriteriaOperator arg3, float arg4, [MarshalAs(UnmanagedType.I1)] bool arg5) { var call = this.GetFunction<NativeAddNewItemCriteria1>(this.Functions.AddNewItemCriteria1); return call(this.ObjectAddress, ireq, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg2 ) ), arg3, arg4, arg5); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeSendNewItemRequest(IntPtr thisobj, Int32 ireq);
		public UInt64 SendNewItemRequest(Int32 ireq) { var call = this.GetFunction<NativeSendNewItemRequest>(this.Functions.SendNewItemRequest); return call(this.ObjectAddress, ireq); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGrantItemToUser(IntPtr thisobj, UInt64 item, UInt64 steamid);
		public UInt64 GrantItemToUser(UInt64 item, UInt64 steamid) { var call = this.GetFunction<NativeGrantItemToUser>(this.Functions.GrantItemToUser); return call(this.ObjectAddress, item, steamid); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeDeleteTemporaryItem(IntPtr thisobj, UInt64 item);
		public UInt64 DeleteTemporaryItem(UInt64 item) { var call = this.GetFunction<NativeDeleteTemporaryItem>(this.Functions.DeleteTemporaryItem); return call(this.ObjectAddress, item); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeDeleteAllTemporaryItems(IntPtr thisobj);
		public UInt64 DeleteAllTemporaryItems() { var call = this.GetFunction<NativeDeleteAllTemporaryItems>(this.Functions.DeleteAllTemporaryItems); return call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamGameServerItems003VTable
	{
		public IntPtr LoadItems;
		public IntPtr GetItemCount;
		public IntPtr GetItemIterative;
		public IntPtr GetItemByID;
		public IntPtr GetItemAttribute;
		public IntPtr CreateNewItemRequest;
		public IntPtr AddNewItemLevel;
		public IntPtr AddNewItemQuality;
		public IntPtr SetNewItemInitialInventoryPos;
		public IntPtr SetNewItemInitialQuantity;
		public IntPtr AddNewItemCriteria;
		public IntPtr AddNewItemCriteria1;
		public IntPtr SendNewItemRequest;
		public IntPtr GrantItemToUser;
		public IntPtr DeleteTemporaryItem;
		public IntPtr DeleteAllTemporaryItems;
		public IntPtr UpdateQuantity;
		public IntPtr GetItemBlob;
		public IntPtr SetItemBlob;
	}
	
	public class ISteamGameServerItems003 : NativeWrapper<ISteamGameServerItems003VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeLoadItems(IntPtr thisobj, UInt64 steamid);
		public UInt64 LoadItems(UInt64 steamid) { var call = this.GetFunction<NativeLoadItems>(this.Functions.LoadItems); return call(this.ObjectAddress, steamid); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetItemCount(IntPtr thisobj, UInt64 steamid);
		public UInt64 GetItemCount(UInt64 steamid) { var call = this.GetFunction<NativeGetItemCount>(this.Functions.GetItemCount); return call(this.ObjectAddress, steamid); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemIterative(IntPtr thisobj, UInt64 steamid, UInt32 i, ref UInt64 UniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemIterative(UInt64 steamid, UInt32 i, ref UInt64 UniqueID, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute) { var call = this.GetFunction<NativeGetItemIterative>(this.Functions.GetItemIterative); return call(this.ObjectAddress, steamid, i, ref UniqueID, ref ItemType, ref ItemLevel, ref Quality, ref Flags, ref Quantity, ref NbOfAttribute); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemByID(IntPtr thisobj, UInt64 itemid, ref UInt64 steamid, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemByID(UInt64 itemid, ref UInt64 steamid, ref UInt32 ItemType, ref UInt32 ItemLevel, ref EItemQuality Quality, ref UInt32 Flags, ref UInt32 Quantity, ref UInt32 NbOfAttribute) { var call = this.GetFunction<NativeGetItemByID>(this.Functions.GetItemByID); return call(this.ObjectAddress, itemid, ref steamid, ref ItemType, ref ItemLevel, ref Quality, ref Flags, ref Quantity, ref NbOfAttribute); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetItemAttribute(IntPtr thisobj, UInt64 itemid, UInt32 arg2, ref UInt32 arg3, ref float arg4);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetItemAttribute(UInt64 itemid, UInt32 arg2, ref UInt32 arg3, ref float arg4) { var call = this.GetFunction<NativeGetItemAttribute>(this.Functions.GetItemAttribute); return call(this.ObjectAddress, itemid, arg2, ref arg3, ref arg4); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeCreateNewItemRequest(IntPtr thisobj, UInt64 steamid);
		public Int32 CreateNewItemRequest(UInt64 steamid) { var call = this.GetFunction<NativeCreateNewItemRequest>(this.Functions.CreateNewItemRequest); return call(this.ObjectAddress, steamid); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAddNewItemLevel(IntPtr thisobj, Int32 ireq, UInt32 level);
		[return: MarshalAs(UnmanagedType.I1)] public bool AddNewItemLevel(Int32 ireq, UInt32 level) { var call = this.GetFunction<NativeAddNewItemLevel>(this.Functions.AddNewItemLevel); return call(this.ObjectAddress, ireq, level); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAddNewItemQuality(IntPtr thisobj, Int32 ireq, EItemQuality quality);
		[return: MarshalAs(UnmanagedType.I1)] public bool AddNewItemQuality(Int32 ireq, EItemQuality quality) { var call = this.GetFunction<NativeAddNewItemQuality>(this.Functions.AddNewItemQuality); return call(this.ObjectAddress, ireq, quality); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetNewItemInitialInventoryPos(IntPtr thisobj, Int32 ireq, UInt32 pos);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetNewItemInitialInventoryPos(Int32 ireq, UInt32 pos) { var call = this.GetFunction<NativeSetNewItemInitialInventoryPos>(this.Functions.SetNewItemInitialInventoryPos); return call(this.ObjectAddress, ireq, pos); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetNewItemInitialQuantity(IntPtr thisobj, Int32 ireq, UInt32 quantity);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetNewItemInitialQuantity(Int32 ireq, UInt32 quantity) { var call = this.GetFunction<NativeSetNewItemInitialQuantity>(this.Functions.SetNewItemInitialQuantity); return call(this.ObjectAddress, ireq, quantity); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAddNewItemCriteria(IntPtr thisobj, Int32 ireq, string key, EItemCriteriaOperator criteria, string value, [MarshalAs(UnmanagedType.I1)] bool unkn);
		[return: MarshalAs(UnmanagedType.I1)] public bool AddNewItemCriteria(Int32 ireq, string key, EItemCriteriaOperator criteria, string value, [MarshalAs(UnmanagedType.I1)] bool unkn) { var call = this.GetFunction<NativeAddNewItemCriteria>(this.Functions.AddNewItemCriteria); return call(this.ObjectAddress, ireq, Encoding.Default.GetString( Encoding.UTF8.GetBytes( key ) ), criteria, Encoding.Default.GetString( Encoding.UTF8.GetBytes( value ) ), unkn); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAddNewItemCriteria1(IntPtr thisobj, Int32 ireq, string key, EItemCriteriaOperator criteria, float value, [MarshalAs(UnmanagedType.I1)] bool unkn);
		[return: MarshalAs(UnmanagedType.I1)] public bool AddNewItemCriteria(Int32 ireq, string key, EItemCriteriaOperator criteria, float value, [MarshalAs(UnmanagedType.I1)] bool unkn) { var call = this.GetFunction<NativeAddNewItemCriteria1>(this.Functions.AddNewItemCriteria1); return call(this.ObjectAddress, ireq, Encoding.Default.GetString( Encoding.UTF8.GetBytes( key ) ), criteria, value, unkn); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeSendNewItemRequest(IntPtr thisobj, Int32 ireq);
		public UInt64 SendNewItemRequest(Int32 ireq) { var call = this.GetFunction<NativeSendNewItemRequest>(this.Functions.SendNewItemRequest); return call(this.ObjectAddress, ireq); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGrantItemToUser(IntPtr thisobj, UInt64 item, UInt64 steamid);
		public UInt64 GrantItemToUser(UInt64 item, UInt64 steamid) { var call = this.GetFunction<NativeGrantItemToUser>(this.Functions.GrantItemToUser); return call(this.ObjectAddress, item, steamid); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeDeleteTemporaryItem(IntPtr thisobj, UInt64 item);
		public UInt64 DeleteTemporaryItem(UInt64 item) { var call = this.GetFunction<NativeDeleteTemporaryItem>(this.Functions.DeleteTemporaryItem); return call(this.ObjectAddress, item); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeDeleteAllTemporaryItems(IntPtr thisobj);
		public UInt64 DeleteAllTemporaryItems() { var call = this.GetFunction<NativeDeleteAllTemporaryItems>(this.Functions.DeleteAllTemporaryItems); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeUpdateQuantity(IntPtr thisobj, UInt64 item, UInt32 quantity);
		public UInt64 UpdateQuantity(UInt64 item, UInt32 quantity) { var call = this.GetFunction<NativeUpdateQuantity>(this.Functions.UpdateQuantity); return call(this.ObjectAddress, item, quantity); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetItemBlob(IntPtr thisobj, UInt64 item);
		public UInt64 GetItemBlob(UInt64 item) { var call = this.GetFunction<NativeGetItemBlob>(this.Functions.GetItemBlob); return call(this.ObjectAddress, item); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeSetItemBlob(IntPtr thisobj, UInt64 item, byte[] blob, UInt32 size);
		public UInt64 SetItemBlob(UInt64 item, byte[] blob, UInt32 size) { var call = this.GetFunction<NativeSetItemBlob>(this.Functions.SetItemBlob); return call(this.ObjectAddress, item, blob, size); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUser015VTable
	{
		public IntPtr GetHSteamUser;
		public IntPtr BLoggedOn;
		public IntPtr GetSteamID;
		public IntPtr InitiateGameConnection;
		public IntPtr TerminateGameConnection;
		public IntPtr TrackAppUsageEvent;
		public IntPtr GetUserDataFolder;
		public IntPtr StartVoiceRecording;
		public IntPtr StopVoiceRecording;
		public IntPtr GetAvailableVoice;
		public IntPtr GetVoice;
		public IntPtr DecompressVoice;
		public IntPtr GetVoiceOptimalSampleRate;
		public IntPtr GetAuthSessionTicket;
		public IntPtr BeginAuthSession;
		public IntPtr EndAuthSession;
		public IntPtr CancelAuthTicket;
		public IntPtr UserHasLicenseForApp;
		public IntPtr IsBehindNAT;
		public IntPtr AdvertiseGame;
		public IntPtr RequestEncryptedAppTicket;
		public IntPtr GetEncryptedAppTicket;
	}
	
	public class ISteamUser015 : NativeWrapper<ISteamUser015VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetHSteamUser(IntPtr thisobj);
		public Int32 GetHSteamUser() { var call = this.GetFunction<NativeGetHSteamUser>(this.Functions.GetHSteamUser); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeBLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool BLoggedOn() { var call = this.GetFunction<NativeBLoggedOn>(this.Functions.BLoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetSteamID(IntPtr thisobj, ref UInt64 ret);
		public UInt64 GetSteamID() { UInt64 ret = 0; var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitiateGameConnection(IntPtr thisobj, byte[] pAuthBlob, Int32 cbMaxAuthBlob, UInt64 steamIDGameServer, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure);
		public Int32 InitiateGameConnection(byte[] pAuthBlob, Int32 cbMaxAuthBlob, UInt64 steamIDGameServer, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure) { var call = this.GetFunction<NativeInitiateGameConnection>(this.Functions.InitiateGameConnection); return call(this.ObjectAddress, pAuthBlob, cbMaxAuthBlob, steamIDGameServer, unIPServer, usPortServer, bSecure); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTerminateGameConnection(IntPtr thisobj, UInt32 unIPServer, UInt16 usPortServer);
		public void TerminateGameConnection(UInt32 unIPServer, UInt16 usPortServer) { var call = this.GetFunction<NativeTerminateGameConnection>(this.Functions.TerminateGameConnection); call(this.ObjectAddress, unIPServer, usPortServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTrackAppUsageEvent(IntPtr thisobj, UInt64 gameID, EAppUsageEvent eAppUsageEvent, string arg3);
		public void TrackAppUsageEvent(UInt64 gameID, EAppUsageEvent eAppUsageEvent, string arg3) { var call = this.GetFunction<NativeTrackAppUsageEvent>(this.Functions.TrackAppUsageEvent); call(this.ObjectAddress, gameID, eAppUsageEvent, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg3 ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserDataFolder(IntPtr thisobj, string pchBuffer, Int32 cubBuffer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserDataFolder(string pchBuffer, Int32 cubBuffer) { var call = this.GetFunction<NativeGetUserDataFolder>(this.Functions.GetUserDataFolder); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchBuffer ) ), cubBuffer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeStartVoiceRecording(IntPtr thisobj);
		public void StartVoiceRecording() { var call = this.GetFunction<NativeStartVoiceRecording>(this.Functions.StartVoiceRecording); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeStopVoiceRecording(IntPtr thisobj);
		public void StopVoiceRecording() { var call = this.GetFunction<NativeStopVoiceRecording>(this.Functions.StopVoiceRecording); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EVoiceResult NativeGetAvailableVoice(IntPtr thisobj, ref UInt32 pcbCompressed, ref UInt32 pcbUncompressed);
		public EVoiceResult GetAvailableVoice(ref UInt32 pcbCompressed, ref UInt32 pcbUncompressed) { var call = this.GetFunction<NativeGetAvailableVoice>(this.Functions.GetAvailableVoice); return call(this.ObjectAddress, ref pcbCompressed, ref pcbUncompressed); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EVoiceResult NativeGetVoice(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bWantCompressed, byte[] pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten, [MarshalAs(UnmanagedType.I1)] bool bWantUncompressed, byte[] pUncompressedDestBuffer, UInt32 cbUncompressedDestBufferSize, ref UInt32 nUncompressBytesWritten);
		public EVoiceResult GetVoice([MarshalAs(UnmanagedType.I1)] bool bWantCompressed, byte[] pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten, [MarshalAs(UnmanagedType.I1)] bool bWantUncompressed, byte[] pUncompressedDestBuffer, UInt32 cbUncompressedDestBufferSize, ref UInt32 nUncompressBytesWritten) { var call = this.GetFunction<NativeGetVoice>(this.Functions.GetVoice); return call(this.ObjectAddress, bWantCompressed, pDestBuffer, cbDestBufferSize, ref nBytesWritten, bWantUncompressed, pUncompressedDestBuffer, cbUncompressedDestBufferSize, ref nUncompressBytesWritten); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EVoiceResult NativeDecompressVoice(IntPtr thisobj, byte[] pCompressed, UInt32 cbCompressed, byte[] pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten, UInt32 nSamplesPerSec);
		public EVoiceResult DecompressVoice(byte[] pCompressed, UInt32 cbCompressed, byte[] pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten, UInt32 nSamplesPerSec) { var call = this.GetFunction<NativeDecompressVoice>(this.Functions.DecompressVoice); return call(this.ObjectAddress, pCompressed, cbCompressed, pDestBuffer, cbDestBufferSize, ref nBytesWritten, nSamplesPerSec); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetVoiceOptimalSampleRate(IntPtr thisobj);
		public UInt32 GetVoiceOptimalSampleRate() { var call = this.GetFunction<NativeGetVoiceOptimalSampleRate>(this.Functions.GetVoiceOptimalSampleRate); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAuthSessionTicket(IntPtr thisobj, byte[] pTicket, Int32 cbMaxTicket, ref UInt32 pcbTicket);
		public UInt32 GetAuthSessionTicket(byte[] pTicket, Int32 cbMaxTicket, ref UInt32 pcbTicket) { var call = this.GetFunction<NativeGetAuthSessionTicket>(this.Functions.GetAuthSessionTicket); return call(this.ObjectAddress, pTicket, cbMaxTicket, ref pcbTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EBeginAuthSessionResult NativeBeginAuthSession(IntPtr thisobj, byte[] pAuthTicket, Int32 cbAuthTicket, UInt64 steamID);
		public EBeginAuthSessionResult BeginAuthSession(byte[] pAuthTicket, Int32 cbAuthTicket, UInt64 steamID) { var call = this.GetFunction<NativeBeginAuthSession>(this.Functions.BeginAuthSession); return call(this.ObjectAddress, pAuthTicket, cbAuthTicket, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeEndAuthSession(IntPtr thisobj, UInt64 steamID);
		public void EndAuthSession(UInt64 steamID) { var call = this.GetFunction<NativeEndAuthSession>(this.Functions.EndAuthSession); call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCancelAuthTicket(IntPtr thisobj, UInt32 hAuthTicket);
		public void CancelAuthTicket(UInt32 hAuthTicket) { var call = this.GetFunction<NativeCancelAuthTicket>(this.Functions.CancelAuthTicket); call(this.ObjectAddress, hAuthTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EUserHasLicenseForAppResult NativeUserHasLicenseForApp(IntPtr thisobj, UInt64 steamID, UInt32 appID);
		public EUserHasLicenseForAppResult UserHasLicenseForApp(UInt64 steamID, UInt32 appID) { var call = this.GetFunction<NativeUserHasLicenseForApp>(this.Functions.UserHasLicenseForApp); return call(this.ObjectAddress, steamID, appID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsBehindNAT(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsBehindNAT() { var call = this.GetFunction<NativeIsBehindNAT>(this.Functions.IsBehindNAT); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAdvertiseGame(IntPtr thisobj, UInt64 steamIDGameServer, UInt32 arg2, UInt16 usPortServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool AdvertiseGame(UInt64 steamIDGameServer, UInt32 arg2, UInt16 usPortServer) { var call = this.GetFunction<NativeAdvertiseGame>(this.Functions.AdvertiseGame); return call(this.ObjectAddress, steamIDGameServer, arg2, usPortServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestEncryptedAppTicket(IntPtr thisobj, byte[] pUserData, Int32 cbUserData);
		public UInt64 RequestEncryptedAppTicket(byte[] pUserData, Int32 cbUserData) { var call = this.GetFunction<NativeRequestEncryptedAppTicket>(this.Functions.RequestEncryptedAppTicket); return call(this.ObjectAddress, pUserData, cbUserData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetEncryptedAppTicket(IntPtr thisobj, byte[] pTicket, Int32 cbMaxTicket, ref UInt32 pcbTicket);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetEncryptedAppTicket(byte[] pTicket, Int32 cbMaxTicket, ref UInt32 pcbTicket) { var call = this.GetFunction<NativeGetEncryptedAppTicket>(this.Functions.GetEncryptedAppTicket); return call(this.ObjectAddress, pTicket, cbMaxTicket, ref pcbTicket); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUtils002VTable
	{
		public IntPtr GetSecondsSinceAppActive;
		public IntPtr GetSecondsSinceComputerActive;
		public IntPtr GetConnectedUniverse;
		public IntPtr GetServerRealTime;
		public IntPtr GetIPCountry;
		public IntPtr GetImageSize;
		public IntPtr GetImageRGBA;
		public IntPtr GetCSERIPPort;
		public IntPtr GetCurrentBatteryPower;
	}
	
	public class ISteamUtils002 : NativeWrapper<ISteamUtils002VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetSecondsSinceAppActive(IntPtr thisobj);
		public UInt32 GetSecondsSinceAppActive() { var call = this.GetFunction<NativeGetSecondsSinceAppActive>(this.Functions.GetSecondsSinceAppActive); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetSecondsSinceComputerActive(IntPtr thisobj);
		public UInt32 GetSecondsSinceComputerActive() { var call = this.GetFunction<NativeGetSecondsSinceComputerActive>(this.Functions.GetSecondsSinceComputerActive); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EUniverse NativeGetConnectedUniverse(IntPtr thisobj);
		public EUniverse GetConnectedUniverse() { var call = this.GetFunction<NativeGetConnectedUniverse>(this.Functions.GetConnectedUniverse); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetServerRealTime(IntPtr thisobj);
		public UInt32 GetServerRealTime() { var call = this.GetFunction<NativeGetServerRealTime>(this.Functions.GetServerRealTime); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetIPCountry(IntPtr thisobj);
		public string GetIPCountry() { var call = this.GetFunction<NativeGetIPCountry>(this.Functions.GetIPCountry); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetImageSize(IntPtr thisobj, Int32 iImage, ref UInt32 pnWidth, ref UInt32 pnHeight);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetImageSize(Int32 iImage, ref UInt32 pnWidth, ref UInt32 pnHeight) { var call = this.GetFunction<NativeGetImageSize>(this.Functions.GetImageSize); return call(this.ObjectAddress, iImage, ref pnWidth, ref pnHeight); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetImageRGBA(IntPtr thisobj, Int32 iImage, byte[] pubDest, Int32 nDestBufferSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetImageRGBA(Int32 iImage, byte[] pubDest, Int32 nDestBufferSize) { var call = this.GetFunction<NativeGetImageRGBA>(this.Functions.GetImageRGBA); return call(this.ObjectAddress, iImage, pubDest, nDestBufferSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetCSERIPPort(IntPtr thisobj, ref UInt32 unIP, ref UInt16 usPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetCSERIPPort(ref UInt32 unIP, ref UInt16 usPort) { var call = this.GetFunction<NativeGetCSERIPPort>(this.Functions.GetCSERIPPort); return call(this.ObjectAddress, ref unIP, ref usPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Byte NativeGetCurrentBatteryPower(IntPtr thisobj);
		public Byte GetCurrentBatteryPower() { var call = this.GetFunction<NativeGetCurrentBatteryPower>(this.Functions.GetCurrentBatteryPower); return call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUser004VTable
	{
		public IntPtr GetHSteamUser;
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr GetLogonState;
		public IntPtr Connected;
		public IntPtr GetSteamID;
		public IntPtr IsVACBanned;
		public IntPtr RequireShowVACBannedMessage;
		public IntPtr AcknowledgeVACBanning;
		public IntPtr NClientGameIDAdd;
		public IntPtr RemoveClientGame;
		public IntPtr SetClientGameServer;
		public IntPtr SetSteam2Ticket;
		public IntPtr AddServerNetAddress;
		public IntPtr SetEmail;
		public IntPtr Obsolete_GetSteamGameConnectToken;
		public IntPtr SetRegistryString;
		public IntPtr GetRegistryString;
		public IntPtr SetRegistryInt;
		public IntPtr GetRegistryInt;
		public IntPtr InitiateGameConnection;
		public IntPtr TerminateGameConnection;
		public IntPtr SetSelfAsPrimaryChatDestination;
		public IntPtr IsPrimaryChatDestination;
		public IntPtr RequestLegacyCDKey;
	}
	
	public class ISteamUser004 : NativeWrapper<ISteamUser004VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetHSteamUser(IntPtr thisobj);
		public Int32 GetHSteamUser() { var call = this.GetFunction<NativeGetHSteamUser>(this.Functions.GetHSteamUser); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj, UInt64 steamID);
		public void LogOn(UInt64 steamID) { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELogonState NativeGetLogonState(IntPtr thisobj);
		public ELogonState GetLogonState() { var call = this.GetFunction<NativeGetLogonState>(this.Functions.GetLogonState); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeConnected(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Connected() { var call = this.GetFunction<NativeConnected>(this.Functions.Connected); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetSteamID(IntPtr thisobj, ref UInt64 ret);
		public UInt64 GetSteamID() { UInt64 ret = 0; var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsVACBanned(IntPtr thisobj, EVACBan eVACBan);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsVACBanned(EVACBan eVACBan) { var call = this.GetFunction<NativeIsVACBanned>(this.Functions.IsVACBanned); return call(this.ObjectAddress, eVACBan); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequireShowVACBannedMessage(IntPtr thisobj, EVACBan eVACBan);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequireShowVACBannedMessage(EVACBan eVACBan) { var call = this.GetFunction<NativeRequireShowVACBannedMessage>(this.Functions.RequireShowVACBannedMessage); return call(this.ObjectAddress, eVACBan); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAcknowledgeVACBanning(IntPtr thisobj, EVACBan eVACBan);
		public void AcknowledgeVACBanning(EVACBan eVACBan) { var call = this.GetFunction<NativeAcknowledgeVACBanning>(this.Functions.AcknowledgeVACBanning); call(this.ObjectAddress, eVACBan); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeNClientGameIDAdd(IntPtr thisobj, Int32 nGameID);
		public Int32 NClientGameIDAdd(Int32 nGameID) { var call = this.GetFunction<NativeNClientGameIDAdd>(this.Functions.NClientGameIDAdd); return call(this.ObjectAddress, nGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRemoveClientGame(IntPtr thisobj, Int32 nClientGameID);
		public void RemoveClientGame(Int32 nClientGameID) { var call = this.GetFunction<NativeRemoveClientGame>(this.Functions.RemoveClientGame); call(this.ObjectAddress, nClientGameID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetClientGameServer(IntPtr thisobj, Int32 nClientGameID, UInt32 unIPServer, UInt16 usPortServer);
		public void SetClientGameServer(Int32 nClientGameID, UInt32 unIPServer, UInt16 usPortServer) { var call = this.GetFunction<NativeSetClientGameServer>(this.Functions.SetClientGameServer); call(this.ObjectAddress, nClientGameID, unIPServer, usPortServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetSteam2Ticket(IntPtr thisobj, byte[] pubTicket, Int32 cubTicket);
		public void SetSteam2Ticket(byte[] pubTicket, Int32 cubTicket) { var call = this.GetFunction<NativeSetSteam2Ticket>(this.Functions.SetSteam2Ticket); call(this.ObjectAddress, pubTicket, cubTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddServerNetAddress(IntPtr thisobj, UInt32 unIP, UInt16 unPort);
		public void AddServerNetAddress(UInt32 unIP, UInt16 unPort) { var call = this.GetFunction<NativeAddServerNetAddress>(this.Functions.AddServerNetAddress); call(this.ObjectAddress, unIP, unPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetEmail(IntPtr thisobj, string pchEmail);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetEmail(string pchEmail) { var call = this.GetFunction<NativeSetEmail>(this.Functions.SetEmail); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchEmail ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeObsolete_GetSteamGameConnectToken(IntPtr thisobj, byte[] pBlob, Int32 cbMaxBlob);
		public Int32 Obsolete_GetSteamGameConnectToken(byte[] pBlob, Int32 cbMaxBlob) { var call = this.GetFunction<NativeObsolete_GetSteamGameConnectToken>(this.Functions.Obsolete_GetSteamGameConnectToken); return call(this.ObjectAddress, pBlob, cbMaxBlob); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetRegistryString(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetRegistryString(ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetRegistryString>(this.Functions.SetRegistryString); return call(this.ObjectAddress, eRegistrySubTree, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetRegistryString(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue, Int32 cbValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetRegistryString(ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue, Int32 cbValue) { var call = this.GetFunction<NativeGetRegistryString>(this.Functions.GetRegistryString); return call(this.ObjectAddress, eRegistrySubTree, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) ), cbValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetRegistryInt(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, Int32 iValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetRegistryInt(ERegistrySubTree eRegistrySubTree, string pchKey, Int32 iValue) { var call = this.GetFunction<NativeSetRegistryInt>(this.Functions.SetRegistryInt); return call(this.ObjectAddress, eRegistrySubTree, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), iValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetRegistryInt(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, ref Int32 piValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetRegistryInt(ERegistrySubTree eRegistrySubTree, string pchKey, ref Int32 piValue) { var call = this.GetFunction<NativeGetRegistryInt>(this.Functions.GetRegistryInt); return call(this.ObjectAddress, eRegistrySubTree, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), ref piValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitiateGameConnection(IntPtr thisobj, byte[] pBlob, Int32 cbMaxBlob, UInt64 steamID, Int32 nGameAppID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure);
		public Int32 InitiateGameConnection(byte[] pBlob, Int32 cbMaxBlob, UInt64 steamID, Int32 nGameAppID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure) { var call = this.GetFunction<NativeInitiateGameConnection>(this.Functions.InitiateGameConnection); return call(this.ObjectAddress, pBlob, cbMaxBlob, steamID, nGameAppID, unIPServer, usPortServer, bSecure); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTerminateGameConnection(IntPtr thisobj, UInt32 unIPServer, UInt16 usPortServer);
		public void TerminateGameConnection(UInt32 unIPServer, UInt16 usPortServer) { var call = this.GetFunction<NativeTerminateGameConnection>(this.Functions.TerminateGameConnection); call(this.ObjectAddress, unIPServer, usPortServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetSelfAsPrimaryChatDestination(IntPtr thisobj);
		public void SetSelfAsPrimaryChatDestination() { var call = this.GetFunction<NativeSetSelfAsPrimaryChatDestination>(this.Functions.SetSelfAsPrimaryChatDestination); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsPrimaryChatDestination(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsPrimaryChatDestination() { var call = this.GetFunction<NativeIsPrimaryChatDestination>(this.Functions.IsPrimaryChatDestination); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRequestLegacyCDKey(IntPtr thisobj, UInt32 i);
		public Int32 RequestLegacyCDKey(UInt32 i) { var call = this.GetFunction<NativeRequestLegacyCDKey>(this.Functions.RequestLegacyCDKey); return call(this.ObjectAddress, i); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUser005VTable
	{
		public IntPtr GetHSteamUser;
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr GetLogonState;
		public IntPtr Connected;
		public IntPtr GetSteamID;
		public IntPtr IsVACBanned;
		public IntPtr RequireShowVACBannedMessage;
		public IntPtr AcknowledgeVACBanning;
		public IntPtr SetSteam2Ticket;
		public IntPtr AddServerNetAddress;
		public IntPtr SetEmail;
		public IntPtr SetRegistryString;
		public IntPtr GetRegistryString;
		public IntPtr SetRegistryInt;
		public IntPtr GetRegistryInt;
		public IntPtr InitiateGameConnection;
		public IntPtr TerminateGameConnection;
		public IntPtr SetSelfAsPrimaryChatDestination;
		public IntPtr IsPrimaryChatDestination;
		public IntPtr RequestLegacyCDKey;
		public IntPtr SendGuestPassByEmail;
		public IntPtr SendGuestPassByAccountID;
		public IntPtr AckGuestPass;
		public IntPtr RedeemGuestPass;
		public IntPtr GetGuestPassToGiveCount;
		public IntPtr GetGuestPassToRedeemCount;
		public IntPtr GetGuestPassLastUpdateTime;
		public IntPtr GetGuestPassToGiveInfo;
		public IntPtr GetGuestPassToRedeemInfo;
		public IntPtr GetGuestPassToRedeemSenderAddress;
		public IntPtr GetGuestPassToRedeemSenderName;
		public IntPtr AcknowledgeMessageByGID;
		public IntPtr SetLanguage;
		public IntPtr TrackAppUsageEvent;
		public IntPtr SetAccountName;
		public IntPtr SetPassword;
		public IntPtr SetAccountCreationTime;
	}
	
	public class ISteamUser005 : NativeWrapper<ISteamUser005VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetHSteamUser(IntPtr thisobj);
		public Int32 GetHSteamUser() { var call = this.GetFunction<NativeGetHSteamUser>(this.Functions.GetHSteamUser); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj, UInt64 steamID);
		public void LogOn(UInt64 steamID) { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELogonState NativeGetLogonState(IntPtr thisobj);
		public ELogonState GetLogonState() { var call = this.GetFunction<NativeGetLogonState>(this.Functions.GetLogonState); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeConnected(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Connected() { var call = this.GetFunction<NativeConnected>(this.Functions.Connected); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetSteamID(IntPtr thisobj, ref UInt64 ret);
		public UInt64 GetSteamID() { UInt64 ret = 0; var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsVACBanned(IntPtr thisobj, EVACBan eVACBan);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsVACBanned(EVACBan eVACBan) { var call = this.GetFunction<NativeIsVACBanned>(this.Functions.IsVACBanned); return call(this.ObjectAddress, eVACBan); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequireShowVACBannedMessage(IntPtr thisobj, EVACBan eVACBan);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequireShowVACBannedMessage(EVACBan eVACBan) { var call = this.GetFunction<NativeRequireShowVACBannedMessage>(this.Functions.RequireShowVACBannedMessage); return call(this.ObjectAddress, eVACBan); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAcknowledgeVACBanning(IntPtr thisobj, EVACBan eVACBan);
		public void AcknowledgeVACBanning(EVACBan eVACBan) { var call = this.GetFunction<NativeAcknowledgeVACBanning>(this.Functions.AcknowledgeVACBanning); call(this.ObjectAddress, eVACBan); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetSteam2Ticket(IntPtr thisobj, byte[] pubTicket, Int32 cubTicket);
		public void SetSteam2Ticket(byte[] pubTicket, Int32 cubTicket) { var call = this.GetFunction<NativeSetSteam2Ticket>(this.Functions.SetSteam2Ticket); call(this.ObjectAddress, pubTicket, cubTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeAddServerNetAddress(IntPtr thisobj, UInt32 unIP, UInt16 unPort);
		public void AddServerNetAddress(UInt32 unIP, UInt16 unPort) { var call = this.GetFunction<NativeAddServerNetAddress>(this.Functions.AddServerNetAddress); call(this.ObjectAddress, unIP, unPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetEmail(IntPtr thisobj, string pchEmail);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetEmail(string pchEmail) { var call = this.GetFunction<NativeSetEmail>(this.Functions.SetEmail); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchEmail ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetRegistryString(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetRegistryString(ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetRegistryString>(this.Functions.SetRegistryString); return call(this.ObjectAddress, eRegistrySubTree, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetRegistryString(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue, Int32 cbValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetRegistryString(ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue, Int32 cbValue) { var call = this.GetFunction<NativeGetRegistryString>(this.Functions.GetRegistryString); return call(this.ObjectAddress, eRegistrySubTree, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) ), cbValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetRegistryInt(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, Int32 iValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetRegistryInt(ERegistrySubTree eRegistrySubTree, string pchKey, Int32 iValue) { var call = this.GetFunction<NativeSetRegistryInt>(this.Functions.SetRegistryInt); return call(this.ObjectAddress, eRegistrySubTree, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), iValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetRegistryInt(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, ref Int32 piValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetRegistryInt(ERegistrySubTree eRegistrySubTree, string pchKey, ref Int32 piValue) { var call = this.GetFunction<NativeGetRegistryInt>(this.Functions.GetRegistryInt); return call(this.ObjectAddress, eRegistrySubTree, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), ref piValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitiateGameConnection(IntPtr thisobj, byte[] pBlob, Int32 cbMaxBlob, UInt64 steamID, UInt64 nGameAppID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure);
		public Int32 InitiateGameConnection(byte[] pBlob, Int32 cbMaxBlob, UInt64 steamID, UInt64 nGameAppID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure) { var call = this.GetFunction<NativeInitiateGameConnection>(this.Functions.InitiateGameConnection); return call(this.ObjectAddress, pBlob, cbMaxBlob, steamID, nGameAppID, unIPServer, usPortServer, bSecure); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTerminateGameConnection(IntPtr thisobj, UInt32 unIPServer, UInt16 usPortServer);
		public void TerminateGameConnection(UInt32 unIPServer, UInt16 usPortServer) { var call = this.GetFunction<NativeTerminateGameConnection>(this.Functions.TerminateGameConnection); call(this.ObjectAddress, unIPServer, usPortServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetSelfAsPrimaryChatDestination(IntPtr thisobj);
		public void SetSelfAsPrimaryChatDestination() { var call = this.GetFunction<NativeSetSelfAsPrimaryChatDestination>(this.Functions.SetSelfAsPrimaryChatDestination); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsPrimaryChatDestination(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsPrimaryChatDestination() { var call = this.GetFunction<NativeIsPrimaryChatDestination>(this.Functions.IsPrimaryChatDestination); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRequestLegacyCDKey(IntPtr thisobj, UInt32 arg1);
		public Int32 RequestLegacyCDKey(UInt32 arg1) { var call = this.GetFunction<NativeRequestLegacyCDKey>(this.Functions.RequestLegacyCDKey); return call(this.ObjectAddress, arg1); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSendGuestPassByEmail(IntPtr thisobj, string arg1, UInt64 uint64, [MarshalAs(UnmanagedType.I1)] bool arg3);
		public Int32 SendGuestPassByEmail(string arg1, UInt64 uint64, [MarshalAs(UnmanagedType.I1)] bool arg3) { var call = this.GetFunction<NativeSendGuestPassByEmail>(this.Functions.SendGuestPassByEmail); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg1 ) ), uint64, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSendGuestPassByAccountID(IntPtr thisobj, UInt32 arg1, UInt64 uint64, [MarshalAs(UnmanagedType.I1)] bool arg3);
		public Int32 SendGuestPassByAccountID(UInt32 arg1, UInt64 uint64, [MarshalAs(UnmanagedType.I1)] bool arg3) { var call = this.GetFunction<NativeSendGuestPassByAccountID>(this.Functions.SendGuestPassByAccountID); return call(this.ObjectAddress, arg1, uint64, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAckGuestPass(IntPtr thisobj, string arg1);
		public Int32 AckGuestPass(string arg1) { var call = this.GetFunction<NativeAckGuestPass>(this.Functions.AckGuestPass); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg1 ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeRedeemGuestPass(IntPtr thisobj, string arg1);
		public Int32 RedeemGuestPass(string arg1) { var call = this.GetFunction<NativeRedeemGuestPass>(this.Functions.RedeemGuestPass); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg1 ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetGuestPassToGiveCount(IntPtr thisobj);
		public Int32 GetGuestPassToGiveCount() { var call = this.GetFunction<NativeGetGuestPassToGiveCount>(this.Functions.GetGuestPassToGiveCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetGuestPassToRedeemCount(IntPtr thisobj);
		public Int32 GetGuestPassToRedeemCount() { var call = this.GetFunction<NativeGetGuestPassToRedeemCount>(this.Functions.GetGuestPassToRedeemCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetGuestPassLastUpdateTime(IntPtr thisobj);
		public Int32 GetGuestPassLastUpdateTime() { var call = this.GetFunction<NativeGetGuestPassLastUpdateTime>(this.Functions.GetGuestPassLastUpdateTime); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetGuestPassToGiveInfo(IntPtr thisobj, UInt32 arg1, ref UInt64 arg2, ref UInt32 arg3, ref UInt32 arg4, ref UInt32 arg5, ref UInt32 arg6, ref UInt32 arg7, string arg8, Int32 arg9);
		public Int32 GetGuestPassToGiveInfo(UInt32 arg1, ref UInt64 arg2, ref UInt32 arg3, ref UInt32 arg4, ref UInt32 arg5, ref UInt32 arg6, ref UInt32 arg7, string arg8, Int32 arg9) { var call = this.GetFunction<NativeGetGuestPassToGiveInfo>(this.Functions.GetGuestPassToGiveInfo); return call(this.ObjectAddress, arg1, ref arg2, ref arg3, ref arg4, ref arg5, ref arg6, ref arg7, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg8 ) ), arg9); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetGuestPassToRedeemInfo(IntPtr thisobj, UInt32 arg1, ref UInt64 arg2, ref UInt32 arg3, ref UInt32 arg4, ref UInt32 arg5, ref UInt32 arg6, ref UInt32 arg7);
		public Int32 GetGuestPassToRedeemInfo(UInt32 arg1, ref UInt64 arg2, ref UInt32 arg3, ref UInt32 arg4, ref UInt32 arg5, ref UInt32 arg6, ref UInt32 arg7) { var call = this.GetFunction<NativeGetGuestPassToRedeemInfo>(this.Functions.GetGuestPassToRedeemInfo); return call(this.ObjectAddress, arg1, ref arg2, ref arg3, ref arg4, ref arg5, ref arg6, ref arg7); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetGuestPassToRedeemSenderAddress(IntPtr thisobj, UInt32 arg1, string arg2, Int32 arg3);
		public Int32 GetGuestPassToRedeemSenderAddress(UInt32 arg1, string arg2, Int32 arg3) { var call = this.GetFunction<NativeGetGuestPassToRedeemSenderAddress>(this.Functions.GetGuestPassToRedeemSenderAddress); return call(this.ObjectAddress, arg1, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg2 ) ), arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetGuestPassToRedeemSenderName(IntPtr thisobj, UInt32 arg1, string arg2, Int32 arg3);
		public Int32 GetGuestPassToRedeemSenderName(UInt32 arg1, string arg2, Int32 arg3) { var call = this.GetFunction<NativeGetGuestPassToRedeemSenderName>(this.Functions.GetGuestPassToRedeemSenderName); return call(this.ObjectAddress, arg1, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg2 ) ), arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAcknowledgeMessageByGID(IntPtr thisobj, string arg1);
		public Int32 AcknowledgeMessageByGID(string arg1) { var call = this.GetFunction<NativeAcknowledgeMessageByGID>(this.Functions.AcknowledgeMessageByGID); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg1 ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetLanguage(IntPtr thisobj, string arg1);
		public Int32 SetLanguage(string arg1) { var call = this.GetFunction<NativeSetLanguage>(this.Functions.SetLanguage); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg1 ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTrackAppUsageEvent(IntPtr thisobj, UInt64 gameID, EAppUsageEvent eAppUsageEvent, string arg3);
		public void TrackAppUsageEvent(UInt64 gameID, EAppUsageEvent eAppUsageEvent, string arg3) { var call = this.GetFunction<NativeTrackAppUsageEvent>(this.Functions.TrackAppUsageEvent); call(this.ObjectAddress, gameID, eAppUsageEvent, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg3 ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetAccountName(IntPtr thisobj, string arg1);
		public Int32 SetAccountName(string arg1) { var call = this.GetFunction<NativeSetAccountName>(this.Functions.SetAccountName); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg1 ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetPassword(IntPtr thisobj, string arg1);
		public Int32 SetPassword(string arg1) { var call = this.GetFunction<NativeSetPassword>(this.Functions.SetPassword); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg1 ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetAccountCreationTime(IntPtr thisobj, UInt32 arg1);
		public Int32 SetAccountCreationTime(UInt32 arg1) { var call = this.GetFunction<NativeSetAccountCreationTime>(this.Functions.SetAccountCreationTime); return call(this.ObjectAddress, arg1); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUser006VTable
	{
		public IntPtr GetHSteamUser;
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr GetSteamID;
		public IntPtr SetRegistryString;
		public IntPtr GetRegistryString;
		public IntPtr SetRegistryInt;
		public IntPtr GetRegistryInt;
		public IntPtr InitiateGameConnection;
		public IntPtr TerminateGameConnection;
		public IntPtr TrackAppUsageEvent;
	}
	
	public class ISteamUser006 : NativeWrapper<ISteamUser006VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetHSteamUser(IntPtr thisobj);
		public Int32 GetHSteamUser() { var call = this.GetFunction<NativeGetHSteamUser>(this.Functions.GetHSteamUser); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj, UInt64 steamID);
		public void LogOn(UInt64 steamID) { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetSteamID(IntPtr thisobj, ref UInt64 ret);
		public UInt64 GetSteamID() { UInt64 ret = 0; var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetRegistryString(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetRegistryString(ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetRegistryString>(this.Functions.SetRegistryString); return call(this.ObjectAddress, eRegistrySubTree, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetRegistryString(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue, Int32 cbValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetRegistryString(ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue, Int32 cbValue) { var call = this.GetFunction<NativeGetRegistryString>(this.Functions.GetRegistryString); return call(this.ObjectAddress, eRegistrySubTree, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) ), cbValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetRegistryInt(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, Int32 iValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetRegistryInt(ERegistrySubTree eRegistrySubTree, string pchKey, Int32 iValue) { var call = this.GetFunction<NativeSetRegistryInt>(this.Functions.SetRegistryInt); return call(this.ObjectAddress, eRegistrySubTree, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), iValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetRegistryInt(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, ref Int32 piValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetRegistryInt(ERegistrySubTree eRegistrySubTree, string pchKey, ref Int32 piValue) { var call = this.GetFunction<NativeGetRegistryInt>(this.Functions.GetRegistryInt); return call(this.ObjectAddress, eRegistrySubTree, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), ref piValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitiateGameConnection(IntPtr thisobj, byte[] pBlob, Int32 cbMaxBlob, UInt64 steamID, UInt64 nGameAppID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure);
		public Int32 InitiateGameConnection(byte[] pBlob, Int32 cbMaxBlob, UInt64 steamID, UInt64 nGameAppID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure) { var call = this.GetFunction<NativeInitiateGameConnection>(this.Functions.InitiateGameConnection); return call(this.ObjectAddress, pBlob, cbMaxBlob, steamID, nGameAppID, unIPServer, usPortServer, bSecure); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTerminateGameConnection(IntPtr thisobj, UInt32 unIPServer, UInt16 usPortServer);
		public void TerminateGameConnection(UInt32 unIPServer, UInt16 usPortServer) { var call = this.GetFunction<NativeTerminateGameConnection>(this.Functions.TerminateGameConnection); call(this.ObjectAddress, unIPServer, usPortServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTrackAppUsageEvent(IntPtr thisobj, UInt64 gameID, EAppUsageEvent eAppUsageEvent, string arg3);
		public void TrackAppUsageEvent(UInt64 gameID, EAppUsageEvent eAppUsageEvent, string arg3) { var call = this.GetFunction<NativeTrackAppUsageEvent>(this.Functions.TrackAppUsageEvent); call(this.ObjectAddress, gameID, eAppUsageEvent, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg3 ) )); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUser007VTable
	{
		public IntPtr GetHSteamUser;
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr GetSteamID;
		public IntPtr SetRegistryString;
		public IntPtr GetRegistryString;
		public IntPtr SetRegistryInt;
		public IntPtr GetRegistryInt;
		public IntPtr InitiateGameConnection;
		public IntPtr TerminateGameConnection;
		public IntPtr TrackAppUsageEvent;
		public IntPtr RefreshSteam2Login;
	}
	
	public class ISteamUser007 : NativeWrapper<ISteamUser007VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetHSteamUser(IntPtr thisobj);
		public Int32 GetHSteamUser() { var call = this.GetFunction<NativeGetHSteamUser>(this.Functions.GetHSteamUser); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj, UInt64 steamID);
		public void LogOn(UInt64 steamID) { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetSteamID(IntPtr thisobj, ref UInt64 ret);
		public UInt64 GetSteamID() { UInt64 ret = 0; var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetRegistryString(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetRegistryString(ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue) { var call = this.GetFunction<NativeSetRegistryString>(this.Functions.SetRegistryString); return call(this.ObjectAddress, eRegistrySubTree, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetRegistryString(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue, Int32 cbValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetRegistryString(ERegistrySubTree eRegistrySubTree, string pchKey, string pchValue, Int32 cbValue) { var call = this.GetFunction<NativeGetRegistryString>(this.Functions.GetRegistryString); return call(this.ObjectAddress, eRegistrySubTree, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchValue ) ), cbValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetRegistryInt(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, Int32 iValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetRegistryInt(ERegistrySubTree eRegistrySubTree, string pchKey, Int32 iValue) { var call = this.GetFunction<NativeSetRegistryInt>(this.Functions.SetRegistryInt); return call(this.ObjectAddress, eRegistrySubTree, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), iValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetRegistryInt(IntPtr thisobj, ERegistrySubTree eRegistrySubTree, string pchKey, ref Int32 piValue);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetRegistryInt(ERegistrySubTree eRegistrySubTree, string pchKey, ref Int32 piValue) { var call = this.GetFunction<NativeGetRegistryInt>(this.Functions.GetRegistryInt); return call(this.ObjectAddress, eRegistrySubTree, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchKey ) ), ref piValue); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitiateGameConnection(IntPtr thisobj, byte[] pBlob, Int32 cbMaxBlob, UInt64 steamID, UInt64 nGameAppID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure, byte[] pvSteam2GetEncryptionKey, Int32 cbSteam2GetEncryptionKey);
		public Int32 InitiateGameConnection(byte[] pBlob, Int32 cbMaxBlob, UInt64 steamID, UInt64 nGameAppID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure, byte[] pvSteam2GetEncryptionKey, Int32 cbSteam2GetEncryptionKey) { var call = this.GetFunction<NativeInitiateGameConnection>(this.Functions.InitiateGameConnection); return call(this.ObjectAddress, pBlob, cbMaxBlob, steamID, nGameAppID, unIPServer, usPortServer, bSecure, pvSteam2GetEncryptionKey, cbSteam2GetEncryptionKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTerminateGameConnection(IntPtr thisobj, UInt32 unIPServer, UInt16 usPortServer);
		public void TerminateGameConnection(UInt32 unIPServer, UInt16 usPortServer) { var call = this.GetFunction<NativeTerminateGameConnection>(this.Functions.TerminateGameConnection); call(this.ObjectAddress, unIPServer, usPortServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTrackAppUsageEvent(IntPtr thisobj, UInt64 gameID, EAppUsageEvent eAppUsageEvent, string arg3);
		public void TrackAppUsageEvent(UInt64 gameID, EAppUsageEvent eAppUsageEvent, string arg3) { var call = this.GetFunction<NativeTrackAppUsageEvent>(this.Functions.TrackAppUsageEvent); call(this.ObjectAddress, gameID, eAppUsageEvent, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg3 ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRefreshSteam2Login(IntPtr thisobj);
		public void RefreshSteam2Login() { var call = this.GetFunction<NativeRefreshSteam2Login>(this.Functions.RefreshSteam2Login); call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUser008VTable
	{
		public IntPtr GetHSteamUser;
		public IntPtr LoggedOn;
		public IntPtr GetSteamID;
		public IntPtr InitiateGameConnection;
		public IntPtr TerminateGameConnection;
		public IntPtr TrackAppUsageEvent;
		public IntPtr RefreshSteam2Login;
	}
	
	public class ISteamUser008 : NativeWrapper<ISteamUser008VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetHSteamUser(IntPtr thisobj);
		public Int32 GetHSteamUser() { var call = this.GetFunction<NativeGetHSteamUser>(this.Functions.GetHSteamUser); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetSteamID(IntPtr thisobj, ref UInt64 ret);
		public UInt64 GetSteamID() { UInt64 ret = 0; var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitiateGameConnection(IntPtr thisobj, byte[] pBlob, Int32 cbMaxBlob, UInt64 steamID, UInt64 gameID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure, byte[] pvSteam2GetEncryptionKey, Int32 cbSteam2GetEncryptionKey);
		public Int32 InitiateGameConnection(byte[] pBlob, Int32 cbMaxBlob, UInt64 steamID, UInt64 gameID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure, byte[] pvSteam2GetEncryptionKey, Int32 cbSteam2GetEncryptionKey) { var call = this.GetFunction<NativeInitiateGameConnection>(this.Functions.InitiateGameConnection); return call(this.ObjectAddress, pBlob, cbMaxBlob, steamID, gameID, unIPServer, usPortServer, bSecure, pvSteam2GetEncryptionKey, cbSteam2GetEncryptionKey); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTerminateGameConnection(IntPtr thisobj, UInt32 unIPServer, UInt16 usPortServer);
		public void TerminateGameConnection(UInt32 unIPServer, UInt16 usPortServer) { var call = this.GetFunction<NativeTerminateGameConnection>(this.Functions.TerminateGameConnection); call(this.ObjectAddress, unIPServer, usPortServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTrackAppUsageEvent(IntPtr thisobj, UInt64 gameID, EAppUsageEvent eAppUsageEvent, string arg3);
		public void TrackAppUsageEvent(UInt64 gameID, EAppUsageEvent eAppUsageEvent, string arg3) { var call = this.GetFunction<NativeTrackAppUsageEvent>(this.Functions.TrackAppUsageEvent); call(this.ObjectAddress, gameID, eAppUsageEvent, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg3 ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRefreshSteam2Login(IntPtr thisobj);
		public void RefreshSteam2Login() { var call = this.GetFunction<NativeRefreshSteam2Login>(this.Functions.RefreshSteam2Login); call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUser009VTable
	{
		public IntPtr GetHSteamUser;
		public IntPtr LoggedOn;
		public IntPtr GetSteamID;
		public IntPtr InitiateGameConnection;
		public IntPtr TerminateGameConnection;
		public IntPtr TrackAppUsageEvent;
		public IntPtr RefreshSteam2Login;
	}
	
	public class ISteamUser009 : NativeWrapper<ISteamUser009VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetHSteamUser(IntPtr thisobj);
		public Int32 GetHSteamUser() { var call = this.GetFunction<NativeGetHSteamUser>(this.Functions.GetHSteamUser); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetSteamID(IntPtr thisobj, ref UInt64 ret);
		public UInt64 GetSteamID() { UInt64 ret = 0; var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitiateGameConnection(IntPtr thisobj, byte[] pBlob, Int32 cbMaxBlob, UInt64 steamID, UInt64 gameID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure);
		public Int32 InitiateGameConnection(byte[] pBlob, Int32 cbMaxBlob, UInt64 steamID, UInt64 gameID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure) { var call = this.GetFunction<NativeInitiateGameConnection>(this.Functions.InitiateGameConnection); return call(this.ObjectAddress, pBlob, cbMaxBlob, steamID, gameID, unIPServer, usPortServer, bSecure); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTerminateGameConnection(IntPtr thisobj, UInt32 unIPServer, UInt16 usPortServer);
		public void TerminateGameConnection(UInt32 unIPServer, UInt16 usPortServer) { var call = this.GetFunction<NativeTerminateGameConnection>(this.Functions.TerminateGameConnection); call(this.ObjectAddress, unIPServer, usPortServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTrackAppUsageEvent(IntPtr thisobj, UInt64 gameID, EAppUsageEvent eAppUsageEvent, string arg3);
		public void TrackAppUsageEvent(UInt64 gameID, EAppUsageEvent eAppUsageEvent, string arg3) { var call = this.GetFunction<NativeTrackAppUsageEvent>(this.Functions.TrackAppUsageEvent); call(this.ObjectAddress, gameID, eAppUsageEvent, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg3 ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRefreshSteam2Login(IntPtr thisobj);
		public void RefreshSteam2Login() { var call = this.GetFunction<NativeRefreshSteam2Login>(this.Functions.RefreshSteam2Login); call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUser010VTable
	{
		public IntPtr GetHSteamUser;
		public IntPtr LoggedOn;
		public IntPtr GetSteamID;
		public IntPtr InitiateGameConnection;
		public IntPtr TerminateGameConnection;
		public IntPtr TrackAppUsageEvent;
	}
	
	public class ISteamUser010 : NativeWrapper<ISteamUser010VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetHSteamUser(IntPtr thisobj);
		public Int32 GetHSteamUser() { var call = this.GetFunction<NativeGetHSteamUser>(this.Functions.GetHSteamUser); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetSteamID(IntPtr thisobj, ref UInt64 ret);
		public UInt64 GetSteamID() { UInt64 ret = 0; var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitiateGameConnection(IntPtr thisobj, byte[] pBlob, Int32 cbMaxBlob, UInt64 steamID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure);
		public Int32 InitiateGameConnection(byte[] pBlob, Int32 cbMaxBlob, UInt64 steamID, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure) { var call = this.GetFunction<NativeInitiateGameConnection>(this.Functions.InitiateGameConnection); return call(this.ObjectAddress, pBlob, cbMaxBlob, steamID, unIPServer, usPortServer, bSecure); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTerminateGameConnection(IntPtr thisobj, UInt32 unIPServer, UInt16 usPortServer);
		public void TerminateGameConnection(UInt32 unIPServer, UInt16 usPortServer) { var call = this.GetFunction<NativeTerminateGameConnection>(this.Functions.TerminateGameConnection); call(this.ObjectAddress, unIPServer, usPortServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTrackAppUsageEvent(IntPtr thisobj, UInt64 gameID, EAppUsageEvent eAppUsageEvent, string arg3);
		public void TrackAppUsageEvent(UInt64 gameID, EAppUsageEvent eAppUsageEvent, string arg3) { var call = this.GetFunction<NativeTrackAppUsageEvent>(this.Functions.TrackAppUsageEvent); call(this.ObjectAddress, gameID, eAppUsageEvent, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg3 ) )); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUser011VTable
	{
		public IntPtr GetHSteamUser;
		public IntPtr LoggedOn;
		public IntPtr GetSteamID;
		public IntPtr InitiateGameConnection;
		public IntPtr TerminateGameConnection;
		public IntPtr TrackAppUsageEvent;
		public IntPtr GetUserDataFolder;
		public IntPtr StartVoiceRecording;
		public IntPtr StopVoiceRecording;
		public IntPtr GetCompressedVoice;
		public IntPtr DecompressVoice;
	}
	
	public class ISteamUser011 : NativeWrapper<ISteamUser011VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetHSteamUser(IntPtr thisobj);
		public Int32 GetHSteamUser() { var call = this.GetFunction<NativeGetHSteamUser>(this.Functions.GetHSteamUser); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetSteamID(IntPtr thisobj, ref UInt64 ret);
		public UInt64 GetSteamID() { UInt64 ret = 0; var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitiateGameConnection(IntPtr thisobj, byte[] pAuthBlob, Int32 cbMaxAuthBlob, UInt64 steamIDGameServer, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure);
		public Int32 InitiateGameConnection(byte[] pAuthBlob, Int32 cbMaxAuthBlob, UInt64 steamIDGameServer, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure) { var call = this.GetFunction<NativeInitiateGameConnection>(this.Functions.InitiateGameConnection); return call(this.ObjectAddress, pAuthBlob, cbMaxAuthBlob, steamIDGameServer, unIPServer, usPortServer, bSecure); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTerminateGameConnection(IntPtr thisobj, UInt32 unIPServer, UInt16 usPortServer);
		public void TerminateGameConnection(UInt32 unIPServer, UInt16 usPortServer) { var call = this.GetFunction<NativeTerminateGameConnection>(this.Functions.TerminateGameConnection); call(this.ObjectAddress, unIPServer, usPortServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTrackAppUsageEvent(IntPtr thisobj, UInt64 gameID, EAppUsageEvent eAppUsageEvent, string arg3);
		public void TrackAppUsageEvent(UInt64 gameID, EAppUsageEvent eAppUsageEvent, string arg3) { var call = this.GetFunction<NativeTrackAppUsageEvent>(this.Functions.TrackAppUsageEvent); call(this.ObjectAddress, gameID, eAppUsageEvent, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg3 ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserDataFolder(IntPtr thisobj, string pchBuffer, Int32 cubBuffer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserDataFolder(string pchBuffer, Int32 cubBuffer) { var call = this.GetFunction<NativeGetUserDataFolder>(this.Functions.GetUserDataFolder); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchBuffer ) ), cubBuffer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeStartVoiceRecording(IntPtr thisobj);
		public void StartVoiceRecording() { var call = this.GetFunction<NativeStartVoiceRecording>(this.Functions.StartVoiceRecording); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeStopVoiceRecording(IntPtr thisobj);
		public void StopVoiceRecording() { var call = this.GetFunction<NativeStopVoiceRecording>(this.Functions.StopVoiceRecording); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EVoiceResult NativeGetCompressedVoice(IntPtr thisobj, byte[] pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten);
		public EVoiceResult GetCompressedVoice(byte[] pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten) { var call = this.GetFunction<NativeGetCompressedVoice>(this.Functions.GetCompressedVoice); return call(this.ObjectAddress, pDestBuffer, cbDestBufferSize, ref nBytesWritten); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EVoiceResult NativeDecompressVoice(IntPtr thisobj, byte[] pCompressed, UInt32 cbCompressed, byte[] pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten);
		public EVoiceResult DecompressVoice(byte[] pCompressed, UInt32 cbCompressed, byte[] pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten) { var call = this.GetFunction<NativeDecompressVoice>(this.Functions.DecompressVoice); return call(this.ObjectAddress, pCompressed, cbCompressed, pDestBuffer, cbDestBufferSize, ref nBytesWritten); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUser013VTable
	{
		public IntPtr GetHSteamUser;
		public IntPtr BLoggedOn;
		public IntPtr GetSteamID;
		public IntPtr InitiateGameConnection;
		public IntPtr TerminateGameConnection;
		public IntPtr TrackAppUsageEvent;
		public IntPtr GetUserDataFolder;
		public IntPtr StartVoiceRecording;
		public IntPtr StopVoiceRecording;
		public IntPtr GetAvailableVoice;
		public IntPtr GetVoice;
		public IntPtr DecompressVoice;
		public IntPtr GetAuthSessionTicket;
		public IntPtr BeginAuthSession;
		public IntPtr EndAuthSession;
		public IntPtr CancelAuthTicket;
		public IntPtr UserHasLicenseForApp;
	}
	
	public class ISteamUser013 : NativeWrapper<ISteamUser013VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetHSteamUser(IntPtr thisobj);
		public Int32 GetHSteamUser() { var call = this.GetFunction<NativeGetHSteamUser>(this.Functions.GetHSteamUser); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeBLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool BLoggedOn() { var call = this.GetFunction<NativeBLoggedOn>(this.Functions.BLoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetSteamID(IntPtr thisobj, ref UInt64 ret);
		public UInt64 GetSteamID() { UInt64 ret = 0; var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitiateGameConnection(IntPtr thisobj, byte[] pAuthBlob, Int32 cbMaxAuthBlob, UInt64 steamIDGameServer, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure);
		public Int32 InitiateGameConnection(byte[] pAuthBlob, Int32 cbMaxAuthBlob, UInt64 steamIDGameServer, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure) { var call = this.GetFunction<NativeInitiateGameConnection>(this.Functions.InitiateGameConnection); return call(this.ObjectAddress, pAuthBlob, cbMaxAuthBlob, steamIDGameServer, unIPServer, usPortServer, bSecure); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTerminateGameConnection(IntPtr thisobj, UInt32 unIPServer, UInt16 usPortServer);
		public void TerminateGameConnection(UInt32 unIPServer, UInt16 usPortServer) { var call = this.GetFunction<NativeTerminateGameConnection>(this.Functions.TerminateGameConnection); call(this.ObjectAddress, unIPServer, usPortServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTrackAppUsageEvent(IntPtr thisobj, UInt64 gameID, EAppUsageEvent eAppUsageEvent, string arg3);
		public void TrackAppUsageEvent(UInt64 gameID, EAppUsageEvent eAppUsageEvent, string arg3) { var call = this.GetFunction<NativeTrackAppUsageEvent>(this.Functions.TrackAppUsageEvent); call(this.ObjectAddress, gameID, eAppUsageEvent, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg3 ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserDataFolder(IntPtr thisobj, string pchBuffer, Int32 cubBuffer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserDataFolder(string pchBuffer, Int32 cubBuffer) { var call = this.GetFunction<NativeGetUserDataFolder>(this.Functions.GetUserDataFolder); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchBuffer ) ), cubBuffer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeStartVoiceRecording(IntPtr thisobj);
		public void StartVoiceRecording() { var call = this.GetFunction<NativeStartVoiceRecording>(this.Functions.StartVoiceRecording); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeStopVoiceRecording(IntPtr thisobj);
		public void StopVoiceRecording() { var call = this.GetFunction<NativeStopVoiceRecording>(this.Functions.StopVoiceRecording); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EVoiceResult NativeGetAvailableVoice(IntPtr thisobj, ref UInt32 pcbCompressed, ref UInt32 pcbUncompressed);
		public EVoiceResult GetAvailableVoice(ref UInt32 pcbCompressed, ref UInt32 pcbUncompressed) { var call = this.GetFunction<NativeGetAvailableVoice>(this.Functions.GetAvailableVoice); return call(this.ObjectAddress, ref pcbCompressed, ref pcbUncompressed); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EVoiceResult NativeGetVoice(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bWantCompressed, byte[] pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten, [MarshalAs(UnmanagedType.I1)] bool bWantUncompressed, byte[] pUncompressedDestBuffer, UInt32 cbUncompressedDestBufferSize, ref UInt32 nUncompressBytesWritten);
		public EVoiceResult GetVoice([MarshalAs(UnmanagedType.I1)] bool bWantCompressed, byte[] pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten, [MarshalAs(UnmanagedType.I1)] bool bWantUncompressed, byte[] pUncompressedDestBuffer, UInt32 cbUncompressedDestBufferSize, ref UInt32 nUncompressBytesWritten) { var call = this.GetFunction<NativeGetVoice>(this.Functions.GetVoice); return call(this.ObjectAddress, bWantCompressed, pDestBuffer, cbDestBufferSize, ref nBytesWritten, bWantUncompressed, pUncompressedDestBuffer, cbUncompressedDestBufferSize, ref nUncompressBytesWritten); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EVoiceResult NativeDecompressVoice(IntPtr thisobj, byte[] pCompressed, UInt32 cbCompressed, byte[] pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten);
		public EVoiceResult DecompressVoice(byte[] pCompressed, UInt32 cbCompressed, byte[] pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten) { var call = this.GetFunction<NativeDecompressVoice>(this.Functions.DecompressVoice); return call(this.ObjectAddress, pCompressed, cbCompressed, pDestBuffer, cbDestBufferSize, ref nBytesWritten); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAuthSessionTicket(IntPtr thisobj, byte[] pTicket, Int32 cbMaxTicket, ref UInt32 pcbTicket);
		public UInt32 GetAuthSessionTicket(byte[] pTicket, Int32 cbMaxTicket, ref UInt32 pcbTicket) { var call = this.GetFunction<NativeGetAuthSessionTicket>(this.Functions.GetAuthSessionTicket); return call(this.ObjectAddress, pTicket, cbMaxTicket, ref pcbTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EBeginAuthSessionResult NativeBeginAuthSession(IntPtr thisobj, byte[] pAuthTicket, Int32 cbAuthTicket, UInt64 steamID);
		public EBeginAuthSessionResult BeginAuthSession(byte[] pAuthTicket, Int32 cbAuthTicket, UInt64 steamID) { var call = this.GetFunction<NativeBeginAuthSession>(this.Functions.BeginAuthSession); return call(this.ObjectAddress, pAuthTicket, cbAuthTicket, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeEndAuthSession(IntPtr thisobj, UInt64 steamID);
		public void EndAuthSession(UInt64 steamID) { var call = this.GetFunction<NativeEndAuthSession>(this.Functions.EndAuthSession); call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCancelAuthTicket(IntPtr thisobj, UInt32 hAuthTicket);
		public void CancelAuthTicket(UInt32 hAuthTicket) { var call = this.GetFunction<NativeCancelAuthTicket>(this.Functions.CancelAuthTicket); call(this.ObjectAddress, hAuthTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EUserHasLicenseForAppResult NativeUserHasLicenseForApp(IntPtr thisobj, UInt64 steamID, UInt32 appID);
		public EUserHasLicenseForAppResult UserHasLicenseForApp(UInt64 steamID, UInt32 appID) { var call = this.GetFunction<NativeUserHasLicenseForApp>(this.Functions.UserHasLicenseForApp); return call(this.ObjectAddress, steamID, appID); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamUser014VTable
	{
		public IntPtr GetHSteamUser;
		public IntPtr BLoggedOn;
		public IntPtr GetSteamID;
		public IntPtr InitiateGameConnection;
		public IntPtr TerminateGameConnection;
		public IntPtr TrackAppUsageEvent;
		public IntPtr GetUserDataFolder;
		public IntPtr StartVoiceRecording;
		public IntPtr StopVoiceRecording;
		public IntPtr GetAvailableVoice;
		public IntPtr GetVoice;
		public IntPtr DecompressVoice;
		public IntPtr GetAuthSessionTicket;
		public IntPtr BeginAuthSession;
		public IntPtr EndAuthSession;
		public IntPtr CancelAuthTicket;
		public IntPtr UserHasLicenseForApp;
		public IntPtr IsBehindNAT;
		public IntPtr AdvertiseGame;
		public IntPtr RequestEncryptedAppTicket;
		public IntPtr GetEncryptedAppTicket;
	}
	
	public class ISteamUser014 : NativeWrapper<ISteamUser014VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetHSteamUser(IntPtr thisobj);
		public Int32 GetHSteamUser() { var call = this.GetFunction<NativeGetHSteamUser>(this.Functions.GetHSteamUser); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeBLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool BLoggedOn() { var call = this.GetFunction<NativeBLoggedOn>(this.Functions.BLoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetSteamID(IntPtr thisobj, ref UInt64 ret);
		public UInt64 GetSteamID() { UInt64 ret = 0; var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeInitiateGameConnection(IntPtr thisobj, byte[] pAuthBlob, Int32 cbMaxAuthBlob, UInt64 steamIDGameServer, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure);
		public Int32 InitiateGameConnection(byte[] pAuthBlob, Int32 cbMaxAuthBlob, UInt64 steamIDGameServer, UInt32 unIPServer, UInt16 usPortServer, [MarshalAs(UnmanagedType.I1)] bool bSecure) { var call = this.GetFunction<NativeInitiateGameConnection>(this.Functions.InitiateGameConnection); return call(this.ObjectAddress, pAuthBlob, cbMaxAuthBlob, steamIDGameServer, unIPServer, usPortServer, bSecure); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTerminateGameConnection(IntPtr thisobj, UInt32 unIPServer, UInt16 usPortServer);
		public void TerminateGameConnection(UInt32 unIPServer, UInt16 usPortServer) { var call = this.GetFunction<NativeTerminateGameConnection>(this.Functions.TerminateGameConnection); call(this.ObjectAddress, unIPServer, usPortServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeTrackAppUsageEvent(IntPtr thisobj, UInt64 gameID, EAppUsageEvent eAppUsageEvent, string arg3);
		public void TrackAppUsageEvent(UInt64 gameID, EAppUsageEvent eAppUsageEvent, string arg3) { var call = this.GetFunction<NativeTrackAppUsageEvent>(this.Functions.TrackAppUsageEvent); call(this.ObjectAddress, gameID, eAppUsageEvent, Encoding.Default.GetString( Encoding.UTF8.GetBytes( arg3 ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserDataFolder(IntPtr thisobj, string pchBuffer, Int32 cubBuffer);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserDataFolder(string pchBuffer, Int32 cubBuffer) { var call = this.GetFunction<NativeGetUserDataFolder>(this.Functions.GetUserDataFolder); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchBuffer ) ), cubBuffer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeStartVoiceRecording(IntPtr thisobj);
		public void StartVoiceRecording() { var call = this.GetFunction<NativeStartVoiceRecording>(this.Functions.StartVoiceRecording); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeStopVoiceRecording(IntPtr thisobj);
		public void StopVoiceRecording() { var call = this.GetFunction<NativeStopVoiceRecording>(this.Functions.StopVoiceRecording); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EVoiceResult NativeGetAvailableVoice(IntPtr thisobj, ref UInt32 pcbCompressed, ref UInt32 pcbUncompressed);
		public EVoiceResult GetAvailableVoice(ref UInt32 pcbCompressed, ref UInt32 pcbUncompressed) { var call = this.GetFunction<NativeGetAvailableVoice>(this.Functions.GetAvailableVoice); return call(this.ObjectAddress, ref pcbCompressed, ref pcbUncompressed); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EVoiceResult NativeGetVoice(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bWantCompressed, byte[] pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten, [MarshalAs(UnmanagedType.I1)] bool bWantUncompressed, byte[] pUncompressedDestBuffer, UInt32 cbUncompressedDestBufferSize, ref UInt32 nUncompressBytesWritten);
		public EVoiceResult GetVoice([MarshalAs(UnmanagedType.I1)] bool bWantCompressed, byte[] pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten, [MarshalAs(UnmanagedType.I1)] bool bWantUncompressed, byte[] pUncompressedDestBuffer, UInt32 cbUncompressedDestBufferSize, ref UInt32 nUncompressBytesWritten) { var call = this.GetFunction<NativeGetVoice>(this.Functions.GetVoice); return call(this.ObjectAddress, bWantCompressed, pDestBuffer, cbDestBufferSize, ref nBytesWritten, bWantUncompressed, pUncompressedDestBuffer, cbUncompressedDestBufferSize, ref nUncompressBytesWritten); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EVoiceResult NativeDecompressVoice(IntPtr thisobj, byte[] pCompressed, UInt32 cbCompressed, byte[] pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten);
		public EVoiceResult DecompressVoice(byte[] pCompressed, UInt32 cbCompressed, byte[] pDestBuffer, UInt32 cbDestBufferSize, ref UInt32 nBytesWritten) { var call = this.GetFunction<NativeDecompressVoice>(this.Functions.DecompressVoice); return call(this.ObjectAddress, pCompressed, cbCompressed, pDestBuffer, cbDestBufferSize, ref nBytesWritten); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAuthSessionTicket(IntPtr thisobj, byte[] pTicket, Int32 cbMaxTicket, ref UInt32 pcbTicket);
		public UInt32 GetAuthSessionTicket(byte[] pTicket, Int32 cbMaxTicket, ref UInt32 pcbTicket) { var call = this.GetFunction<NativeGetAuthSessionTicket>(this.Functions.GetAuthSessionTicket); return call(this.ObjectAddress, pTicket, cbMaxTicket, ref pcbTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EBeginAuthSessionResult NativeBeginAuthSession(IntPtr thisobj, byte[] pAuthTicket, Int32 cbAuthTicket, UInt64 steamID);
		public EBeginAuthSessionResult BeginAuthSession(byte[] pAuthTicket, Int32 cbAuthTicket, UInt64 steamID) { var call = this.GetFunction<NativeBeginAuthSession>(this.Functions.BeginAuthSession); return call(this.ObjectAddress, pAuthTicket, cbAuthTicket, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeEndAuthSession(IntPtr thisobj, UInt64 steamID);
		public void EndAuthSession(UInt64 steamID) { var call = this.GetFunction<NativeEndAuthSession>(this.Functions.EndAuthSession); call(this.ObjectAddress, steamID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCancelAuthTicket(IntPtr thisobj, UInt32 hAuthTicket);
		public void CancelAuthTicket(UInt32 hAuthTicket) { var call = this.GetFunction<NativeCancelAuthTicket>(this.Functions.CancelAuthTicket); call(this.ObjectAddress, hAuthTicket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EUserHasLicenseForAppResult NativeUserHasLicenseForApp(IntPtr thisobj, UInt64 steamID, UInt32 appID);
		public EUserHasLicenseForAppResult UserHasLicenseForApp(UInt64 steamID, UInt32 appID) { var call = this.GetFunction<NativeUserHasLicenseForApp>(this.Functions.UserHasLicenseForApp); return call(this.ObjectAddress, steamID, appID); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsBehindNAT(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsBehindNAT() { var call = this.GetFunction<NativeIsBehindNAT>(this.Functions.IsBehindNAT); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAdvertiseGame(IntPtr thisobj, UInt64 steamIDGameServer, UInt32 arg2, UInt16 usPortServer);
		[return: MarshalAs(UnmanagedType.I1)] public bool AdvertiseGame(UInt64 steamIDGameServer, UInt32 arg2, UInt16 usPortServer) { var call = this.GetFunction<NativeAdvertiseGame>(this.Functions.AdvertiseGame); return call(this.ObjectAddress, steamIDGameServer, arg2, usPortServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeRequestEncryptedAppTicket(IntPtr thisobj, byte[] pUserData, Int32 cbUserData);
		public UInt64 RequestEncryptedAppTicket(byte[] pUserData, Int32 cbUserData) { var call = this.GetFunction<NativeRequestEncryptedAppTicket>(this.Functions.RequestEncryptedAppTicket); return call(this.ObjectAddress, pUserData, cbUserData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetEncryptedAppTicket(IntPtr thisobj, byte[] pTicket, Int32 cbMaxTicket, ref UInt32 pcbTicket);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetEncryptedAppTicket(byte[] pTicket, Int32 cbMaxTicket, ref UInt32 pcbTicket) { var call = this.GetFunction<NativeGetEncryptedAppTicket>(this.Functions.GetEncryptedAppTicket); return call(this.ObjectAddress, pTicket, cbMaxTicket, ref pcbTicket); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamRemoteStorage001VTable
	{
		public IntPtr FileWrite;
		public IntPtr GetFileSize;
		public IntPtr FileRead;
		public IntPtr FileExists;
		public IntPtr FileDelete;
		public IntPtr GetFileCount;
		public IntPtr GetFileNameAndSize;
		public IntPtr GetQuota;
	}
	
	public class ISteamRemoteStorage001 : NativeWrapper<ISteamRemoteStorage001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeFileWrite(IntPtr thisobj, string filename, byte[] data, Int32 arg3);
		[return: MarshalAs(UnmanagedType.I1)] public bool FileWrite(string filename, byte[] data, Int32 arg3) { var call = this.GetFunction<NativeFileWrite>(this.Functions.FileWrite); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( filename ) ), data, arg3); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetFileSize(IntPtr thisobj, string filename);
		public UInt32 GetFileSize(string filename) { var call = this.GetFunction<NativeGetFileSize>(this.Functions.GetFileSize); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( filename ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeFileRead(IntPtr thisobj, string filename, byte[] buffer, Int32 size);
		[return: MarshalAs(UnmanagedType.I1)] public bool FileRead(string filename, byte[] buffer, Int32 size) { var call = this.GetFunction<NativeFileRead>(this.Functions.FileRead); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( filename ) ), buffer, size); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeFileExists(IntPtr thisobj, string filename);
		[return: MarshalAs(UnmanagedType.I1)] public bool FileExists(string filename) { var call = this.GetFunction<NativeFileExists>(this.Functions.FileExists); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( filename ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeFileDelete(IntPtr thisobj, string filename);
		[return: MarshalAs(UnmanagedType.I1)] public bool FileDelete(string filename) { var call = this.GetFunction<NativeFileDelete>(this.Functions.FileDelete); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( filename ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetFileCount(IntPtr thisobj);
		public UInt32 GetFileCount() { var call = this.GetFunction<NativeGetFileCount>(this.Functions.GetFileCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFileNameAndSize(IntPtr thisobj, Int32 index, ref Int32 size);
		public string GetFileNameAndSize(Int32 index, ref Int32 size) { var call = this.GetFunction<NativeGetFileNameAndSize>(this.Functions.GetFileNameAndSize); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, index, ref size) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetQuota(IntPtr thisobj, ref Int32 current, ref Int32 maximum);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetQuota(ref Int32 current, ref Int32 maximum) { var call = this.GetFunction<NativeGetQuota>(this.Functions.GetQuota); return call(this.ObjectAddress, ref current, ref maximum); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamRemoteStorage002VTable
	{
		public IntPtr FileWrite;
		public IntPtr GetFileSize;
		public IntPtr FileRead;
		public IntPtr FileExists;
		public IntPtr GetFileCount;
		public IntPtr GetFileNameAndSize;
		public IntPtr GetQuota;
	}
	
	public class ISteamRemoteStorage002 : NativeWrapper<ISteamRemoteStorage002VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeFileWrite(IntPtr thisobj, string pchFile, byte[] pvData, Int32 cubData);
		[return: MarshalAs(UnmanagedType.I1)] public bool FileWrite(string pchFile, byte[] pvData, Int32 cubData) { var call = this.GetFunction<NativeFileWrite>(this.Functions.FileWrite); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) ), pvData, cubData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFileSize(IntPtr thisobj, string pchFile);
		public Int32 GetFileSize(string pchFile) { var call = this.GetFunction<NativeGetFileSize>(this.Functions.GetFileSize); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFileRead(IntPtr thisobj, string pchFile, byte[] pvData, Int32 cubDataToRead);
		public Int32 FileRead(string pchFile, byte[] pvData, Int32 cubDataToRead) { var call = this.GetFunction<NativeFileRead>(this.Functions.FileRead); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) ), pvData, cubDataToRead); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeFileExists(IntPtr thisobj, string pchFile);
		[return: MarshalAs(UnmanagedType.I1)] public bool FileExists(string pchFile) { var call = this.GetFunction<NativeFileExists>(this.Functions.FileExists); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFileCount(IntPtr thisobj);
		public Int32 GetFileCount() { var call = this.GetFunction<NativeGetFileCount>(this.Functions.GetFileCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFileNameAndSize(IntPtr thisobj, Int32 iFile, ref Int32 pnFileSizeInBytes);
		public string GetFileNameAndSize(Int32 iFile, ref Int32 pnFileSizeInBytes) { var call = this.GetFunction<NativeGetFileNameAndSize>(this.Functions.GetFileNameAndSize); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, iFile, ref pnFileSizeInBytes) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetQuota(IntPtr thisobj, ref Int32 pnTotalBytes, ref Int32 puAvailableBytes);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetQuota(ref Int32 pnTotalBytes, ref Int32 puAvailableBytes) { var call = this.GetFunction<NativeGetQuota>(this.Functions.GetQuota); return call(this.ObjectAddress, ref pnTotalBytes, ref puAvailableBytes); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamMatchmakingServers001VTable
	{
		public IntPtr RequestInternetServerList;
		public IntPtr RequestLANServerList;
		public IntPtr RequestFriendsServerList;
		public IntPtr RequestFavoritesServerList;
		public IntPtr RequestHistoryServerList;
		public IntPtr RequestSpectatorServerList;
		public IntPtr GetServerDetails;
		public IntPtr CancelQuery;
		public IntPtr RefreshQuery;
		public IntPtr IsRefreshing;
		public IntPtr GetServerCount;
		public IntPtr RefreshServer;
		public IntPtr PingServer;
		public IntPtr PlayerDetails;
		public IntPtr ServerRules;
		public IntPtr CancelServerQuery;
	}
	
	public class ISteamMatchmakingServers001 : NativeWrapper<ISteamMatchmakingServers001VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRequestInternetServerList(IntPtr thisobj, UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse001 pRequestServersResponse);
		public void RequestInternetServerList(UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse001 pRequestServersResponse) { var call = this.GetFunction<NativeRequestInternetServerList>(this.Functions.RequestInternetServerList); call(this.ObjectAddress, iApp, ref ppchFilters, nFilters, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRequestLANServerList(IntPtr thisobj, UInt32 iApp, ref ISteamMatchmakingServerListResponse001 pRequestServersResponse);
		public void RequestLANServerList(UInt32 iApp, ref ISteamMatchmakingServerListResponse001 pRequestServersResponse) { var call = this.GetFunction<NativeRequestLANServerList>(this.Functions.RequestLANServerList); call(this.ObjectAddress, iApp, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRequestFriendsServerList(IntPtr thisobj, UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse001 pRequestServersResponse);
		public void RequestFriendsServerList(UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse001 pRequestServersResponse) { var call = this.GetFunction<NativeRequestFriendsServerList>(this.Functions.RequestFriendsServerList); call(this.ObjectAddress, iApp, ref ppchFilters, nFilters, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRequestFavoritesServerList(IntPtr thisobj, UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse001 pRequestServersResponse);
		public void RequestFavoritesServerList(UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse001 pRequestServersResponse) { var call = this.GetFunction<NativeRequestFavoritesServerList>(this.Functions.RequestFavoritesServerList); call(this.ObjectAddress, iApp, ref ppchFilters, nFilters, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRequestHistoryServerList(IntPtr thisobj, UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse001 pRequestServersResponse);
		public void RequestHistoryServerList(UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse001 pRequestServersResponse) { var call = this.GetFunction<NativeRequestHistoryServerList>(this.Functions.RequestHistoryServerList); call(this.ObjectAddress, iApp, ref ppchFilters, nFilters, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRequestSpectatorServerList(IntPtr thisobj, UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse001 pRequestServersResponse);
		public void RequestSpectatorServerList(UInt32 iApp, ref MatchMakingKeyValuePair_t ppchFilters, UInt32 nFilters, ref ISteamMatchmakingServerListResponse001 pRequestServersResponse) { var call = this.GetFunction<NativeRequestSpectatorServerList>(this.Functions.RequestSpectatorServerList); call(this.ObjectAddress, iApp, ref ppchFilters, nFilters, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate gameserveritem_t NativeGetServerDetails(IntPtr thisobj, EMatchMakingType eType, Int32 iServer);
		public gameserveritem_t GetServerDetails(EMatchMakingType eType, Int32 iServer) { var call = this.GetFunction<NativeGetServerDetails>(this.Functions.GetServerDetails); return call(this.ObjectAddress, eType, iServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCancelQuery(IntPtr thisobj, EMatchMakingType eType);
		public void CancelQuery(EMatchMakingType eType) { var call = this.GetFunction<NativeCancelQuery>(this.Functions.CancelQuery); call(this.ObjectAddress, eType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRefreshQuery(IntPtr thisobj, EMatchMakingType eType);
		public void RefreshQuery(EMatchMakingType eType) { var call = this.GetFunction<NativeRefreshQuery>(this.Functions.RefreshQuery); call(this.ObjectAddress, eType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsRefreshing(IntPtr thisobj, EMatchMakingType eType);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsRefreshing(EMatchMakingType eType) { var call = this.GetFunction<NativeIsRefreshing>(this.Functions.IsRefreshing); return call(this.ObjectAddress, eType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetServerCount(IntPtr thisobj, EMatchMakingType eType);
		public Int32 GetServerCount(EMatchMakingType eType) { var call = this.GetFunction<NativeGetServerCount>(this.Functions.GetServerCount); return call(this.ObjectAddress, eType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeRefreshServer(IntPtr thisobj, EMatchMakingType eType, Int32 iServer);
		public void RefreshServer(EMatchMakingType eType, Int32 iServer) { var call = this.GetFunction<NativeRefreshServer>(this.Functions.RefreshServer); call(this.ObjectAddress, eType, iServer); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePingServer(IntPtr thisobj, UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingPingResponse pRequestServersResponse);
		public Int32 PingServer(UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingPingResponse pRequestServersResponse) { var call = this.GetFunction<NativePingServer>(this.Functions.PingServer); return call(this.ObjectAddress, unIP, usPort, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativePlayerDetails(IntPtr thisobj, UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingPlayersResponse pRequestServersResponse);
		public Int32 PlayerDetails(UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingPlayersResponse pRequestServersResponse) { var call = this.GetFunction<NativePlayerDetails>(this.Functions.PlayerDetails); return call(this.ObjectAddress, unIP, usPort, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeServerRules(IntPtr thisobj, UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingRulesResponse pRequestServersResponse);
		public Int32 ServerRules(UInt32 unIP, UInt16 usPort, ref ISteamMatchmakingRulesResponse pRequestServersResponse) { var call = this.GetFunction<NativeServerRules>(this.Functions.ServerRules); return call(this.ObjectAddress, unIP, usPort, ref pRequestServersResponse); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCancelServerQuery(IntPtr thisobj, Int32 hServerQuery);
		public void CancelServerQuery(Int32 hServerQuery) { var call = this.GetFunction<NativeCancelServerQuery>(this.Functions.CancelServerQuery); call(this.ObjectAddress, hServerQuery); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamGameServer005VTable
	{
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr Secure;
		public IntPtr GetSteamID;
		public IntPtr SendUserConnectAndAuthenticate;
		public IntPtr CreateUnauthenticatedUserConnection;
		public IntPtr SendUserDisconnect;
		public IntPtr UpdateUserData;
		public IntPtr SetServerType;
		public IntPtr UpdateServerStatus;
		public IntPtr UpdateSpectatorPort;
		public IntPtr SetGameType;
		public IntPtr GetUserAchievementStatus;
		public IntPtr GetGameplayStats;
	}
	
	public class ISteamGameServer005 : NativeWrapper<ISteamGameServer005VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj);
		public void LogOn() { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSecure(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Secure() { var call = this.GetFunction<NativeSecure>(this.Functions.Secure); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetSteamID(IntPtr thisobj, ref UInt64 ret);
		public UInt64 GetSteamID() { UInt64 ret = 0; var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendUserConnectAndAuthenticate(IntPtr thisobj, UInt32 unIPClient, byte[] pvAuthBlob, UInt32 cubAuthBlobSize, ref UInt64 pSteamIDUser);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendUserConnectAndAuthenticate(UInt32 unIPClient, byte[] pvAuthBlob, UInt32 cubAuthBlobSize, ref UInt64 pSteamIDUser) { var call = this.GetFunction<NativeSendUserConnectAndAuthenticate>(this.Functions.SendUserConnectAndAuthenticate); return call(this.ObjectAddress, unIPClient, pvAuthBlob, cubAuthBlobSize, ref pSteamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCreateUnauthenticatedUserConnection(IntPtr thisobj, ref UInt64 ret);
		public UInt64 CreateUnauthenticatedUserConnection() { UInt64 ret = 0; var call = this.GetFunction<NativeCreateUnauthenticatedUserConnection>(this.Functions.CreateUnauthenticatedUserConnection); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSendUserDisconnect(IntPtr thisobj, UInt64 steamIDUser);
		public void SendUserDisconnect(UInt64 steamIDUser) { var call = this.GetFunction<NativeSendUserDisconnect>(this.Functions.SendUserDisconnect); call(this.ObjectAddress, steamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateUserData(IntPtr thisobj, UInt64 steamIDUser, string pchPlayerName, UInt32 uScore);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateUserData(UInt64 steamIDUser, string pchPlayerName, UInt32 uScore) { var call = this.GetFunction<NativeUpdateUserData>(this.Functions.UpdateUserData); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPlayerName ) ), uScore); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetServerType(IntPtr thisobj, UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 unSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetServerType(UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 unSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode) { var call = this.GetFunction<NativeSetServerType>(this.Functions.SetServerType); return call(this.ObjectAddress, unServerFlags, unGameIP, unGamePort, unSpectatorPort, usQueryPort, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchGameDir ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) ), bLANMode); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateServerStatus(IntPtr thisobj, Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName);
		public void UpdateServerStatus(Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName) { var call = this.GetFunction<NativeUpdateServerStatus>(this.Functions.UpdateServerStatus); call(this.ObjectAddress, cPlayers, cPlayersMax, cBotPlayers, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchServerName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pSpectatorServerName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchMapName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateSpectatorPort(IntPtr thisobj, UInt16 unSpectatorPort);
		public void UpdateSpectatorPort(UInt16 unSpectatorPort) { var call = this.GetFunction<NativeUpdateSpectatorPort>(this.Functions.UpdateSpectatorPort); call(this.ObjectAddress, unSpectatorPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetGameType(IntPtr thisobj, string pchGameType);
		public void SetGameType(string pchGameType) { var call = this.GetFunction<NativeSetGameType>(this.Functions.SetGameType); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchGameType ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserAchievementStatus(IntPtr thisobj, UInt64 steamID, string pchAchievementName);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserAchievementStatus(UInt64 steamID, string pchAchievementName) { var call = this.GetFunction<NativeGetUserAchievementStatus>(this.Functions.GetUserAchievementStatus); return call(this.ObjectAddress, steamID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAchievementName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetGameplayStats(IntPtr thisobj);
		public void GetGameplayStats() { var call = this.GetFunction<NativeGetGameplayStats>(this.Functions.GetGameplayStats); call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamGameServer006VTable
	{
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr Secure;
		public IntPtr GetSteamID;
		public IntPtr SendUserConnectAndAuthenticate;
		public IntPtr CreateUnauthenticatedUserConnection;
		public IntPtr SendUserDisconnect;
		public IntPtr UpdateUserData;
		public IntPtr SetServerType;
		public IntPtr UpdateServerStatus;
		public IntPtr UpdateSpectatorPort;
		public IntPtr SetGameType;
		public IntPtr GetUserAchievementStatus;
		public IntPtr GetGameplayStats;
	}
	
	public class ISteamGameServer006 : NativeWrapper<ISteamGameServer006VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj);
		public void LogOn() { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSecure(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Secure() { var call = this.GetFunction<NativeSecure>(this.Functions.Secure); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetSteamID(IntPtr thisobj, ref UInt64 ret);
		public UInt64 GetSteamID() { UInt64 ret = 0; var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendUserConnectAndAuthenticate(IntPtr thisobj, UInt32 unIPClient, byte[] pvAuthBlob, UInt32 cubAuthBlobSize, ref UInt64 pSteamIDUser);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendUserConnectAndAuthenticate(UInt32 unIPClient, byte[] pvAuthBlob, UInt32 cubAuthBlobSize, ref UInt64 pSteamIDUser) { var call = this.GetFunction<NativeSendUserConnectAndAuthenticate>(this.Functions.SendUserConnectAndAuthenticate); return call(this.ObjectAddress, unIPClient, pvAuthBlob, cubAuthBlobSize, ref pSteamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCreateUnauthenticatedUserConnection(IntPtr thisobj, ref UInt64 ret);
		public UInt64 CreateUnauthenticatedUserConnection() { UInt64 ret = 0; var call = this.GetFunction<NativeCreateUnauthenticatedUserConnection>(this.Functions.CreateUnauthenticatedUserConnection); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSendUserDisconnect(IntPtr thisobj, UInt64 steamIDUser);
		public void SendUserDisconnect(UInt64 steamIDUser) { var call = this.GetFunction<NativeSendUserDisconnect>(this.Functions.SendUserDisconnect); call(this.ObjectAddress, steamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateUserData(IntPtr thisobj, UInt64 steamIDUser, string pchPlayerName, UInt32 uScore);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateUserData(UInt64 steamIDUser, string pchPlayerName, UInt32 uScore) { var call = this.GetFunction<NativeUpdateUserData>(this.Functions.UpdateUserData); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPlayerName ) ), uScore); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetServerType(IntPtr thisobj, UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 unSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetServerType(UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 unSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode) { var call = this.GetFunction<NativeSetServerType>(this.Functions.SetServerType); return call(this.ObjectAddress, unServerFlags, unGameIP, unGamePort, unSpectatorPort, usQueryPort, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchGameDir ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) ), bLANMode); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateServerStatus(IntPtr thisobj, Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName);
		public void UpdateServerStatus(Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName) { var call = this.GetFunction<NativeUpdateServerStatus>(this.Functions.UpdateServerStatus); call(this.ObjectAddress, cPlayers, cPlayersMax, cBotPlayers, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchServerName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pSpectatorServerName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchMapName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateSpectatorPort(IntPtr thisobj, UInt16 unSpectatorPort);
		public void UpdateSpectatorPort(UInt16 unSpectatorPort) { var call = this.GetFunction<NativeUpdateSpectatorPort>(this.Functions.UpdateSpectatorPort); call(this.ObjectAddress, unSpectatorPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetGameType(IntPtr thisobj, string pchGameType);
		public void SetGameType(string pchGameType) { var call = this.GetFunction<NativeSetGameType>(this.Functions.SetGameType); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchGameType ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserAchievementStatus(IntPtr thisobj, UInt64 steamID, string pchAchievementName);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserAchievementStatus(UInt64 steamID, string pchAchievementName) { var call = this.GetFunction<NativeGetUserAchievementStatus>(this.Functions.GetUserAchievementStatus); return call(this.ObjectAddress, steamID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAchievementName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetGameplayStats(IntPtr thisobj);
		public void GetGameplayStats() { var call = this.GetFunction<NativeGetGameplayStats>(this.Functions.GetGameplayStats); call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamGameServer007VTable
	{
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr Secure;
		public IntPtr GetSteamID;
		public IntPtr SendUserConnectAndAuthenticate;
		public IntPtr CreateUnauthenticatedUserConnection;
		public IntPtr SendUserDisconnect;
		public IntPtr UpdateUserData;
		public IntPtr SetServerType;
		public IntPtr UpdateServerStatus;
		public IntPtr UpdateSpectatorPort;
		public IntPtr SetGameType;
		public IntPtr GetUserAchievementStatus;
		public IntPtr GetGameplayStats;
		public IntPtr RequestUserGroupStatus;
	}
	
	public class ISteamGameServer007 : NativeWrapper<ISteamGameServer007VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj);
		public void LogOn() { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSecure(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Secure() { var call = this.GetFunction<NativeSecure>(this.Functions.Secure); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetSteamID(IntPtr thisobj, ref UInt64 ret);
		public UInt64 GetSteamID() { UInt64 ret = 0; var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendUserConnectAndAuthenticate(IntPtr thisobj, UInt32 unIPClient, byte[] pvAuthBlob, UInt32 cubAuthBlobSize, ref UInt64 pSteamIDUser);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendUserConnectAndAuthenticate(UInt32 unIPClient, byte[] pvAuthBlob, UInt32 cubAuthBlobSize, ref UInt64 pSteamIDUser) { var call = this.GetFunction<NativeSendUserConnectAndAuthenticate>(this.Functions.SendUserConnectAndAuthenticate); return call(this.ObjectAddress, unIPClient, pvAuthBlob, cubAuthBlobSize, ref pSteamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCreateUnauthenticatedUserConnection(IntPtr thisobj, ref UInt64 ret);
		public UInt64 CreateUnauthenticatedUserConnection() { UInt64 ret = 0; var call = this.GetFunction<NativeCreateUnauthenticatedUserConnection>(this.Functions.CreateUnauthenticatedUserConnection); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSendUserDisconnect(IntPtr thisobj, UInt64 steamIDUser);
		public void SendUserDisconnect(UInt64 steamIDUser) { var call = this.GetFunction<NativeSendUserDisconnect>(this.Functions.SendUserDisconnect); call(this.ObjectAddress, steamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateUserData(IntPtr thisobj, UInt64 steamIDUser, string pchPlayerName, UInt32 uScore);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateUserData(UInt64 steamIDUser, string pchPlayerName, UInt32 uScore) { var call = this.GetFunction<NativeUpdateUserData>(this.Functions.UpdateUserData); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPlayerName ) ), uScore); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetServerType(IntPtr thisobj, UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 unSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetServerType(UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 unSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode) { var call = this.GetFunction<NativeSetServerType>(this.Functions.SetServerType); return call(this.ObjectAddress, unServerFlags, unGameIP, unGamePort, unSpectatorPort, usQueryPort, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchGameDir ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) ), bLANMode); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateServerStatus(IntPtr thisobj, Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName);
		public void UpdateServerStatus(Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName) { var call = this.GetFunction<NativeUpdateServerStatus>(this.Functions.UpdateServerStatus); call(this.ObjectAddress, cPlayers, cPlayersMax, cBotPlayers, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchServerName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pSpectatorServerName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchMapName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateSpectatorPort(IntPtr thisobj, UInt16 unSpectatorPort);
		public void UpdateSpectatorPort(UInt16 unSpectatorPort) { var call = this.GetFunction<NativeUpdateSpectatorPort>(this.Functions.UpdateSpectatorPort); call(this.ObjectAddress, unSpectatorPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetGameType(IntPtr thisobj, string pchGameType);
		public void SetGameType(string pchGameType) { var call = this.GetFunction<NativeSetGameType>(this.Functions.SetGameType); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchGameType ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserAchievementStatus(IntPtr thisobj, UInt64 steamID, string pchAchievementName);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserAchievementStatus(UInt64 steamID, string pchAchievementName) { var call = this.GetFunction<NativeGetUserAchievementStatus>(this.Functions.GetUserAchievementStatus); return call(this.ObjectAddress, steamID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAchievementName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetGameplayStats(IntPtr thisobj);
		public void GetGameplayStats() { var call = this.GetFunction<NativeGetGameplayStats>(this.Functions.GetGameplayStats); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestUserGroupStatus(IntPtr thisobj, UInt64 steamIDUser, UInt64 steamIDGroup);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestUserGroupStatus(UInt64 steamIDUser, UInt64 steamIDGroup) { var call = this.GetFunction<NativeRequestUserGroupStatus>(this.Functions.RequestUserGroupStatus); return call(this.ObjectAddress, steamIDUser, steamIDGroup); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamGameServer008VTable
	{
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr Secure;
		public IntPtr GetSteamID;
		public IntPtr SendUserConnectAndAuthenticate;
		public IntPtr CreateUnauthenticatedUserConnection;
		public IntPtr SendUserDisconnect;
		public IntPtr UpdateUserData;
		public IntPtr SetServerType;
		public IntPtr UpdateServerStatus;
		public IntPtr UpdateSpectatorPort;
		public IntPtr SetGameType;
		public IntPtr GetUserAchievementStatus;
		public IntPtr GetGameplayStats;
		public IntPtr RequestUserGroupStatus;
		public IntPtr GetPublicIP;
	}
	
	public class ISteamGameServer008 : NativeWrapper<ISteamGameServer008VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj);
		public void LogOn() { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSecure(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Secure() { var call = this.GetFunction<NativeSecure>(this.Functions.Secure); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetSteamID(IntPtr thisobj, ref UInt64 ret);
		public UInt64 GetSteamID() { UInt64 ret = 0; var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendUserConnectAndAuthenticate(IntPtr thisobj, UInt32 unIPClient, byte[] pvAuthBlob, UInt32 cubAuthBlobSize, ref UInt64 pSteamIDUser);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendUserConnectAndAuthenticate(UInt32 unIPClient, byte[] pvAuthBlob, UInt32 cubAuthBlobSize, ref UInt64 pSteamIDUser) { var call = this.GetFunction<NativeSendUserConnectAndAuthenticate>(this.Functions.SendUserConnectAndAuthenticate); return call(this.ObjectAddress, unIPClient, pvAuthBlob, cubAuthBlobSize, ref pSteamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCreateUnauthenticatedUserConnection(IntPtr thisobj, ref UInt64 ret);
		public UInt64 CreateUnauthenticatedUserConnection() { UInt64 ret = 0; var call = this.GetFunction<NativeCreateUnauthenticatedUserConnection>(this.Functions.CreateUnauthenticatedUserConnection); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSendUserDisconnect(IntPtr thisobj, UInt64 steamIDUser);
		public void SendUserDisconnect(UInt64 steamIDUser) { var call = this.GetFunction<NativeSendUserDisconnect>(this.Functions.SendUserDisconnect); call(this.ObjectAddress, steamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateUserData(IntPtr thisobj, UInt64 steamIDUser, string pchPlayerName, UInt32 uScore);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateUserData(UInt64 steamIDUser, string pchPlayerName, UInt32 uScore) { var call = this.GetFunction<NativeUpdateUserData>(this.Functions.UpdateUserData); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPlayerName ) ), uScore); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetServerType(IntPtr thisobj, UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 unSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetServerType(UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 unSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode) { var call = this.GetFunction<NativeSetServerType>(this.Functions.SetServerType); return call(this.ObjectAddress, unServerFlags, unGameIP, unGamePort, unSpectatorPort, usQueryPort, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchGameDir ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) ), bLANMode); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateServerStatus(IntPtr thisobj, Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName);
		public void UpdateServerStatus(Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName) { var call = this.GetFunction<NativeUpdateServerStatus>(this.Functions.UpdateServerStatus); call(this.ObjectAddress, cPlayers, cPlayersMax, cBotPlayers, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchServerName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pSpectatorServerName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchMapName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateSpectatorPort(IntPtr thisobj, UInt16 unSpectatorPort);
		public void UpdateSpectatorPort(UInt16 unSpectatorPort) { var call = this.GetFunction<NativeUpdateSpectatorPort>(this.Functions.UpdateSpectatorPort); call(this.ObjectAddress, unSpectatorPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetGameType(IntPtr thisobj, string pchGameType);
		public void SetGameType(string pchGameType) { var call = this.GetFunction<NativeSetGameType>(this.Functions.SetGameType); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchGameType ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetUserAchievementStatus(IntPtr thisobj, UInt64 steamID, string pchAchievementName);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetUserAchievementStatus(UInt64 steamID, string pchAchievementName) { var call = this.GetFunction<NativeGetUserAchievementStatus>(this.Functions.GetUserAchievementStatus); return call(this.ObjectAddress, steamID, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchAchievementName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetGameplayStats(IntPtr thisobj);
		public void GetGameplayStats() { var call = this.GetFunction<NativeGetGameplayStats>(this.Functions.GetGameplayStats); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestUserGroupStatus(IntPtr thisobj, UInt64 steamIDUser, UInt64 steamIDGroup);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestUserGroupStatus(UInt64 steamIDUser, UInt64 steamIDGroup) { var call = this.GetFunction<NativeRequestUserGroupStatus>(this.Functions.RequestUserGroupStatus); return call(this.ObjectAddress, steamIDUser, steamIDGroup); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetPublicIP(IntPtr thisobj);
		public UInt32 GetPublicIP() { var call = this.GetFunction<NativeGetPublicIP>(this.Functions.GetPublicIP); return call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamGameServer010VTable
	{
		public IntPtr LogOn;
		public IntPtr LogOff;
		public IntPtr LoggedOn;
		public IntPtr Secure;
		public IntPtr GetSteamID;
		public IntPtr SendUserConnectAndAuthenticate;
		public IntPtr CreateUnauthenticatedUserConnection;
		public IntPtr SendUserDisconnect;
		public IntPtr UpdateUserData;
		public IntPtr SetServerType;
		public IntPtr UpdateServerStatus;
		public IntPtr UpdateSpectatorPort;
		public IntPtr SetGameTags;
		public IntPtr GetGameplayStats;
		public IntPtr GetServerReputation;
		public IntPtr RequestUserGroupStatus;
		public IntPtr GetPublicIP;
		public IntPtr SetGameData;
		public IntPtr UserHasLicenseForApp;
	}
	
	public class ISteamGameServer010 : NativeWrapper<ISteamGameServer010VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOn(IntPtr thisobj);
		public void LogOn() { var call = this.GetFunction<NativeLogOn>(this.Functions.LogOn); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeLogOff(IntPtr thisobj);
		public void LogOff() { var call = this.GetFunction<NativeLogOff>(this.Functions.LogOff); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeLoggedOn(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool LoggedOn() { var call = this.GetFunction<NativeLoggedOn>(this.Functions.LoggedOn); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSecure(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool Secure() { var call = this.GetFunction<NativeSecure>(this.Functions.Secure); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetSteamID(IntPtr thisobj, ref UInt64 ret);
		public UInt64 GetSteamID() { UInt64 ret = 0; var call = this.GetFunction<NativeGetSteamID>(this.Functions.GetSteamID); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendUserConnectAndAuthenticate(IntPtr thisobj, UInt32 unIPClient, byte[] pvAuthBlob, UInt32 cubAuthBlobSize, ref UInt64 pSteamIDUser);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendUserConnectAndAuthenticate(UInt32 unIPClient, byte[] pvAuthBlob, UInt32 cubAuthBlobSize, ref UInt64 pSteamIDUser) { var call = this.GetFunction<NativeSendUserConnectAndAuthenticate>(this.Functions.SendUserConnectAndAuthenticate); return call(this.ObjectAddress, unIPClient, pvAuthBlob, cubAuthBlobSize, ref pSteamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeCreateUnauthenticatedUserConnection(IntPtr thisobj, ref UInt64 ret);
		public UInt64 CreateUnauthenticatedUserConnection() { UInt64 ret = 0; var call = this.GetFunction<NativeCreateUnauthenticatedUserConnection>(this.Functions.CreateUnauthenticatedUserConnection); call(this.ObjectAddress, ref ret); return ret; }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSendUserDisconnect(IntPtr thisobj, UInt64 steamIDUser);
		public void SendUserDisconnect(UInt64 steamIDUser) { var call = this.GetFunction<NativeSendUserDisconnect>(this.Functions.SendUserDisconnect); call(this.ObjectAddress, steamIDUser); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeUpdateUserData(IntPtr thisobj, UInt64 steamIDUser, string pchPlayerName, UInt32 uScore);
		[return: MarshalAs(UnmanagedType.I1)] public bool UpdateUserData(UInt64 steamIDUser, string pchPlayerName, UInt32 uScore) { var call = this.GetFunction<NativeUpdateUserData>(this.Functions.UpdateUserData); return call(this.ObjectAddress, steamIDUser, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchPlayerName ) ), uScore); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetServerType(IntPtr thisobj, UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 unSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetServerType(UInt32 unServerFlags, UInt32 unGameIP, UInt16 unGamePort, UInt16 unSpectatorPort, UInt16 usQueryPort, string pchGameDir, string pchVersion, [MarshalAs(UnmanagedType.I1)] bool bLANMode) { var call = this.GetFunction<NativeSetServerType>(this.Functions.SetServerType); return call(this.ObjectAddress, unServerFlags, unGameIP, unGamePort, unSpectatorPort, usQueryPort, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchGameDir ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchVersion ) ), bLANMode); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateServerStatus(IntPtr thisobj, Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName);
		public void UpdateServerStatus(Int32 cPlayers, Int32 cPlayersMax, Int32 cBotPlayers, string pchServerName, string pSpectatorServerName, string pchMapName) { var call = this.GetFunction<NativeUpdateServerStatus>(this.Functions.UpdateServerStatus); call(this.ObjectAddress, cPlayers, cPlayersMax, cBotPlayers, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchServerName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pSpectatorServerName ) ), Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchMapName ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeUpdateSpectatorPort(IntPtr thisobj, UInt16 unSpectatorPort);
		public void UpdateSpectatorPort(UInt16 unSpectatorPort) { var call = this.GetFunction<NativeUpdateSpectatorPort>(this.Functions.UpdateSpectatorPort); call(this.ObjectAddress, unSpectatorPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetGameTags(IntPtr thisobj, string pchGameTags);
		public void SetGameTags(string pchGameTags) { var call = this.GetFunction<NativeSetGameTags>(this.Functions.SetGameTags); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchGameTags ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetGameplayStats(IntPtr thisobj);
		public void GetGameplayStats() { var call = this.GetFunction<NativeGetGameplayStats>(this.Functions.GetGameplayStats); call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetServerReputation(IntPtr thisobj);
		public UInt64 GetServerReputation() { var call = this.GetFunction<NativeGetServerReputation>(this.Functions.GetServerReputation); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRequestUserGroupStatus(IntPtr thisobj, UInt64 steamIDUser, UInt64 steamIDGroup);
		[return: MarshalAs(UnmanagedType.I1)] public bool RequestUserGroupStatus(UInt64 steamIDUser, UInt64 steamIDGroup) { var call = this.GetFunction<NativeRequestUserGroupStatus>(this.Functions.RequestUserGroupStatus); return call(this.ObjectAddress, steamIDUser, steamIDGroup); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetPublicIP(IntPtr thisobj);
		public UInt32 GetPublicIP() { var call = this.GetFunction<NativeGetPublicIP>(this.Functions.GetPublicIP); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetGameData(IntPtr thisobj, string pchGameData);
		public void SetGameData(string pchGameData) { var call = this.GetFunction<NativeSetGameData>(this.Functions.SetGameData); call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchGameData ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EUserHasLicenseForAppResult NativeUserHasLicenseForApp(IntPtr thisobj, UInt64 steamID, UInt32 appID);
		public EUserHasLicenseForAppResult UserHasLicenseForApp(UInt64 steamID, UInt32 appID) { var call = this.GetFunction<NativeUserHasLicenseForApp>(this.Functions.UserHasLicenseForApp); return call(this.ObjectAddress, steamID, appID); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamNetworking003VTable
	{
		public IntPtr SendP2PPacket;
		public IntPtr IsP2PPacketAvailable;
		public IntPtr ReadP2PPacket;
		public IntPtr AcceptP2PSessionWithUser;
		public IntPtr CloseP2PSessionWithUser;
		public IntPtr GetP2PSessionState;
		public IntPtr CreateListenSocket;
		public IntPtr CreateP2PConnectionSocket;
		public IntPtr CreateConnectionSocket;
		public IntPtr DestroySocket;
		public IntPtr DestroyListenSocket;
		public IntPtr SendDataOnSocket;
		public IntPtr IsDataAvailableOnSocket;
		public IntPtr RetrieveDataFromSocket;
		public IntPtr IsDataAvailable;
		public IntPtr RetrieveData;
		public IntPtr GetSocketInfo;
		public IntPtr GetListenSocketInfo;
		public IntPtr GetSocketConnectionType;
		public IntPtr GetMaxPacketSize;
	}
	
	public class ISteamNetworking003 : NativeWrapper<ISteamNetworking003VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendP2PPacket(IntPtr thisobj, UInt64 steamIDRemote, byte[] pubData, UInt32 cubData, EP2PSend eP2PSendType);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendP2PPacket(UInt64 steamIDRemote, byte[] pubData, UInt32 cubData, EP2PSend eP2PSendType) { var call = this.GetFunction<NativeSendP2PPacket>(this.Functions.SendP2PPacket); return call(this.ObjectAddress, steamIDRemote, pubData, cubData, eP2PSendType); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsP2PPacketAvailable(IntPtr thisobj, ref UInt32 pcubMsgSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsP2PPacketAvailable(ref UInt32 pcubMsgSize) { var call = this.GetFunction<NativeIsP2PPacketAvailable>(this.Functions.IsP2PPacketAvailable); return call(this.ObjectAddress, ref pcubMsgSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeReadP2PPacket(IntPtr thisobj, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize, ref UInt64 psteamIDRemote);
		[return: MarshalAs(UnmanagedType.I1)] public bool ReadP2PPacket(byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize, ref UInt64 psteamIDRemote) { var call = this.GetFunction<NativeReadP2PPacket>(this.Functions.ReadP2PPacket); return call(this.ObjectAddress, pubDest, cubDest, ref pcubMsgSize, ref psteamIDRemote); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeAcceptP2PSessionWithUser(IntPtr thisobj, UInt64 steamIDRemote);
		[return: MarshalAs(UnmanagedType.I1)] public bool AcceptP2PSessionWithUser(UInt64 steamIDRemote) { var call = this.GetFunction<NativeAcceptP2PSessionWithUser>(this.Functions.AcceptP2PSessionWithUser); return call(this.ObjectAddress, steamIDRemote); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeCloseP2PSessionWithUser(IntPtr thisobj, UInt64 steamIDRemote);
		[return: MarshalAs(UnmanagedType.I1)] public bool CloseP2PSessionWithUser(UInt64 steamIDRemote) { var call = this.GetFunction<NativeCloseP2PSessionWithUser>(this.Functions.CloseP2PSessionWithUser); return call(this.ObjectAddress, steamIDRemote); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetP2PSessionState(IntPtr thisobj, UInt64 steamIDRemote, ref P2PSessionState_t pConnectionState);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetP2PSessionState(UInt64 steamIDRemote, ref P2PSessionState_t pConnectionState) { var call = this.GetFunction<NativeGetP2PSessionState>(this.Functions.GetP2PSessionState); return call(this.ObjectAddress, steamIDRemote, ref pConnectionState); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateListenSocket(IntPtr thisobj, Int32 nVirtualP2PPort, UInt32 nIP, UInt16 nPort, [MarshalAs(UnmanagedType.I1)] bool bAllowUseOfPacketRelay);
		public UInt32 CreateListenSocket(Int32 nVirtualP2PPort, UInt32 nIP, UInt16 nPort, [MarshalAs(UnmanagedType.I1)] bool bAllowUseOfPacketRelay) { var call = this.GetFunction<NativeCreateListenSocket>(this.Functions.CreateListenSocket); return call(this.ObjectAddress, nVirtualP2PPort, nIP, nPort, bAllowUseOfPacketRelay); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateP2PConnectionSocket(IntPtr thisobj, UInt64 steamIDTarget, Int32 nVirtualPort, Int32 nTimeoutSec, [MarshalAs(UnmanagedType.I1)] bool bAllowUseOfPacketRelay);
		public UInt32 CreateP2PConnectionSocket(UInt64 steamIDTarget, Int32 nVirtualPort, Int32 nTimeoutSec, [MarshalAs(UnmanagedType.I1)] bool bAllowUseOfPacketRelay) { var call = this.GetFunction<NativeCreateP2PConnectionSocket>(this.Functions.CreateP2PConnectionSocket); return call(this.ObjectAddress, steamIDTarget, nVirtualPort, nTimeoutSec, bAllowUseOfPacketRelay); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeCreateConnectionSocket(IntPtr thisobj, UInt32 nIP, UInt16 nPort, Int32 nTimeoutSec);
		public UInt32 CreateConnectionSocket(UInt32 nIP, UInt16 nPort, Int32 nTimeoutSec) { var call = this.GetFunction<NativeCreateConnectionSocket>(this.Functions.CreateConnectionSocket); return call(this.ObjectAddress, nIP, nPort, nTimeoutSec); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeDestroySocket(IntPtr thisobj, UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd);
		[return: MarshalAs(UnmanagedType.I1)] public bool DestroySocket(UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd) { var call = this.GetFunction<NativeDestroySocket>(this.Functions.DestroySocket); return call(this.ObjectAddress, hSocket, bNotifyRemoteEnd); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeDestroyListenSocket(IntPtr thisobj, UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd);
		[return: MarshalAs(UnmanagedType.I1)] public bool DestroyListenSocket(UInt32 hSocket, [MarshalAs(UnmanagedType.I1)] bool bNotifyRemoteEnd) { var call = this.GetFunction<NativeDestroyListenSocket>(this.Functions.DestroyListenSocket); return call(this.ObjectAddress, hSocket, bNotifyRemoteEnd); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSendDataOnSocket(IntPtr thisobj, UInt32 hSocket, byte[] pubData, UInt32 cubData, [MarshalAs(UnmanagedType.I1)] bool bReliable);
		[return: MarshalAs(UnmanagedType.I1)] public bool SendDataOnSocket(UInt32 hSocket, byte[] pubData, UInt32 cubData, [MarshalAs(UnmanagedType.I1)] bool bReliable) { var call = this.GetFunction<NativeSendDataOnSocket>(this.Functions.SendDataOnSocket); return call(this.ObjectAddress, hSocket, pubData, cubData, bReliable); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsDataAvailableOnSocket(IntPtr thisobj, UInt32 hSocket, ref UInt32 pcubMsgSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsDataAvailableOnSocket(UInt32 hSocket, ref UInt32 pcubMsgSize) { var call = this.GetFunction<NativeIsDataAvailableOnSocket>(this.Functions.IsDataAvailableOnSocket); return call(this.ObjectAddress, hSocket, ref pcubMsgSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRetrieveDataFromSocket(IntPtr thisobj, UInt32 hSocket, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize);
		[return: MarshalAs(UnmanagedType.I1)] public bool RetrieveDataFromSocket(UInt32 hSocket, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize) { var call = this.GetFunction<NativeRetrieveDataFromSocket>(this.Functions.RetrieveDataFromSocket); return call(this.ObjectAddress, hSocket, pubDest, cubDest, ref pcubMsgSize); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsDataAvailable(IntPtr thisobj, UInt32 hListenSocket, ref UInt32 pcubMsgSize, ref UInt32 phSocket);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsDataAvailable(UInt32 hListenSocket, ref UInt32 pcubMsgSize, ref UInt32 phSocket) { var call = this.GetFunction<NativeIsDataAvailable>(this.Functions.IsDataAvailable); return call(this.ObjectAddress, hListenSocket, ref pcubMsgSize, ref phSocket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeRetrieveData(IntPtr thisobj, UInt32 hListenSocket, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize, ref UInt32 phSocket);
		[return: MarshalAs(UnmanagedType.I1)] public bool RetrieveData(UInt32 hListenSocket, byte[] pubDest, UInt32 cubDest, ref UInt32 pcubMsgSize, ref UInt32 phSocket) { var call = this.GetFunction<NativeRetrieveData>(this.Functions.RetrieveData); return call(this.ObjectAddress, hListenSocket, pubDest, cubDest, ref pcubMsgSize, ref phSocket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetSocketInfo(IntPtr thisobj, UInt32 hSocket, ref UInt64 pSteamIDRemote, ref Int32 peSocketStatus, ref UInt32 punIPRemote, ref UInt16 punPortRemote);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetSocketInfo(UInt32 hSocket, ref UInt64 pSteamIDRemote, ref Int32 peSocketStatus, ref UInt32 punIPRemote, ref UInt16 punPortRemote) { var call = this.GetFunction<NativeGetSocketInfo>(this.Functions.GetSocketInfo); return call(this.ObjectAddress, hSocket, ref pSteamIDRemote, ref peSocketStatus, ref punIPRemote, ref punPortRemote); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetListenSocketInfo(IntPtr thisobj, UInt32 hListenSocket, ref UInt32 pnIP, ref UInt16 pnPort);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetListenSocketInfo(UInt32 hListenSocket, ref UInt32 pnIP, ref UInt16 pnPort) { var call = this.GetFunction<NativeGetListenSocketInfo>(this.Functions.GetListenSocketInfo); return call(this.ObjectAddress, hListenSocket, ref pnIP, ref pnPort); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ESNetSocketConnectionType NativeGetSocketConnectionType(IntPtr thisobj, UInt32 hSocket);
		public ESNetSocketConnectionType GetSocketConnectionType(UInt32 hSocket) { var call = this.GetFunction<NativeGetSocketConnectionType>(this.Functions.GetSocketConnectionType); return call(this.ObjectAddress, hSocket); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetMaxPacketSize(IntPtr thisobj, UInt32 hSocket);
		public Int32 GetMaxPacketSize(UInt32 hSocket) { var call = this.GetFunction<NativeGetMaxPacketSize>(this.Functions.GetMaxPacketSize); return call(this.ObjectAddress, hSocket); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamRemoteStorage003VTable
	{
		public IntPtr FileWrite;
		public IntPtr FileRead;
		public IntPtr FileForget;
		public IntPtr FileDelete;
		public IntPtr FileShare;
		public IntPtr FileExists;
		public IntPtr FilePersisted;
		public IntPtr GetFileSize;
		public IntPtr GetFileTimestamp;
		public IntPtr GetFileCount;
		public IntPtr GetFileNameAndSize;
		public IntPtr GetQuota;
		public IntPtr IsCloudEnabledForAccount;
		public IntPtr IsCloudEnabledThisApp;
		public IntPtr SetCloudEnabledThisApp;
		public IntPtr UGCDownload;
		public IntPtr GetUGCDetails;
		public IntPtr UGCRead;
		public IntPtr GetCachedUGCCount;
		public IntPtr GetCachedUGCHandle;
	}
	
	public class ISteamRemoteStorage003 : NativeWrapper<ISteamRemoteStorage003VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeFileWrite(IntPtr thisobj, string pchFile, byte[] pvData, Int32 cubData);
		[return: MarshalAs(UnmanagedType.I1)] public bool FileWrite(string pchFile, byte[] pvData, Int32 cubData) { var call = this.GetFunction<NativeFileWrite>(this.Functions.FileWrite); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) ), pvData, cubData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFileRead(IntPtr thisobj, string pchFile, byte[] pvData, Int32 cubDataToRead);
		public Int32 FileRead(string pchFile, byte[] pvData, Int32 cubDataToRead) { var call = this.GetFunction<NativeFileRead>(this.Functions.FileRead); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) ), pvData, cubDataToRead); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeFileForget(IntPtr thisobj, string pchFile);
		[return: MarshalAs(UnmanagedType.I1)] public bool FileForget(string pchFile) { var call = this.GetFunction<NativeFileForget>(this.Functions.FileForget); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeFileDelete(IntPtr thisobj, string pchFile);
		[return: MarshalAs(UnmanagedType.I1)] public bool FileDelete(string pchFile) { var call = this.GetFunction<NativeFileDelete>(this.Functions.FileDelete); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeFileShare(IntPtr thisobj, string pchFile);
		public UInt64 FileShare(string pchFile) { var call = this.GetFunction<NativeFileShare>(this.Functions.FileShare); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeFileExists(IntPtr thisobj, string pchFile);
		[return: MarshalAs(UnmanagedType.I1)] public bool FileExists(string pchFile) { var call = this.GetFunction<NativeFileExists>(this.Functions.FileExists); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeFilePersisted(IntPtr thisobj, string pchFile);
		[return: MarshalAs(UnmanagedType.I1)] public bool FilePersisted(string pchFile) { var call = this.GetFunction<NativeFilePersisted>(this.Functions.FilePersisted); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFileSize(IntPtr thisobj, string pchFile);
		public Int32 GetFileSize(string pchFile) { var call = this.GetFunction<NativeGetFileSize>(this.Functions.GetFileSize); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int64 NativeGetFileTimestamp(IntPtr thisobj, string pchFile);
		public Int64 GetFileTimestamp(string pchFile) { var call = this.GetFunction<NativeGetFileTimestamp>(this.Functions.GetFileTimestamp); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFileCount(IntPtr thisobj);
		public Int32 GetFileCount() { var call = this.GetFunction<NativeGetFileCount>(this.Functions.GetFileCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFileNameAndSize(IntPtr thisobj, Int32 iFile, ref Int32 pnFileSizeInBytes);
		public string GetFileNameAndSize(Int32 iFile, ref Int32 pnFileSizeInBytes) { var call = this.GetFunction<NativeGetFileNameAndSize>(this.Functions.GetFileNameAndSize); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, iFile, ref pnFileSizeInBytes) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetQuota(IntPtr thisobj, ref Int32 pnTotalBytes, ref Int32 puAvailableBytes);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetQuota(ref Int32 pnTotalBytes, ref Int32 puAvailableBytes) { var call = this.GetFunction<NativeGetQuota>(this.Functions.GetQuota); return call(this.ObjectAddress, ref pnTotalBytes, ref puAvailableBytes); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsCloudEnabledForAccount(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsCloudEnabledForAccount() { var call = this.GetFunction<NativeIsCloudEnabledForAccount>(this.Functions.IsCloudEnabledForAccount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsCloudEnabledThisApp(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsCloudEnabledThisApp() { var call = this.GetFunction<NativeIsCloudEnabledThisApp>(this.Functions.IsCloudEnabledThisApp); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetCloudEnabledThisApp(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bEnable);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetCloudEnabledThisApp([MarshalAs(UnmanagedType.I1)] bool bEnable) { var call = this.GetFunction<NativeSetCloudEnabledThisApp>(this.Functions.SetCloudEnabledThisApp); return call(this.ObjectAddress, bEnable); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeUGCDownload(IntPtr thisobj, Int32 unk1, Int32 unk2);
		public Int32 UGCDownload(Int32 unk1, Int32 unk2) { var call = this.GetFunction<NativeUGCDownload>(this.Functions.UGCDownload); return call(this.ObjectAddress, unk1, unk2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetUGCDetails(IntPtr thisobj, Int32 unk1, Int32 unk2, Int32 unk3, Int32 unk4, Int32 unk5, Int32 unk6);
		public Int32 GetUGCDetails(Int32 unk1, Int32 unk2, Int32 unk3, Int32 unk4, Int32 unk5, Int32 unk6) { var call = this.GetFunction<NativeGetUGCDetails>(this.Functions.GetUGCDetails); return call(this.ObjectAddress, unk1, unk2, unk3, unk4, unk5, unk6); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeUGCRead(IntPtr thisobj, Int32 unk1, Int32 unk2, Int32 unk3, Int32 unk4);
		public Int32 UGCRead(Int32 unk1, Int32 unk2, Int32 unk3, Int32 unk4) { var call = this.GetFunction<NativeUGCRead>(this.Functions.UGCRead); return call(this.ObjectAddress, unk1, unk2, unk3, unk4); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCachedUGCCount(IntPtr thisobj);
		public Int32 GetCachedUGCCount() { var call = this.GetFunction<NativeGetCachedUGCCount>(this.Functions.GetCachedUGCCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCachedUGCHandle(IntPtr thisobj);
		public Int32 GetCachedUGCHandle() { var call = this.GetFunction<NativeGetCachedUGCHandle>(this.Functions.GetCachedUGCHandle); return call(this.ObjectAddress); }

	}
	
	[StructLayout(LayoutKind.Sequential,CharSet=CharSet.Ansi,Pack=1)]
	public class ISteamRemoteStorage004VTable
	{
		public IntPtr FileWrite;
		public IntPtr FileRead;
		public IntPtr FileForget;
		public IntPtr FileDelete;
		public IntPtr FileShare;
		public IntPtr SetSyncPlatforms;
		public IntPtr FileExists;
		public IntPtr FilePersisted;
		public IntPtr GetFileSize;
		public IntPtr GetFileTimestamp;
		public IntPtr GetSyncPlatforms;
		public IntPtr GetFileCount;
		public IntPtr GetFileNameAndSize;
		public IntPtr GetQuota;
		public IntPtr IsCloudEnabledForAccount;
		public IntPtr IsCloudEnabledThisApp;
		public IntPtr SetCloudEnabledThisApp;
		public IntPtr UGCDownload;
		public IntPtr GetUGCDetails;
		public IntPtr UGCRead;
		public IntPtr GetCachedUGCCount;
		public IntPtr GetCachedUGCHandle;
	}
	
	public class ISteamRemoteStorage004 : NativeWrapper<ISteamRemoteStorage004VTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeFileWrite(IntPtr thisobj, string pchFile, byte[] pvData, Int32 cubData);
		[return: MarshalAs(UnmanagedType.I1)] public bool FileWrite(string pchFile, byte[] pvData, Int32 cubData) { var call = this.GetFunction<NativeFileWrite>(this.Functions.FileWrite); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) ), pvData, cubData); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeFileRead(IntPtr thisobj, string pchFile, byte[] pvData, Int32 cubDataToRead);
		public Int32 FileRead(string pchFile, byte[] pvData, Int32 cubDataToRead) { var call = this.GetFunction<NativeFileRead>(this.Functions.FileRead); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) ), pvData, cubDataToRead); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeFileForget(IntPtr thisobj, string pchFile);
		[return: MarshalAs(UnmanagedType.I1)] public bool FileForget(string pchFile) { var call = this.GetFunction<NativeFileForget>(this.Functions.FileForget); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeFileDelete(IntPtr thisobj, string pchFile);
		[return: MarshalAs(UnmanagedType.I1)] public bool FileDelete(string pchFile) { var call = this.GetFunction<NativeFileDelete>(this.Functions.FileDelete); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeFileShare(IntPtr thisobj, string pchFile);
		public UInt64 FileShare(string pchFile) { var call = this.GetFunction<NativeFileShare>(this.Functions.FileShare); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetSyncPlatforms(IntPtr thisobj, string pchFile, Int32 iUnk);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetSyncPlatforms(string pchFile, Int32 iUnk) { var call = this.GetFunction<NativeSetSyncPlatforms>(this.Functions.SetSyncPlatforms); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) ), iUnk); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeFileExists(IntPtr thisobj, string pchFile);
		[return: MarshalAs(UnmanagedType.I1)] public bool FileExists(string pchFile) { var call = this.GetFunction<NativeFileExists>(this.Functions.FileExists); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeFilePersisted(IntPtr thisobj, string pchFile);
		[return: MarshalAs(UnmanagedType.I1)] public bool FilePersisted(string pchFile) { var call = this.GetFunction<NativeFilePersisted>(this.Functions.FilePersisted); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFileSize(IntPtr thisobj, string pchFile);
		public Int32 GetFileSize(string pchFile) { var call = this.GetFunction<NativeGetFileSize>(this.Functions.GetFileSize); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int64 NativeGetFileTimestamp(IntPtr thisobj, string pchFile);
		public Int64 GetFileTimestamp(string pchFile) { var call = this.GetFunction<NativeGetFileTimestamp>(this.Functions.GetFileTimestamp); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSyncPlatforms(IntPtr thisobj, string pchFile);
		public Int32 GetSyncPlatforms(string pchFile) { var call = this.GetFunction<NativeGetSyncPlatforms>(this.Functions.GetSyncPlatforms); return call(this.ObjectAddress, Encoding.Default.GetString( Encoding.UTF8.GetBytes( pchFile ) )); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetFileCount(IntPtr thisobj);
		public Int32 GetFileCount() { var call = this.GetFunction<NativeGetFileCount>(this.Functions.GetFileCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate string NativeGetFileNameAndSize(IntPtr thisobj, Int32 iFile, ref Int32 pnFileSizeInBytes);
		public string GetFileNameAndSize(Int32 iFile, ref Int32 pnFileSizeInBytes) { var call = this.GetFunction<NativeGetFileNameAndSize>(this.Functions.GetFileNameAndSize); return Encoding.UTF8.GetString( Encoding.Default.GetBytes( call(this.ObjectAddress, iFile, ref pnFileSizeInBytes) ) ); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetQuota(IntPtr thisobj, ref Int32 pnTotalBytes, ref Int32 puAvailableBytes);
		[return: MarshalAs(UnmanagedType.I1)] public bool GetQuota(ref Int32 pnTotalBytes, ref Int32 puAvailableBytes) { var call = this.GetFunction<NativeGetQuota>(this.Functions.GetQuota); return call(this.ObjectAddress, ref pnTotalBytes, ref puAvailableBytes); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsCloudEnabledForAccount(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsCloudEnabledForAccount() { var call = this.GetFunction<NativeIsCloudEnabledForAccount>(this.Functions.IsCloudEnabledForAccount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsCloudEnabledThisApp(IntPtr thisobj);
		[return: MarshalAs(UnmanagedType.I1)] public bool IsCloudEnabledThisApp() { var call = this.GetFunction<NativeIsCloudEnabledThisApp>(this.Functions.IsCloudEnabledThisApp); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetCloudEnabledThisApp(IntPtr thisobj, [MarshalAs(UnmanagedType.I1)] bool bEnable);
		[return: MarshalAs(UnmanagedType.I1)] public bool SetCloudEnabledThisApp([MarshalAs(UnmanagedType.I1)] bool bEnable) { var call = this.GetFunction<NativeSetCloudEnabledThisApp>(this.Functions.SetCloudEnabledThisApp); return call(this.ObjectAddress, bEnable); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeUGCDownload(IntPtr thisobj, Int32 unk1, Int32 unk2);
		public Int32 UGCDownload(Int32 unk1, Int32 unk2) { var call = this.GetFunction<NativeUGCDownload>(this.Functions.UGCDownload); return call(this.ObjectAddress, unk1, unk2); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetUGCDetails(IntPtr thisobj, Int32 unk1, Int32 unk2, Int32 unk3, Int32 unk4, Int32 unk5, Int32 unk6);
		public Int32 GetUGCDetails(Int32 unk1, Int32 unk2, Int32 unk3, Int32 unk4, Int32 unk5, Int32 unk6) { var call = this.GetFunction<NativeGetUGCDetails>(this.Functions.GetUGCDetails); return call(this.ObjectAddress, unk1, unk2, unk3, unk4, unk5, unk6); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeUGCRead(IntPtr thisobj, Int32 unk1, Int32 unk2, Int32 unk3, Int32 unk4);
		public Int32 UGCRead(Int32 unk1, Int32 unk2, Int32 unk3, Int32 unk4) { var call = this.GetFunction<NativeUGCRead>(this.Functions.UGCRead); return call(this.ObjectAddress, unk1, unk2, unk3, unk4); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCachedUGCCount(IntPtr thisobj);
		public Int32 GetCachedUGCCount() { var call = this.GetFunction<NativeGetCachedUGCCount>(this.Functions.GetCachedUGCCount); return call(this.ObjectAddress); }

		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetCachedUGCHandle(IntPtr thisobj);
		public Int32 GetCachedUGCHandle() { var call = this.GetFunction<NativeGetCachedUGCHandle>(this.Functions.GetCachedUGCHandle); return call(this.ObjectAddress); }

	}
	
}
